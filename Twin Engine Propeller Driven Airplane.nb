(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    813336,      16203]
NotebookOptionsPosition[    795184,      15892]
NotebookOutlinePosition[    795660,      15910]
CellTagsIndexPosition[    795617,      15907]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Twin Engine Propeller Driven Airplane", "Title",
 CellChangeTimes->{{3.855758166228668*^9, 3.8557581740661917`*^9}, {
   3.855758592262044*^9, 3.855758610230028*^9}, {3.855758644760399*^9, 
   3.855758653174962*^9}, {3.8558105745739202`*^9, 3.85581057554427*^9}, 
   3.858272535957261*^9},ExpressionUUID->"f7e08502-4a0e-4ba6-ba80-\
03be77244f61"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"Context", "[", "]"}], "<>", "\"\<*\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8557602629652505`*^9, 3.855760281637295*^9}, 
   3.8558175704704304`*^9},
 CellLabel->
  "In[730]:=",ExpressionUUID->"0f728fdf-4872-43b8-af30-d4f432fb7698"],

Cell[CellGroupData[{

Cell["Weight Estimation", "Section",
 CellChangeTimes->{{3.8582606333068905`*^9, 
  3.8582606392330875`*^9}},ExpressionUUID->"e005d70a-dfd9-43db-8142-\
f8f720be78f5"],

Cell[CellGroupData[{

Cell["Mission Specification ", "Subsection",
 CellChangeTimes->{{3.8557392615395555`*^9, 
  3.8557392742804413`*^9}},ExpressionUUID->"e3d6fa18-57e2-4ab3-9c89-\
2653a3062dfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AirCraftType", "=", "\"\<Single Engine Propeller\>\""}], 
  ";"}], "\n", 
 RowBox[{"MS", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<D:\\\\Aerospace\\\\Aerospace-2023\\\\3_Third Year\\\\Second \
Semester\\\\AER 3910_Aircraft design and manufacture [125 \
marks]\\\\PreMidtermCode(TwinEngine)\\\\ExcelTables\\\\TwinMissionSpecs.csv\>\
\"", ",", "\"\<Dataset\>\"", ",", 
    RowBox[{"\"\<HeaderLines\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.8582746686295023`*^9, 3.8582746686335297`*^9}, {
   3.858274720181863*^9, 3.858274739046924*^9}, 3.8582750983524046`*^9, {
   3.8582751654269314`*^9, 3.8582751703621883`*^9}, {3.8582752351465144`*^9, 
   3.858275261665599*^9}, {3.8582807319107714`*^9, 3.8582807577444715`*^9}, 
   3.858280815050514*^9, {3.8589565973994904`*^9, 3.858956598941636*^9}, {
   3.858957238366619*^9, 3.8589572650816083`*^9}, {3.8590699516309557`*^9, 
   3.8590699576489787`*^9}, {3.85909417304638*^9, 3.859094177589773*^9}, {
   3.8590942535083475`*^9, 3.8590942553153453`*^9}, 3.8590943442004747`*^9},
 CellLabel->
  "In[731]:=",ExpressionUUID->"0fb9433f-587e-410e-bf16-659e2243e85a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Number of Phases" -> <|"Specs" -> 8, "Units" -> ""|>, 
       "Passengers Number" -> <|"Specs" -> 8, "Units" -> ""|>, 
       "Weight per person" -> <|
        "Specs" -> 175, "Units" -> "\"PoundsForce\""|>, 
       "Total baggage weight" -> <|
        "Specs" -> 200, "Units" -> "\"PoundsForce\""|>, 
       "Payload weight" -> <|"Specs" -> 1600, "Units" -> "\"PoundsForce\""|>, 
       "Range with max Payload" -> <|"Specs" -> 500, "Units" -> "\"Miles\""|>,
        "Reserves of required fuel" -> <|"Specs" -> 0.25, "Units" -> ""|>, 
       "Trapped fuel and oil" -> <|"Specs" -> 0.005, "Units" -> ""|>, 
       "Altitude for the design range" -> <|
        "Specs" -> 20000, "Units" -> "\"Feet\""|>, 
       "Cruise speed at 10,000 ft " -> <|
        "Specs" -> 300, "Units" -> "\"Knots\""|>, 
       "Time to Climb" -> <|"Specs" -> 10, "Units" -> "\"Minutes\""|>, 
       "Take-off groundturn at sea level" -> <|
        "Specs" -> 1200, "Units" -> "\"Feet\""|>, 
       "Landing groundturn at sea level" -> <|
        "Specs" -> 900, "Units" -> "\"Feet\""|>, 
       "Density at sea level" -> <|
        "Specs" -> 0.002378, "Units" -> "\"SlugsMass\"/\"Feet\"^3"|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Specs"} -> 
        1, {All, "Units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Specs" -> TypeSystem`PackageScope`AtomShape[60], "Units" -> 
             TypeSystem`PackageScope`AtomShape[224.00000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 14, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Specs", "Units"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 14], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Specs"} -> 
        1, {All, "Units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Specs" -> TypeSystem`PackageScope`AtomShape[60], "Units" -> 
             TypeSystem`PackageScope`AtomShape[224.00000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 14, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Specs", "Units"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 14], "Path" -> {}, "DisplayedRowCount" -> 
     14, "DisplayedColumnCount" -> 2, "DataRowCount" -> 14, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Specs", 
                  Style[
                  "Specs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Specs"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Specs"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Units", 
                  Style[
                  "Units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Units"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Units"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Number of Phases", 
                  Style[
                  "Number of Phases", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Number of Phases"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Number of Phases"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Number of Phases"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Number of Phases"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Passengers Number", 
                  Style[
                  "Passengers Number", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Passengers Number"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers Number"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers Number"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers Number"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Weight per person", 
                  Style[
                  "Weight per person", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Weight per person"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Weight per person"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Weight per person"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"PoundsForce\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Weight per person"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total baggage weight", 
                  Style[
                  "Total baggage weight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Total baggage weight"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Total baggage weight"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["200"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Total baggage weight"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"PoundsForce\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Total baggage weight"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Payload weight", 
                  Style[
                  "Payload weight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Payload weight"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Payload weight"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Payload weight"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"PoundsForce\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Payload weight"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Range with max Payload", 
                  Style[
                  "Range with max Payload", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Range with max Payload"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Range with max Payload"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["500"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Range with max Payload"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"Miles\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Range with max Payload"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Reserves of required fuel", 
                  Style[
                  "Reserves of required fuel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Reserves of required fuel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Reserves of required fuel"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Reserves of required fuel"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Reserves of required fuel"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Trapped fuel and oil", 
                  Style[
                  "Trapped fuel and oil", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Trapped fuel and oil"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Trapped fuel and oil"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Trapped fuel and oil"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Trapped fuel and oil"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Altitude for the design range", 
                  Style[
                  "Altitude for the design range", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Altitude for the design range"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Altitude for the design range"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Altitude for the design range"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"Feet\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Altitude for the design range"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cruise speed at 10,000 ft ", 
                  Style[
                  "Cruise speed at 10,000 ft ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cruise speed at 10,000 ft "]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cruise speed at 10,000 ft "]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["300"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cruise speed at 10,000 ft "], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"Knots\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cruise speed at 10,000 ft "], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time to Climb", 
                  Style[
                  "Time to Climb", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Time to Climb"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time to Climb"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time to Climb"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"Minutes\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time to Climb"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Take-off groundturn at sea level", 
                  Style[
                  "Take-off groundturn at sea level", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Take-off groundturn at sea level"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Take-off groundturn at sea level"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1200"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Take-off groundturn at sea level"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"Feet\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Take-off groundturn at sea level"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Landing groundturn at sea level", 
                  Style[
                  "Landing groundturn at sea level", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Landing groundturn at sea level"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Landing groundturn at sea level"]}, "RowHeader", False],
                "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["900"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Landing groundturn at sea level"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"Feet\"", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Landing groundturn at sea level"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Density at sea level", 
                  Style[
                  "Density at sea level", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Density at sea level"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Density at sea level"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.002378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Density at sea level"], 
                 Key["Specs"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\"SlugsMass\"/\"Feet\"^3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Density at sea level"], 
                 Key["Units"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{654., {199.9206298828125, 205.0793701171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{654., {199.9206298828125, 205.0793701171875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8590700886749105`*^9, 3.859070108641775*^9}, 
   3.859094225360366*^9, 3.8590943482424655`*^9, 3.8590945971042604`*^9, 
   3.859094695500374*^9, 3.8590948383944674`*^9, 3.8590951804685316`*^9, {
   3.8590952973547244`*^9, 3.8590953049217196`*^9}, 3.8590955934230323`*^9, 
   3.859097611567593*^9, 3.859097646530729*^9},
 CellLabel->
  "Out[732]=",ExpressionUUID->"ea8c3381-00f6-4377-a2f5-b1882ed35780"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mission Profile", "Subsection",
 CellChangeTimes->{{3.855757903726678*^9, 
  3.8557579119767838`*^9}},ExpressionUUID->"2b7592bc-1cd9-422e-bbdd-\
cbb8cde2d208"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QncVHP///G7XZsWpSRrKllKSRFZs4csESVSSdkia7pDZL3JUiHklkpl
yZqEFImokCIhIUW0Ee19/7/38T9znznXLGdmvnOd6zrX6/m4P7eu65o55ztn
rmvmnPd8lz0uuvKMi0v/61//6rfd//3fGd2uP+rqq7vdeGb1//ui4xX9eve6
omePE6+4pmevnlcffFGZ//vmwf932zPL/utf//e/fxkAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAVq9ebb755hsz
Z84cc8MNN5gmTZqY7bff3rz33nthNw0AAAAAACDvZs6caY4//njTtGlTc/rp
p5tbbrnFnHPOOc7XqgsuuMD5nqp///6mXr165l//+leBqlq1qtm0aVPYDwcA
AAAAACCvzj333ITZSDZFlgIAAAAAAKJK/VHGjRtnqlSpYiVHueOOO8y2bdvC
flgAAAAAAADWPfroo6ZUqVI55ycNGzY011xzjZk1a5bZunVr2A8LAAAAAADA
Os0d65/zpFWrVua0006Lq8qVK5v999+/wPfdmjJlitm4cWPYDwcAAAAAACCv
hg0bFpejHHLIIQnH5qifCWN2AAAAAABASbfPPvvEZSkzZswIu0kAAAAAAABF
0rJly0zdunXjspT169eH3SwAAAAAAIAiqX///nE5SteuXZkzFgAAAAAAIIGF
CxeaihUrxmUpixcvDrtZAAAAAAAARc6mTZvMOeecU2BN41WrVoXdNAAAAAAA
gCLn119/LZCjHHzwwWbLli2x2yhvef/99wvU8uXLQ2w5AAAAAABA4bvrrrsK
ZCnNmjUzb731lpkyZYrp2bOnqV27doHbqKpWrWpOPvlkM2/evLAfBgAAAAAA
QKFo165dwpwkk6pQoYK5/fbbw34oAAAAAAAAeXfsscfmnKW4NWrUqLAfDgAA
AAAAQF5NmjTJlC5dOlBWUqpUKVOlSpUCa/641adPn7AfDgAAAAAAQN6NGTPG
NGzY0JkXxV9169Y1vXr1MqNHj3bmm5XVq1ebN9980xx00EFxWUr37t1DfiQA
AAAAAABF15dffmnKli0by1LKlStnXnzxxbCbBQAAAAAAUCStW7fObLfddnF9
U/r16xd2swAAAAAAAIqk++67r8CcKYMGDQq7WQAAAAAAAEXKkiVLTO/evU3V
qlXjcpQzzzzTrF+/PuzmAQAAAAAAhG7u3Lnm3//+tzn//PNN5cqVC/RH2XXX
Xc1PP/0UdjMBAAAAAADy7u+//zbt27c3NWrUSFreOWb9tdNOO5nx48eH/TAA
AAAAAAAKxQMPPJA0J0lXp556qtmwYUPYDwEAAAAAAKDQPPfcc4GzkwoVKph6
9eqZu+++27zwwgtm8+bNYTcfAAAAAACgUGmMzymnnFJgfeNy5cqZZs2amdtv
v91MmjTJqbVr14bdXAAAAAAAgCJh8eLFZurUqbH64osvwm4SAAAAAAAAAJR4
27ZtM88884wzXvChhx5y1loHAACZ+eWXX8x//vMfc8sttzg1YsQIs2bNmrCb
BQAAgDwYNGhQ3JjC8uXLm3POOcd89tlnYTcNAIBiQZ9J1KxZM+Eamw0bNjSn
nXaa+eGHH8JuJgAAACzQvNWp5reeMGFC2E0EAKBIGz16tPM5RLp1I+rUqWPm
zp0bdnMBAACQg0ceecRUq1Yt7XphWl8MAAAUNGbMGFO2bNnA63Dutdde5s8/
/wy72QAAAMjQokWLzDHHHGNKlSoV6Lyvfv36ZuPGjWE3GwCAIuX777839erV
C5yjuPXll1+G3XQAAABk4JNPPjE77LBDxud9V199ddhNBwCgyNC87R06dMj4
/ZQsBQAAoHhRjlKjRo2szvtOP/30sJsPAECRMWPGjKzeT1X9+/d31vfJtv7+
+29rj2PDhg3mjz/+yOg+2r/asW7dOmvtKIr++usvs2nTprjvrV+/PvY8RP3x
A8iOsvbCXMPN3Z9q7dq1cT/T1+74gqDvMf7XvUy47w/JasuWLYFup9q6dWug
feox5vJeqvfAVLfbvHlz2jbovVS31XuEv02JaJuZtjfo86LbavxxLucZ2T4v
evwffPCBGTlypHn11Vdjv3v6r+12JHpedIwWLFjg7N9bM2fOzGlfWqdRY7Sz
Pe8jSwEA4H+ef/75rN9Tcy2NvdVYXRulNYYqVaoU+1prOg8bNswMHTrU+fqE
E05wvnard+/ezv7Vjlq1allrh7+0H+9+09Wtt95qvQ1169Y1TZs2je3jyiuv
NHvuuWfsedDnU9ddd13s5+eee27ejkffvn0zOh5uDRkypMDxbN++fdy2L7ro
IvP555+b5cuXx9UTTzxhjj/++Ljb9urVK6t2JKqOHTs6fbv071NOOSXQcdDv
p9bDUvtefPHFwPtS/2rtw/1aj0PPl/v1gw8+GNuH1txyv3/yySenbdO9995r
lixZ4rRp4sSJ5rXXXnPG/2V6PC655BJne+edd57zdZcuXQL/fvTs2dPa8+Kv
999/31nb86abbjLHHnus871OnTolbEfnzp1z2pd+T73HwFvz58+P+/3U72y3
bt1Mu3btnJ/ff//9sXZcfvnlgfZ36qmnOrfXffX4bP29Hn300aZ06dJx37vj
jjvi9n3ccceZCy64IPY3muv+3NclzXXp/Zm+3nvvvZ1/B32P0etetm1x3x+S
1cEHH+zcbuedd07bjsMOOyzQPjOZs8xbu+yyi3P/ypUrp7xdy5Yt07bBvc5u
0KCB83W5cuWcrzWnRqLbH3jggRm3d//99w90PPTenM9zkEMPPTTpvr3vkaom
TZo4399nn32st0PH0L//Zs2a5fWxZ1tkKQAA/M+kSZNCf2+mKIqiKIqiinYp
ZwYAAP9Qn+qqVauG/v5MURRFUVT+q3bt2k4/C/U5CrstVPGql156KezTVgAA
ihT1CQ/6Pqo+yOqvrLEEmns2SKlv/e23356XGjVqlLOP2bNnm+uvv960aNHC
3HDDDWbOnDlm6tSpTt939WvO1/7datOmjbPvbOqqq66y1g71Dc5k3+qbn2g7
GgOh8Q/ZtkPjULI9HqlK47j0e6j/qo3efZ500knmrLPOivve2WefnZd2HHDA
AbG/iR133NEZZ5PsWGjsUT7a4FbQcQG77rprXtvhXQusSpUqpkePHkmPicYq
JduOXl90G/3+ud/Tc6vvaQyQxlak+t3TeKbWrVsH+j0dMGBA1o934MCB5rbb
bnP+fdlll+X0d9unT5+4bWssnOZqSPR6Om/evKz2obFkur/GcgW5vcZDpXtt
v+eeezJqg16v586dm9F9HnrooQL71fi1bI+15t0M+t6VSWnsVtA26Ljlow1u
jR071tnPF198YSZPnlzgeP7222/Oe//XX3+d13ZoDJj2qf/qa70npzouL7/8
csrj+cILL2TVjlz+Nv319ttvm08//TTue+7jS1f33Xdfxvt7+umnrT0fjz76
aE6fnWksdS5zEAEAEEWaj6xx48Zp30fLlCnjzD0BhOXnn382ixcvdv4bJvXn
UjtUK1euDLUtmnfFbUuqynRu5kytXr06ti/NAwIAKFqUrWWToxx00EHmww8/
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
J5NjpWylefPmZuLEiWm3752fOJe66qqrMn5sQFSQpQAAYA9ZCoCwea+TNW4m
DDNmzIi75tY1/mGHHZb0mlz9ME499VSz1157Wen/4M1SjjjiiKweQ7ZZyqhR
o3LOUkR9eDSG5vLLLzfnnHNOXPnXTfbX22+/nXLbyqfc26pfi7Y5ZMgQZ2yW
t9T2iy66qMD+VbfddpvTRqCkIksBAMAeshQAYdN4j7CzlBdeeCFQvwZdi1x4
4YWxdX5+/fVX06hRowK3q1evnlm9enXg/XuzFO3jp59+yvgx2MpSZs+enfG+
g3jjjTfMI4884hy/3XbbLW6fLVq0MFu3bk16X2+W0q5du7y0D4iyWbNmOf3m
yFIAALDDm6XofBoACpvGmLjn+OrvEcZrkeaT9Y8/qV69euzr1q1bm6uvvjrh
erxPPfVUwtyle/fugTMRb5aiUu6QKf/cM0GzlMWLF8fd7+abb85435lasGBB
geOVah1qshQgN6+++mrsb4gsBQCA3HmzlE6dOoXdHAAllMbUuK9FWv9Fc42u
WrUq6+2pv4gygr///jvQ7f1ZylFHHWVWrlxprrnmGmetmnR69OiRME/Ruj4/
/vhj2vt71/zNNks566yzsspS/HPPFkaW4j/eqgcffDDp7b1ZSsOGDc2GDRvy
3kYgSshSAACwiywFQFGguVrdvineeTGuu+46M3z4cCfXSEeZwNSpU02fPn1i
fUo0n8mAAQPM+vXrU943UZaSCY2LSTYuSP1TNMduKu+8807cfU466STn8WTC
PyfJ77//Huh+/ixFc4sENX/+fHP77bc7x1zjdFq1auV87ZbGTmm9Hm9pzeiW
LVsWOE7z5s1Luh+taey9bbNmzZz95VLufCtASUCWAgCAXWQpAIoKvQYlyyOU
qzRp0iRl+efg8NbcuXNT7jvXLEVzfdx0003OfC+J9q/xQanmPf3+++/Ndttt
F3efXXfdNfbYrrzyStOrV68Cj1nrNGu/mu/VnVfSLX0vCPXdUf8Z9361a9c2
v/32W6D7ZrrOUbJSVpKqH436rNjYj7/Gjh0b6HECxR1ZCgAAdpGlACgq/vjj
D9OhQ4e8XDPnO0txaVyR5vNI1AbNq5KK+oPYftzjxo0L1O7jjz8+7n5BxjWJ
d+xNtrXvvvumnVdG6wP5syYb9dhjjwV6nEBxR5YCAIBdZCkAihL17xg9erQ5
9NBDrV0v77333mbFihUp92srSxGNG3n55ZdNpUqV4rZ59tlnp7yf1vK1nRVo
vpcg1D/De78nn3wy0P2UHWleXu99NW+v+tAMGzbMmVM3WQZSoUIF07t3b7N0
6dJA+5o4caI55phj0pb68wQ5Nhr/lclaS0BxRpYCAIBdOo8lSwFQ1ChTUV+F
c88915x88snOdXcmGcIpp5zirAe0Zs2aQPPP2sxSXBrX425vxx13dOZESUXr
8Jx66qnO482kvOsNeUs/++GHHwK1Vcd7/Pjxzn2Uo6Sb38VLY3N0rDV3io73
2rVr436u/kb6vr/8t7NFz3ei/bmluXlGjhyZNl8DooQsBQAAu6644gqyFABF
3saNG81zzz3nrJurNVyUS8yaNcv5d6JKNTdJIvnIUpRPfPzxx06fj1Tr/eZK
WYb3sX/00Ufm3XffzfgYAIguzY/tzu+tuZsBAEBuTjvtNLIUACWe5lpV3xG9
FpYuXdoMHDgw7CYBgFWHH3648xq3ww47hN0UAACKta+++iqu3zxZCoCS7LPP
PnPWxUk3FgcAiiN3rTSyFAAAcqP+8d4+7WQpAIojzYHx448/Fijv2jD+26xb
ty7r/S1fvrzAXB+J9h+k1K50NL7p9ddfN1OnTs16P+nKP6eM5mR99NFHzfTp
052xSqL/6rY///xz7Da57HPhwoVmyJAhWZfGfGWyv2eeeca53+TJk2Pf0xgs
/3a//fbbrH83gKJM8zGRpQAAkDudR1atWpUsBUDo/vzzT2f+0jvvvDNW/fv3
NwcddFDaqlevXsK5V8uUKeOsMzxgwACz8847x/1sjz32CLTtRFWxYkVnDTTv
97JdZ0ftSrc/rRlse30ffzVq1Chun3Xr1o39rEWLFs73mjdv7nxdvnx55+ud
dtop7+0Ko+rUqeOswwREjf52yVIAALDjggsuIEsBEDqtZRv2NTRFuaX8DYga
shQAAOxhHR8ARcFJJ50U+vVzSa7GjRub1q1bF6iyZcsWajuqVavm7LdmzZqh
Ho/77rsv7D8JwDqyFAAA7CFLAVAUaL6Ohx9+2PTr18/UqFHDeU068MADze23
324eeugh5/raf72r64IjjzzSqV122SX2/b333jv2/Uyqffv2zr6C1gknnFBg
G+rPoJ9pjTT3ex07dsxou5rDY+nSpWbatGkFfvb+++87Px86dKhzm0xrypQp
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
t2/fAq+pWmNH60jvt99+GWUpX331Vey2Wv9n48aNSW+rPiv+HEX1wgsvZPT4
AQBAZtw1kW1nKatXrzaNGzfO+PwTQOa8Y/XSrbepuSbTfWaaSx1++OFm06ZN
hfPAgSypj4E369d1crL1abLJUvzX1UUtS9FaNd723XrrrYWyX3+WkmnfkXS0
/o27beXBWqMoKH+WIh9++KGpVq1a7Puaj0V9RpRFuTR2+dBDD02Yo+gzJdE6
Tpkcb40/897++++/j/u55oa57rrrnGrWrFnC1+LLL7/cyWyUtQMAAPvyNffs
q6++Gveers+HbK4xiOzpedDYb/c8zC3bnw/mg+Yy0HqkGhO/1157xapLly5O
3/GiRP0/dB6rcXT5dvfdd8f+1rT+RLp2aV6EfOYpy5cvz/tjBrKl/pEdO3aM
+51NNU9pNllKz549i3SWovcAb/u0jm5h8Gcpeh5s+u6775x1iNzt33DDDYHv
myhLkU8++cQccsghce3WPHBXXHGF05fPO9erW8ccc4x5//33Y9vwZ1d6z00l
WZby22+/Ofv15oDpSsdD75HKmf7666/MDigAAEjKe45oK0tRX9TTTjst7r1c
n8kUZ+pvq+OTSalvThh0zqX961xN51xnnnmm2XnnnWNVt27dhOdb+rwtG+rn
oH7PmvNO29d4EH0mq/k7bNHcHbp+2XvvvZOeL5YqVcrMmDEj633oc+orr7zS
OWbjx493nr8ffvjBDBgwwPme9u99frX+pq6XvMfWX+557IgRIwrsT8dH+9O+
cqWMqXnz5s7+1Cc90VokXnrORo8e7cwPkawuu+yyrHKU7bff3upzD9imv23v
7+yuu+6acp25zz//POMsRa8bxSVL0WcdhTX+Nt9jfKRs2bKx7eu9KChvlqI5
T7x9TzQP1TXXXJNwbKS3lHEol/Ifz1yzFD1fOl+rUaNGTjm3+s+MGTMmswMK
AAAS0jWY7Sxl0qRJce/d+jynOH4W8t577znX0DvttFPSdQ1TVZ06dZxrbZWu
u3Oh50nj7701cuTI2PbdUp6R6DOyZKVxWPrc7rHHHnOet0wpI9PaF4m2rTk0
bNA5qPpKB3k877zzTlb70GeI/udYmUClSpVyOm91S2uC+6lvu/tznaPnyjs/
g+Y/zNXKlStj29O8i08++aTzmah+l/X7kqyYsxZFnb+fSaKs00s5a6ZZitZy
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
xYXWyLGVpTzxxBOBshStQ+C9Xap1CZSzaJ5bnW+q6tev76yDqHl1s+0/IXPn
zi2w5oxbWm9H+9I1SC5jUzSG3PvZqK01FBJJlaWoL7X3fFTz27jHU6X8xH8M
spk/0Z+laN0ItcX7PeVtmc4loGtA9/4HH3xwxu1ykaUgivQ3/dRTT8XV0qVL
U2bC2WQpuo713uf000+3+TCsUh8Fje/xtlev91WrVk1b/tdCzaXlXRstEf+6
SBr3EmRf3vegVONksslSvvnmG6ft7v1szieiLMTdrvpEpqPfRb1ne4+R5lXz
HnPNHat/Z9rXqrDWawIAoCSwkaXcfffdce/V+swpkeXLlzvX27ru9M5jqrVs
zjzzTOezlqLOZpai63J3WzqPXbNmTcLbea+N3XMqzZWofgvt2rWLO9dMtf5y
qvltg+jcuXPa8zTNJ6M+GpmO7V6xYoWpWbNmbDv6TC6fvFmK/zzeP648XWks
+9SpUzNugz9L0d+ffge8a2eqpk+fntF2vb8vujbIds5Cb5Zyww03ZLUNIAr8
WUqQMY7+LEXXxkWZXmf0npbJa1+qSvW6o/dRZcfZblt9X5N9NuDtO6rq2LFj
oMfvXQNNZWu9PGU+3u3qfS4dZSn6DMTWc+HWwIEDzbZt26w8LgAAYCdL8b/n
+zMRXSfrWizdNarmrtUY5aL8Xu/NUlLlH+loLR7NI+tuq1u3bklv689Ssil9
The0z3Yymnt3/Pjx5uyzz3bWEfZ+hpfoXPemm25y7hOEzuO993/xxRdzams6
3iwl23N5HQdVthmgP0tx5zLW56jez3t1zbFkyZLA2/WuN6U1X7Nds9qbpeRr
rmGgOFD/Lu/fqsZspFPcshRZuXKl8zqU6/uN8gK976cyefLkuPnqM6lU46X0
mY0+n3Fvq/GoQbnzaKkfns1+kd45j5XLBdGzZ8/Ye6zyevX99a41pa8zKeUo
AADArlyzFI0J9563aPyDl3IA7xjkIKU554sqb5aiWrBgQVbbUT9b73ZSrUed
a5aiDOvll1/O9iEn9d133znrLPr7IntLY8PTjVHReG/v3HiHHHKI9bb6ZZql
6JzWPSe99tprc1pTweXPUjQey+XPU7T/cePGBdquO/esSnMMZossBfiHxqx4
/1b1t5GO5lXyfn5QHLIUl/rZvfnmm6ZXr15ONWnSxNSuXTtwaY72INRPVVmx
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
vihFjfquaq6JHj16OKV5NidNmuSMfXK/pzlj1cdEddZZZ5nx48c7t3Hr8ccf
d26n/GTlypXW26jxN+6+Ro4c6fTJ9u7fLfV3cNusuvXWWwuso5SO+gkn2rZb
U6dOtf74ACAqyFIAAACiy3aWos/0tRar1q3x1ymnnGJGjRplVqxYYaHlAAAU
XWQpAAAA0WU7SwEAAGQpAAAAUUaWgpJE466WLl2a9f1/+uknZ30blf6tcWHu
19mW1s0Iysb+kpV3zQe9Lmg+4FtuuSVhPfbYY2b16tVZH0egJCBLAQAAiC6y
lMx8/fXXzpwl6eiaV2veqnK5dtd4KHc7/m2tWrUq7meJSutNXn/99XGVbJ4T
zbXq3kbzq6TbdqqaOXNmgf3mUn379jUNGzZMWfvss0/KbVx77bWmTp06znw9
6baVrLTuj/v3on9r3edc5yjWHL5B929jf8lKcwe7+2nQoEGguaP1OwggMbIU
AACA6CJLSU6ZgOZtrV+/fqy22247Z+6XK664ImlpPaB69erFXXN7t5FJ1ahR
I+761butHXbYIatr5jJlyiTcV76u0ano1iuvvBL2nylQZJGlAAAARBdZSmL9
+vXLaH1niipppf40H374Ydh/qkCRRZYCAAAQXWQpBWneCF0nhn2tGtU68cQT
TYcOHUzLli2dr9u0aeN8rWrUqFFO29YYGHdb2Vb79u2Tbn/HHXd0+h1pPSq3
hg8fnvM+k1W5cuUKPD6t1e3dv1uDBw8ucP/Ro0ebdevWFSiN/dLPH3jggYTb
SlbKGHfffXenLU8//XTYf6pAkdalS5e4v98PPvgg7CYBAADAErKUgrZt22am
TJlibr75ZlO9enVTvnx5p/bcc0/TqVOnArXvvvs6434S/axFixbOffVf/8/O
PPPM2LZTVdWqVRNuO5u68MILzYQJE3KqZ5991nTt2tXMnTvXbNmyJWUtWrQo
7r4LFy50jq97nHUb92vR72O6baYq3d/G85/P7WfCfzwKe/+p2uR93gAUdP75
55OlAAAARJQ3S7njjjvCbg4AAJFAlgIAABBd3ixF86YCAIDckaUAAABEF1kK
AAD2eddzI0sBAACIFrIUAADs0zxaZCkAAADRRJYCAIB9jPEBAACILq3FQpYC
AIBdZCkAAADRpXVqyVIAALCLLAUAACC6yFIAALCPLAUAACC6yFIAALCPLAUA
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
V6dOnchS0li/fr35+eefzbJly8JuCoAi5Jhjjom7Vh4zZkyo7VGOUrly5ZQ5
ils9evQwGzduDLW9UUeWAgAAEF0vvPBCic5S/vzzT/Ptt98mrI8++sj069fP
NGrUyDk+pUuXNueee6655557zPLly8NuOoCQNW/ePO5auX379qG1ZdKkSYFz
FLc0xrMk+PLLL83gwYPNzTff7Ix3uuyyy8zMmTPzvl+yFAAAgOhat25dZLOU
Bx980DlvTlW77757Rtcebt19991hPzwAIevSpUuRyFImT55cYFzP4Ycfbl5/
/XWzcOFCc9ddd5k77rjDtGrVKu42O+20k1m9enUobc63v/76yzz11FPO67xy
cP9reNmyZU3nzp2dPof5QpYCAAAQXT/99FNksxTv+CXb1b9//7AfHoCQffLJ
J3GvC0OHDi30Nmge2YoVK8baoH8PGTIk4XwoGqeouV28bf7xxx8Lvc35pvmA
O3ToEOi1fLfddjNff/11XtpBlgIAABBdUV7HZ8SIEaZmzZrWc5QKFSqY1157
LeyHByBkCxYsiHttGDlyZKG3Ydu2beb888+PteHpp59Oefsjjjgirs3Dhw8v
pJYWHmVJmbymK3fPB7IUAACA6IpyliK///67eeSRR+Lq0ksvdfIQ93GXKlXK
HHvssWbvvfdOeb6t/vDqK69tAkBRyFLkm2++ceaSvemmm8yWLVuS3k5zze67
775xbX7ggQcKsaWFo2PHjnGPUeN8evXqZf773/861aRJk7if33fffXlpB1kK
AABAdHmzlIkTJ4bdnEKjOWf/+OOPWMmSJUsSZih16tRxzr+1ng8AuIpKlhLU
3Llz49qrHPnDDz8Mu1nWTZ06NfYYjzvuuLjXbvXjOfLIIwslS9E4K2XwZCkA
AADR481Srr/++rCbExqdX2uuWv91xkEHHZS3sfQAijd/lnLhhRc6ryVFkTLj
/fbbL669hxxySNjNyhv1QbzqqqucuVO8/HPcaF7afOZJJ598MlkKAABABHmz
FPUPL4kS5Sg6vx42bFjYTQNQhKl/2y677BL32qFxNEXJ2rVrzcCBA03t2rUL
jFmcN29e2M0rNOqbormBa9WqFTsGZcqUMV27ds3rfslSAAAAosnNUipXrmy+
//77sJsTivnz5xcY16O1TgEgHf88S0UlS1F28PjjjztjFP2vb1oP+L333gu7
iYVCx+Gjjz5yxvr4j0ODBg3y/nyRpQAAAESTm6XUr18/7KaE5rzzzos7v9Y8
tH/99VfYzQJQDBS1LOW3334zt912m2ncuHHC+Z+Uo4SxdnNh+/TTT02/fv1M
o0aNUs4p3qZNG/PKK684a0vnA1kKAABANLlZij679I8rLwk0h4D/3FrzFgJA
EEUpS1HfwlTZgdo6YcKE0NpXWLTW2o477pgyQ/HXZZddlpc12rxZitaBAwAA
QDR450sp6mtQ5MOgQYPizqc1NyPr9QAIyp+lLFu2LJR2aM2Ys846K2FO0LBh
QzN+/PgS099u1apVcevnBC29/v/6669W2+LNUkrqnGQAAABRVNLX8dlhhx3i
zqW19jEABOXPUp599tlQ2vHMM88UyAaqV69urrnmGmeO3JJG88G4ax/XrFnT
dO7c2Rnb5NaVV15pqlSpUuCY2X4fJEsBAACIppKcpeiax38ePXPmzLCbBaAY
8Wcp7777bijt0DxP3nbsueeeztwpJZnmQFm9enXSLGnp0qXmgAMOiDtuFSpU
sNoGshQAAIBo0nlmSc1SevToEXcO3axZs7zNPwggmrxZSvPmzc2WLVsKvQ2a
66pu3bpxr2d33nlnobejOLrxxhvjjtsZZ5xhdftkKQAAANG0cOFCspT/X1Om
TAm7SQCKkcWLF8eNE2nfvn0o7dAc2qVLl457PWvbtq35/PPPzbp165xyaV4V
93tubdu2LZR2h2nr1q3OPOP+cT4dO3a0uh+yFAAAgGgqyWN8/FnKO++8E3aT
ABQjWnvY+xoSVpYimusp1byqer17+OGHC4xJUh111FHmxRdfLNaZytq1a50x
TW6lmmdXc9N26NAh4XEaPny41XaRpQAAAEST5ucjS/mnnnjiibCbBKAYKUpZ
ivqm1KtXL+O1a7ylforF0bRp0wrMI77rrrua0047zYwePdr8+OOPsRo3bpw5
5JBDEj7+iy++2OmvYhNZCgAAQDSpfzdZyj/VrVu3sJsEoBgpSlmKKCfQ3KnZ
5CiVK1c2n332Wajtz9bzzz+fU4ZUq1YtM3jw4LzMl0WWAgAAEE0lOUu55557
4s6nq1at6qzrAABBvPrqq3HZRdhZisydO9f07dvXNGjQIG2GULFiRbP//vub
du3amenTp4fd9KytWbPGtG7dOqscpXHjxmbJkiV5a5vWpCZLAQAAiJ6PP/44
dp53ySWXhN2cQrVo0SJTtmzZuPNqXVfMmjUr7KYBKCbGjBnjrKFz0EEHFak1
1bW2j17jVPfee69T7tduacxLVGi+lPnz55u77rrL/Pvf/zY777xz2hxFY33y
maPIk08+SZYCAAAQQd65Zxs2bBh2cwrdcccdV+D8unz58uaTTz4Ju2kAigmt
Lf/nn3+G3Qx4KFt54403zAknnGCOOOKIuNJ4zkmTJpmNGzfmvR1kKQAAANFU
0rMUfXbbtGnTAnmKxs4DAJALshQAAIBoKulZisybN8+Ze9CbpbCmDwAgV2Qp
AAAA0USW8g+tJ3rLLbeY008/3XTt2tWZyxAAgFyQpQAAAETT1KlTyVIAAMgD
b5YyYsSIsJsDAAAAS7xrIpOlAABgjzdLmTNnTtjNAQAAgCXeLKVixYrmu+++
C7tJAABEAlkKAABANHmzFJXmYQVs0/qj99xzj7Me6cEHH2z69u1rfv3117Cb
BQB5RZYCAAAQTcuWLYvLUh5//PGwm4QI+e2338wll1xiKlSoUGDd6Zo1a5oH
H3ww7CYCKATz588369evD7sZhc6bpTz99NNhNwcAAAAWrFy50lx88cVx17fl
y5c3jz32mNm4cWPYzUMx99lnn5nGjRsXyFC8VaZMGdOxY0enfxQQRX/99Ze5
++67za677hort2/WxIkTw25eXi1fvtzcfvvt5oADDjDlypUz++yzj/O477zz
TrNgwYKwm1covFnK9ttvb7p3725uu+0253MMAAAAFD+///67adGiRdJr3GbN
mpklS5aE3UwUUy+++GLCvijJSnkKEDV///23OfXUU5P+3pcqVcoceeSRZvXq
1WE31apt27aZRx991FStWjXpY1du36dPn7Cbmldbt241bdu2Tfj4q1SpYk44
4QTz888/h91MAAAAZGDQoEFpr2/32msv8+OPP4bdVBQz+qxd10lBcxTV3nvv
HXazAau+//57c8oppwT6/T/22GPDbq5V6nsR9G9ffTSiSP1O9LoW5H2WPioA
AADFw4oVK5y+xkHOc/fcc0/nM0YgiFdeecWULVs2oxyFLAVRs2nTJnPiiSdm
9DcwYsSIsJttxcCBAzN63Br3o/4bUbJ06VInIwl6DG644YawmwwAAIA0dM7a
smXLjM51r7nmmrCbjWLgp59+ymhcj7c0FuCHH34I+yGktXnzZuc6OVllc02o
bW7ZssXJLFNtO5PS9oJSm23s89NPPzXjxo2LK/84QT1GrWWin2mOHPXd8N5e
82tkut+idh2uxzh8+PCM/waUQRR3+huuVKlSxo/9jTfeCLvp1uh3OJMcRaXx
PgAAACi6dH01ePDgjM9z1c8gH2N91J4///yzwPc1V+Mff/xhfX9+uoZdu3Zt
RhVkHQpd22W63VQ1e/Zs89RTTyWtMWPGOLf7+OOPE/787bffDrQfXc/o9osX
LzazZs1y/q2+59OnT0+5f5Xmk9TcktnkKG5pnlqNiXBLczam22+quvfee+O2
l209/PDDzvYuv/xys/POO6d8DPvvv3/G269du7bZY489zFFHHZXT8fNWw4YN
A+//sMMOs7Zff2luYe++tCa27X0cffTRZtGiRXl/vRDlJPrbUFaSrG688cas
HofmZ/3222/NL7/8krS++eabpPvVOjmijGrq1KlxP9OcHKm2m215X6f17+OP
Pz6rx37cccc5852r7dm0I9v5ZjT/usq1YcOG2Frtq1atyrgdX331lTnnnHMy
fvzKoPXcZtLuVO1Q39N80LpsOi6i45Sv58UGvQ+77dD8cIgWzUWl5zaTdRJS
vb7obz/ftI90fzN6XLb3539s+ntI145E5+bpuK8J7muozuXT7UevKanalOh5
0XPu/lx9ofW6m4jek7yvQale093bub9X/tJjCSLIc5xLuZ8hvfXWW7H3908+
+ST28wkTJsS+/9577yXdTibvt+7rp64T3O+luxbS74DbjpEjR1o9BvrcLdU5
WKrSZx2Jtnn//febc88917lNt27dTLt27ZzSfBjZ7itV9e7d29m+1jLV1+7+
/NWvXz/n+vu1117LeB//+c9/nG1cccUVztdaaybZflKV1k7QMRo7dqy1x6/r
KV03JjpH/eCDD5zvff3113HPUTbHIJvS2rN63A899JAZNmxYgePRunXrrK9X
TjvttLT7v/766zN6ftq0aeN8Huc9ngMGDDA77rijk9/06tXL+Z5+D7J5/tOV
rl0yPQ66lk633XxcL1IUlbiU4b377ruBznNyoT4XmiM57MebrPSaeeihh5rd
dtut0PZZr149Z5+qdDljulIOqTWOsrnvDjvsEGtHJlW5cmWn3K+bNGnibE//
rl69eqE+f3Xr1k3ZVp1T3Xfffc58vXrfTPc3kc3xSFfbbbedMz5Y/y5dunTa
x6R17/PRDpXyNx2PZNW+fftYO/Qc6/wo1e1VygJ1rqN/63i7+zrmmGOc7518
8skF2qHsLN12g9bZZ5+d9fEI8vhUOkfJ13Oi6tq1a9o26DO9XPfTqFEj57nd
b7/9kt7Gu09dE6V6fdl3333zcjz0e+i2Qa9x6f5m1KfN1r7d1zP9V+fnaoOu
pypWrJi2HbvsskvG+9NnJ7qv/quv9RlRuv1obj3dNll/Ro0B9e/Hfxx1zZCo
PTvttJOpUaNG7OtUr+nua1WyPoUNGjQIdAzU3ny+T2hdkGyuXfzVtGnTwO+3
7nuk3qPc72lcfqrjEOT9gaIoiirapWs7vccW5j51raFrWX/lel2WaJvZlM77
r7rqqgLVpUsX5+dnnnlm3PebN2+e1X5OP/30hPvRtYrOAxL9LFmpzcn2o/a9
9NJLec9RtK4v5wYURVEURVEURRXFUh6scR6JPnOrVauW8zN/ZTM2X6VrbN1f
a5Lq6/r168e26Z3zo06dOgn3669q1ao5t1fOqz7+6gOkzwZ1TamvvXXdddcF
2maiUl8ebUPXpPpan6X4t59Jab0Nrcmq69Hnn38+9v2nn37a6TfoLXf8QqpS
ezJ9LvR5+gMPPFBgf8lK423StUPjntTXcs2aNYG3m2mNHz8+bp/6zEd90hLR
WKls96P5RRCuuXPnOvNMKQdKVLmOb6OKR+m9KdnvgHLUsNtHUVR0Sv3t9Nqi
/hX53pfOhZO9tqmC9DGxWTqnTtQOnZPb3I/OWbXGhv6d6vEnqnz3QVG5/VDS
lY19qb9Pqs/9dKxStSHTzy51vZTpMQ9Sup7z7kf9avT9dJ+H6X4225Hqb0Zj
69VXzq0ePXrk5Vi4pX5pZ5xxhtP/Sp9Devftr1atWmW0bY1X0v3OP/985+vz
zjsv5faDlsZ4ZNKO/v37W9mvv7SOhLav6299rXkZsvn70lgb/7Y//PBDZ3y+
t15//XXnZ88++2yBnwUpzV8imo9S27nnnntiP0s2/ltzW2azL3f835dfful8
7R33r+sm7V/jpLxj6VPRug3ajsYTisYzFtYcDkVJ586dM/rdUo7y6KOPht1s
ICca//Pdd985pfEAmb7GKr/V6527DbemTZvmzPuTa2k7/m1nUpqLKd0+lCd6
+wAHLfUVPuSQQ2KlOXi/+OKLhO3Q9zN53E888UROj9tfqdYunjlzZtZ5irLk
bNs0dOhQK78jmi/Lv23NQ6CfKdP17k9zcHlvt2DBAittCFL6fEJzSyn/97d3
xowZ1vajcYP+v78TTjjBGVfv3afmExsyZEiBtuizB1tt0XwDyZ57/c1cdNFF
Zt68eUmfv3yVnvegv6c6bkG36x7PN998M+Xt9DeXyd+K5kfP9DE+88z/Y+9N
4K8Y+///R3aRLXuSnVJaRGWtCFmyJSFkSbJ131SIishO5LZkSUiEu+6KJGvI
nn1LSYssUZYQuW/z/z/n+5jzu851Zs6ZmTPnzDmfz+v5eLwfdD4z11yznDnX
9brey4NZbTDO43PGicW8S1ivyndcrpc37iWXR5LvMdN493A8vjv5ILdGqfqA
kQvBPH/G1H4wJp8wYYK7DXnBij0u8w5yofD/UWuWMs4v5TUJ2ye2SeJYXo4p
+/PJkyc7U6dOzczRguDeRDleqfJisoZqHodcHMDcMl9/2C9J8n1neHbSgHdK
nFxI4v+Bv3zUMR6xqKqJLMLC72HYZ4uY2pEjR6bdZSEShd+pKO9Y4sUfe+yx
tLudCORPjVIn7uCDDw6Vz7taIOdz1N9Ycs8JIYQQQojKhnWLKOtm+AIpvkBE
Bf+uQs8WMUqs6whR02Btp2fPnqHescQGEVtXk2C9hfwyhc6da1SO2hnlJIqW
gv8+vhVaqxBCCCGEqA7wBw2ro1CLV4ioMDfAl5Y8LOYzRT51ao1NmTIlUh1D
IaoNvgPEPBLrHPSO5V08fvz4tLtaEjh/Yhyp10GcKbH4nlHng9jKmqgh9O/f
P7SWUlPvvRBCCCFETYVYuEL5QamxnXTcmKh9EOtw1113ubVhiOUh5leI2gYx
3cybbRM1E/IrUBcLs/1U8EMiBoo8LkIIIYQQovr47rvvXP8AahJQB8czcjDf
euutaXdPCCGEqHqI9yKnq2dBdb6EEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEqI28//77zrHHHus0a9bMeeaZZ9LujhBCCCGEEEIIIUTFQh3qNdZY
I5MT9oADDki7S0IIIYQQQlQN1JW5+OKLnQEDBrg2ePBg55dffkm7W0IIIUpI
x44ds+rrrLbaas7ixYvT7pYQQgghhBBVwdVXX51TD7pLly5pd0sIIUSJmDt3
rrP55pvnvPtVp1gIIYQQQohwtGrVKmc8Xa9ePWfBggVpd00IIUQJuPfee3Pe
+9ill16adteEEEIIIYSoeD755BPXr9tvTP3kk0+m3T0hhBAloFevXr7v/f33
3z/trgkhhBBCCFHxvPDCC77jaWzgwIFpd08IIcrCb7/95jzwwAPOlClTnD//
/DPt7pSUv//+280z6/fer1+/vptDSwghhBBCCBFMPi1l5513Trt7QghRctBO
dtlll8y7jxxSNZmPP/448L2PjRo1Ku0uCiGEEEIIUdGQZ1BaihCiNnPttddm
vfsOO+ywtLtUUi677DJpKUIIIYQQQhTBueeeGzieXnPNNZ158+al3UUhRJVD
HusOHTo4LVq0cB5//PG0u5ND69atc2oD12TQyfNpKSeccELaXRRCCCGEEKKi
adKkSd4x9YQJE9LuohCiyjn99NMz7xTq8P78889pdymL7bffPuu9t9JKKzmf
fvpp2t0qCUuXLnXq1KmT971/6KGHpt1NIYQQQgghKhbWitdee+28Y+phw4al
3U0hRBWzbNkyp0GDBlnvlUWLFqXdrQxoJqusskrOu++ss85Ku2slAX083zsf
23rrrZ2//vor7a4KIYQQQghRkbz++usFx9TSUoQQxTB16tSc98rIkSPT7laG
Dz74wPfd99hjj6XdtZIQRkvBanotIyGEEEIIIeIyaNAgaSlCiJJy2mmn5bxX
TjrppLS7lSFIS5k8eXLaXSsJYbWUESNGpN1VIYQQQgghKpKOHTtKSxFClJRO
nTrlvFfat2+fdrcyvPfee9JSfOyYY45Ju6tCCCGEEEJUHO+++26o8XSXLl3S
7qoQoorx01Lq16/v/PLLL2l3zeWUU07xffcNHDgw7a6VBGkpQgghhBBCxGfw
4MGhxtO77rpr2l0VQlQxfloKNnHixLS75rLLLrv49o/aPjWRG2+8UVqKEEII
IYQQMenRo4e0FCFESfntt9+c9dZbz/fdcvfdd6fdPZcgLWXddddNu2slYcst
twz17t94443T7qoQQgghhBAVxfz58526detKSxFClBTieILeLTfddFPa3XOW
LFnibLrppr79W3nllZ033ngj7S4mzlprrRXq3b/SSitVTByWEEIIIYQQlQC+
9WHG0hiay6xZs9LushCiCsmnpXTu3Dnt7hV8Fz777LNpdzFxwmop2OjRo9Pu
rhBCCCGEEBXD1VdfHXosjd17771pd1kIUYVUupbSoUOHvO++4cOHp93FRJk+
fbpTp06d0O/+SqpdLYQQQgghRJrMmTPH2XbbbSNpKfPmzUu720KIKqSStZSv
v/7aWXXVVfO++xo1apRqH5OG+M4GDRpISxFCCCGEECICf/75p7P77rtH0lFa
tWrl/Pzzz2l3XQhRhVSylnLHHXcUfP9tsskmqfaxFIwdO9bNEdO6dWtnv/32
y3v+/fv3T7u7QgghhBBCpM7333+fM1Zu0qSJ07Bhw8y/11xzTWfMmDHO0qVL
XVu+fHna3RZCVCnkGwmap2+22WauvpsWI0aMKKilUMuH92ZNg+v+3//+1/n7
77+dNm3a+J47ny9cuDDtrgohhBBCCJE6+JdstNFGmbHyPvvs464bjxw5MvMZ
9UuFECIJyF2aT6v4/fffU+tbGC0Fe+WVV1LrYzlo165d1vn26dPHGT9+vPO/
//0v7a4JIYQQQghRMfz222/uOBlbtmyZ+9mUKVOkpQghEkdaSuVjaynffvtt
2l0SQgghhBCiKpCWIoQoBYW0lCVLlqTWN2kp/4e0FCGEEEIIIeLx8ccfOyuv
vLK0FCFEohTSUu68887U+hZWS5k6dWpqfSwH0lKEEEIIIYSIDzlnpaUIIZLk
wgsvzKtTHHXUUan1LayWcv7556fWx3IgLUUIIYQQQoj4SEsRQiRNly5dpKVU
ONJShBBCCCGEiI+0FCFE0lSqlrJixQqnbdu20lKcbC1l6623dvOTCyGEEEII
IcLhaSl16tSp8bkWhRCl57///a/TqFGjvDrFVlttlUrfpk2bFkpHwRo2bOj8
9NNPqfSzHAwbNixzrnvuuWfa3RFCCCGEEKJq+PDDDzO5Z7Hnnnsu7S4JIaqc
v/76K5RWkQaTJ08OraVgM2fOTKWf5eCGG26QliKEEEIIIUQMzJrI0lKEEElQ
yVrKH3/84Rx44IGh+rfJJps4S5cuTaWf5UBaihBCCCGEEPGQliKESJrZs2dX
rJYCc+fOdS644ALnlFNOcVq1apXVpw4dOrifYy+99FJqfSwH0lKEEEIIIYSI
h6mlrLbaas4nn3ySdpeEEFVOv379CuooTZo0SbubLm+88UZWv77++uu0u1Q2
pKUIIYQQQggRD1NLUR0fIUQSjBs3zlc/2W677Vx/EOybb75Ju5sutpZC3tza
grQUIYQQQggh4mFqKWussYYzf/78tLsk/n++//5755dffkm7GyIiCxcudP7z
n/847du3d+vNjhkzxvniiy9qXa3Zyy+/3FdLue6669LuWg61WUsZOXKktBQh
hBBCCCFioHwplcfDDz/sbLjhhs6WW27p/Pnnn4m2/eOPP7p1TIYOHepr9957
r/Pzzz8nesxKgLiNjz76qCT1bb/88kvntttuc/WT1Vdf3VdDaNy4sTN16tTE
j12p9O7dW1pKFUDeGGkpQgghhBBCRMfUUqiN/Oabb5b0eFdddZWz0047OS+/
/HJJj5OPiRMnOgMHDnTnUJVI06ZNM/eEmiNRmDVrlvPiiy+65+fZLrvs4l5z
bNNNNy2Yx6JBgwbuti1btnRGjx7tvP3225HjMd555x3XH6MSmDdvnluPhXPb
fffdi24PrYlrwnfl+OOPd+rWrRt4LYmbI7cp9tBDDyVwNtUBeZekpVQ++FBJ
SxFCCCGEECI65cyXgj/5Siut5B6LOWgafPvtt26OXS/Xbs+ePRP3/SiWrbba
KnNPvvrqq1D7PP30065OEOQXUazxbOy6667OAw88UHCuOX78eKdOnTpOvXr1
nB9++CHSuf/++++uzkasTFLcfvvtmfPg+SsG/Fr22WefvNeK+3f22We72sni
xYsTOovq4u+//3Y1ir59+0pLqWCUL0UIIYQQQoh44PdAnhTG0sx/S1kD9Nxz
z82M29PSUu66666cuW+nTp0SyRPz6aefJqLLmFrK2LFjC26PD0hUDaV169bO
/vvvn2Oe/0Y+O/jgg11NKggzvmPSpEmhz3v58uXO4Ycf7u639tprO8cdd1wi
13PHHXdMREsppKPst99+rm5TW/UTP/73v/+5eWO8a7Tzzju797mSkJYiLUUI
IYQQQog4rLnmmpnxdCnzpaStpfz666/OFlts4TsP3nrrrYuaQ+FLsc4667j+
CMViainPP/98we2JYUG/2HjjjTNzosMOO8y1PfbYI+s88ROYPXu289dff/m2
hV8IMSzvvfeec9999zkXXXSR619iXy9igIL0lCFDhmS2O/3000Of94IFC3KO
c8wxxwT2NSzm9TzzzDNjtUE8DzFPdv9WWWUVp2vXru79r01z8CjsvffeWdds
0aJFaXcpC2kp0lJEONBGP/jgA9cPEt8zURnwzuJ38v3333dOPfVUp1u3bq5d
f/31bk0127h/bM/9FEIIIURxeFrKqquu6nz44YclO07aWgp5VfP5W9x0002x
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
NkydgJpzYbG1IupJowNh1JlGXw9jxL5EhTFM1DWZnXbaKdazb2opnlGXLayZ
Gopn1B8Og12/Gn2+lJT7eEIIIUS1UC4tBRgzss7GfMUz4lryjQXZh3Uy2/zG
n962Sa8t026Y8W5Qv0Q6oCeZ94P7g55kWzHaF3AMu82ktSlyHpi1ujHG4sxN
KhXmjWYNkiOOOCLtLuVgxvhIS5GWYmPnF7XzdEUBXzQ7bpRcr1G46KKLcubf
hXKUoyWbMZTUWA6jc9etWzezD36X1GkJg62lxDXGJlHHJJ988om77sG6RqG2
ycWGRhT3uffTUooxtKawvxt2/pJS/w6U+3hCCCFEtVBOLQXwE5g6daq77mUa
/h8//vhjKPv8889z9k/KxowZE7ofzMPYh/XCMNtPnz49dD+IGwpqh3qYxK8c
csghrnXp0qVk14OYFfv4xJYTs+Ud3zNytcY5Bj497E8sO+NTu924Ri0exqcc
g/E9+Q6C1iWLOQ5+S3ab5IkpNlbKA38UMwcNhq5SqFZ3JWDOHbm3lUZt1lJY
A5eWkh9bSylmDkmdObMt3h1RfQ9ZJyCmz2ynYcOGBf1l7BhbM49IEHbNZuJP
w5CUloLx2xAHcqYQt2MaOtQll1zi/j+/2cXCmIU8+Plih8IYfj/EdUV5Fky/
IYz7W0rs4xWTH0YIIYSoSZRDS2H9h/kmZq5Ty2Q12Vq2bFn0dwfd0I7rad++
fdGxBuXC1FKGDBmSdndyqM1aimoiFwb9mzg6rg914oqJp8NP7pRTTnHzU2Fx
41BfeeWVrDxetLVw4cK8+1Av3vRry1fHx+OFF15wNWFvH3KohAHfEPSdYt+f
aAwPP/xwqGOmCVr38OHDnfPPP9+tOUiNJmrr8G/PqNHH57ZRv/jll1+OfEx8
IcnRzjPJPSp1HTc0PHQjr9+crxBCCCHKo6UE5TyRyWqy4RdTDOQ5sOckHTp0
qBodBUwtpRLr+JDT07y+0lKEDfNU/Bkef/zxRNojZzp6QzHg20mfsDC6COCL
gX6DhY2DXbJkiVuL54orriio15gQu+Qdq5CRb9U7F9PQsUR+yFtC3LQQQggh
0sHUUsjnWgoYEzVq1Khkc1bmm40bN45s3npjkBET4o3r0IPiHCOMmb46rDFd
cMEF7jE7deqU1R/WH0vVB8yuW03dCr8xLta/f//EjksuRK9dar2w1uZ3j884
4wzfvjRr1izTFn7z1F9ijH7NNde4Pvn8P776Xq2ioHOKYuQooF1ioPg3MVde
H8ixzPyDfBRxYb615ZZbZl0DaiNVk44C0lIql549e0pLEUIIIYQQIibk2vDG
0meffXbJjkOuO3KRsJ7GmlySRm69ODB3yNduMXV0okD+Ee+Y/L8Hfrxmf8g/
WkqYp5vHi1u3t1jIK5DUPa5GqIdqa4/kSIiap7ISMLUUdK5Kw4zxQVutxNrS
paJdu3bSUoQQQgghhIjJCSecUBYtRQhRGPI22jUo8HOpVi3J1FIqsSayqaVQ
g702IS1FCCGEEEKI+Jhayt133512d4SotXzzzTc5Ogo1hqhJUa1Uk5bSpk2b
WlXT3NRStttuu9T80IQQQgghhKhGHnnkkcx4uhw1kUV5ef/9951Jkya5xlxd
VC7E8Jg6CjEn5BasZqpJS8H++9//pt2lsmFqKdToqE06khBCCCGEEMVyyy23
SEupoVBPcqWVVsrcX+pooq2IyoS57Pjx453111/f1VHi1kytJKSlVC52jM+M
GTOy/k6tF/LHRLGw9WFM8IeJepxC9tdff7l9QZ8cPXp0jia5YsWKnLg5cnp5
+5s+Or/99lvsfnCccsJ5e8eulLhA+mHeF1E6yPFG7W2TMN+vfPeFv5ELne8R
Nm7cuLxtLV++vNSnKYQQQlQMZozPqFGj0u6OSJC+fftmzZWIH6nmeJHaAjmA
Z82alXY3EkFaSuViaynod9QO84x8x1Frqu25555ZbYQxs45ZUrbrrrs6e+21
V+bf6623XtYxqenF+9D8zKxpRz0173O0zbj94DhRr0cYO+yww9xaYra1bt06
633fp0+frL+zX9J98eqaedatW7esv6+yyiqZPrVs2bKoY1100UXO7bff7vs3
anz7XRPs+uuvd7fhv0HbYMccc0zR14P60UHtUzuLunX8f/fu3RO/F1tttZWz
4447umtkHGPgwIHOhhtuWPA5bdGiRWCb3LMozzx507/44ou0X29CCCFEWVDu
2ZrLzTffnDXGOeKII9LukqhlSEupXGwtRSaTyZKwAw44IO3XmxBCCFEWpKXU
XH766Sd3Haxhw4buerFZb1mIciAtpXIZO3ass/rqq7vnvfXWWzvrrrtu6nMw
mUxW/bbpppum/XoTQgghyoKnpZBXY8qUKWl3RwhRg5CWUtnMnj3bjfsjxwK5
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
T85pC1+XCRMmODvttFPmM9Y8vvvuu0TO1dZS8LkUQgghhKhWyqmlUGPXnLcz
t2Q+Y2smn3/+ufPKK6+UvD8e3vrcVVddVZbjsebYqFEjN64JzcBPc5g7d66z
6aabRtJK6tat6/pl33///c6NN97oHsP8e+fOnTPtDxkyJFGdxs84v4022siZ
MWNG6GuDjrLrrrtGOk7jxo3dtd0g8IEytaByYmopl156ac7fH3nkkaxziaul
mGvM0lLCYWspUZ5TUXv45ZdfnC233DLznBRTR8cP1g28tslPwu+fDXoxuVtM
XTjI0EHCgG/KLbfckpXX1s/4PUkKW0u5+eabE2tbCCGEEKLclEtLId8d9RxN
HaXYuiZoMA8//LCzaNGi2G0wtvP8LvBzKAT+1E2aNHHHoHFBS8EPxrsW+Fn4
5YZhTE0OwksuucRdq8TYjv1N++OPP9z/2uvqjL/5nLiWHj16ZK1Xcg6l1lI8
W2edddx6n4UgFieqjuLZqquu6gwYMMC3xia5YorVUs477zz3+X366acj7Wdq
Ke+//37O3+2cknG1lK233trdv169ehVTL6jatJRHH3007S6JCoXfq1JoKW++
+WaW3x81dXjHE1c5atQo18gp1rp169DvwrXXXjtSH9AzzD6YdthhhyV2roA/
pjkOwDdSCCGEEKJaKYeWMn78eHeua+ooSfhJ9+7d222PuO5Zs2bFasOsaWDG
wATxr3/9K7MtPhRxeemll9xrbo6h4/DCCy84m2++uev7HQXG6j179szYbbfd
5uZn8WzQoEGZvjVt2jTrb4UMP3Pm9OaYHJ+kfPA8+OkozZo1y7R7/vnnu31l
/M0co3nz5lnPFYY2YWtK6CtebuM4Wgp5e7zcAeQUiIKppZDvwMY+38ceeyxy
/8CLByu3300QP/74oxsjVslaCjqstBQRhlJoKWjg5KNOUrfmPfXQQw9F7gvv
VLst3pml0GXNXL7E98bJ9yKEEEIIUQmUUktZsWKF069fv6y4Hua/ScWbH374
4Zl2WWOOQ1Qt5cADD8w7N47CAw88kGkL35M4kJuV/c34nSRAm/L6tu+++0be
H3+Ytm3bZtrADydfnetevXrljOVbtGhRMNftRx995PqKUK8o35zY0xrQXt57
771I59KtW7dM21G0FPyCuHZBz4uZr8gzfPzxgYmag7bStBTqQeNvVclailmn
BEsqJ4SoeZhaynHHHZdIm3feeWcsvQS/DvwK0ZbN9x52zDHHxOoLecZNX0nv
OOQSS5py1EUSQgghhCgHpdRSyD9ijpmS8kfxqHYthTh8fEpoi7Ex2lNUPC0l
6fv3zjvvhPYpCeL222/Puv9B8THEIOGXzjZoAhyPfDlRcoGiPVDnhzbIQWPj
aQ34suOTExaeV7N2RhQtxbyGfs+LWUfLNuKi8P8PS6VpKTB48OCq0lKUe1YE
YWop+NwV60tB/eHtt98+lHay1157OQMHDnTtiSeeyIoVRAMx82rVr18/Vn+o
32Pn1/Lel/hiJsl+++0nLUUIIYQQVQ9+At54hjkY47ukIPcF2oTpj5L0uq+p
pTzzzDOx2jBrNJRbSwHykXrtRfWXMPdPWks5+eSTM/368MMPY7Vhayl+vvE8
c/ifeNsUk//XG6PbuRfRrLxYIGrmRIGYG/Mcomgp5jVEK7PnX/m0FIwcCWHm
GcWcXykZPny4tBRRIzC1FMyrFx8XYjr9vvN8j8kzdMUVV7j1dMhL7lcf2YQa
eGYb/KZF5dRTTw18D+Er55frKS7XXHONtBQhhBBCVD32XC5MftCwmDEiGHVp
ksbUUpgXxcXLhZeGlkK9Ha+9OPUhvbwkSWspZk5U8gXGgbrIXhv0jxwaNsQ2
edtssskmsXPQMA/2+mxrKebYPUx+YRMzvieKloKW6PnaBD2f5vcPLZN5k60/
tWrVquAcv5jzKyXVpqWw5i+EH0lqKexLnhCzPeJ1RowY4cyfPz9ye/iUmD4u
UeN8yD1l552yjfd3UnpK//79paUIIYQQouopp5bC3DJpTC3FzBdCbAQxIp9+
+qn7b9b1qOvIeJVcrSb0y6thEFVLIb6mWIrVUsyxbpIUq6Xgg2HWEW3ZsmXO
NsTaeDldMfLHxMWM1bJjfMyayFG0hs8++8yt6RxHSzH9jYKeFfP7590/alPZ
OXgL+eqY53f00UeHPr9SU21ainLPiiCS1FKuvfbarLaSqAts5gonZ+yLL74Y
ar/Ro0dn6ShoPPPmzXO++eabnO8HsUTkkS82vkn5UoQQQghREyinlnLSSSdl
1eRNAmJGvPbxLcGvAfO0EXLe8m8z1sjcDjNrjUTVUqh9UyxmjFH79u0j71+p
Wgq1JMz7b9enIadshw4dMn9v06ZNrHwxMHny5Kz8xszhTeJqKccff3zO+uxW
W20VKhYE3xhvH54xv1rNfloKsDZt5pRcc8018/rtm+eHNoU+51dju9yYWoqn
a1YS0lJEWJLSUm666aas+sP8LhbKrx0GcjOZtYbxiQvSUzgev1383pj7rLvu
ulljAN5zZpyiqVXbaxJRkJYihBBCiJpAKbUU5nL2+jpzQmrE3nXXXYmMn/A1
scd5xRhjyUIxJknH+Hz55ZeZ9tq1axd5/3JoKfh8RIH6NYy3zfVMO77HjO3B
8COKw9ChQ7PWVXnGZs+enbWNqTXwTIZh5syZWfMM0wrlLzjnnHMy29I38h74
EaSlwIIFC7LiAOrWrRuop9jzPCxuXagkMbWUOXPmpN2dHKSliDBQk8r0sStG
S7F/E5PMQ2LXoffLwc16hh1f5NlZZ52Vsz26y4ABA3K2rVOnjpvvGl/PqEhL
EUIIIURNgDlvqbQUIH7GHjt6xro7fsnoEax/0ZeomD4dSRlr+vmojVrKLbfc
Emlf6vKY1/TEE0/M+jvjc9OPBJ+UqPefPMZ2vsRtt93WmTp1as62ppaCTZ8+
PW/b+FCYtTGiaCm2vkde3SDMubzf/cMfyIyBQifyy7GMBmj3sZj8QUkhLUXU
BNBmzeeE2mt//PFHrLZMHYH3V5L07t07q5/oPzbE7th1lD1tZOzYsb7tkscp
6H2I3hyVrl27ZvbHF5Tc2UIIIYQQ1Yg5LnrppZdKcgxyY+688855NYymTZu6
/irMRTH8kwut/TGnNWvAkL+Tebtp+ARg5CLxPjv00EPdcSb+1uT6NGtB/vOf
/8x7zNqipZB3w2s7ak1M1jfNMbqd05P74f2d+Jco65JoLvfcc4+zzTbbZD0/
PF9BdaKIATK3zZdLAJ3Hz6/dNHI92qAHUgPY1Iiof+EX2+Nxxx13ZLZFD1m8
eHHONm+//barEZl6yrRp07L+Tn4Es3/Eri1dujTfZSwL0lJETYBaYwcddFDm
OTnvvPNit0WtNuIML7roIt/3SLGgp3j10Tt16uS7De+kyy67zO2HZ9QVyge1
3Lp37+7+xprmlwerEKzZoMHw3sKvUAghhBCiGmFtzZxL9OvXr6THI88d8QiM
wZhnFvIRYUx4xBFHuH4OQZjaBuPDOFD3QFpKNldffXWm7Sj5UqgJYd5DYrps
TD8RdLMwoFXMmDHDOe2003Kek0MOOSRvve2wWgrfh1tvvTVrW+pj4OvCM+t9
5pcj184Pg1155ZUFz8vUnMiZ7Ac5em2thPVl6NOnT85x+/btW/C45UBaiqgp
oOvjz4bFzetULj766CO3n5WQMymIBx980Hn44YfT7oYQQgghRGzsfCml1lJM
mJ9ffvnlrj/KFltskVU/1jbW4g877LDM/NEkCS3FzE0bRUth3l0s6EtxtZSn
nnqqZFqKWRfi888/L7g9a6z4FZl5Fffee2/f8Tyf83fWJT/55JOCbfOs4Etk
Pxfrr7++q90Uyt0YRkvBj51n0dyOtVPP771hw4aZz4899tjMftT6PvPMM91n
1Pt748aNQ9d4CnP/8MXp2LFjVt+aN2/uahV77rln1udcf3IyVwKsOVeylkL+
TNOnB58BIYQQQgghhCgEtVbNeVhcLSIJqF1y5513Ovvvv7/rC2DGNXjWo0eP
nFwVSWgpZo7RQlrKueeem+j1MjWCqFrKCSecUDItJUq+FHQU07cHw/fbT0dh
PdK73oX8w4mjx7fDzgdCHA2+7Pl8UUzIe2vWazK1FOp7jhs3zs2BYOso5nkT
G+b9Dd8q/HZ69erlqwHm86OyCXv/Fi1alBWLFmTUGaoUPM2sUrUUQMf1+him
PpMQQgghhBBCmHNxLOncs8XAvIb6MfTRXPO3a5mUW0sx6zCTVzduDkIgPw31
Wbz2ouYiLJWW8ueff2blt8mnpaBF2DoK/iJB8SpmLpUuXbrk/B0/FfwD0FDQ
Bcx2ifnq1q2b8+6770Y+J2L9vXbQ68htQiyMnXcFIzejnTvo+eefD6zrY94D
cvBEmZN7+xJDVCg/EHVMC2kp5fQtK4SppQTVMkobU0t58skn0+6OEEIIIYQQ
ogqwa45UkpZi0qpVq0wfifUxMbUU8qXGwZwjM8/Oh6mleDpDVD2FmI1HHnnE
adKkSaYdNJVZs2ZFaqcYLQW9gjwc5D/daaedXD8gz2z/B/5O/D3bm4auZcfF
YFdccYXvMfEzMWNlyBFiHhez86h6Ro6QsLlV/DC1lHyGVhOkabRv3z5wP3SD
KHllPKJ8//DJ+sc//hHYB+ovE3NUKZhaCteu0njnnXeyYtKUL0UIIYQQQggR
BjtfyqWXXlpUe8wlyQNKvEQYY351zjnn5DXqJzBHNOe6JqaWwjw8yB8iH6aW
go6QD1tL8eb5Yc/ZM7uNnj17Ru63qaWgxYSdRz/22GOBmkUxhj8K+QSpe+EH
uXrNexnGmOsOHDgwVM6WfFCnIt9xNthgAzfWJ1/ulc8++8xp0KBB1n74sDz9
9NOx81F67ayzzjrO119/XXD7fHoK+ZwrCVNLadu2bdrdyeGNN97Iun7SUoQQ
QgghhBBhSDr3LPVNkp6f20YtFxNTS8GuvfbayP2OoqVQtxbNIMlzYg48e/bs
yP0m7sSc0+erv2tSSFeIY3vttVeo3J2dO3cO1R7+LhMnTnSWLFkS+br4gUYy
YsSInONQJ4o5NT4zYVi2bJkzZMgQN18LfjmF4nIKgQ6HrhVlHk+9Y7MWuHkP
KglpKUIIIYQQQoiaSNJaCnPLUuooRx55ZI7fADlVzG3IbRqVNm3ahNZS4IYb
bkj0vPATiYvXxtlnnx16H3LCtm7dOqcfxN9wjTEzVyv6h/e5bRdffLHzxBNP
hPbLwHeJe+QZNXDM9qh5TA1iO8dwEvDs4DNjGvFWaUJ8GDlnokLOGPySuGZo
MeQKpr52JWFqKeTUqTTsmsiPP/542l0SQgghhBBCVAFJaynMVfFNIZ9j165d
3bmJacyPyQlhftanTx/n+OOPd/eztyeWgZga/h+dxi/+gs+oTUxtFbYrVB/X
j3nz5rl5TtdYYw2nf//+oc7zueeey+lvHJsyZUqsPntwz7h+xJlEgWP6WdDf
ReVSqffI1FKuu+66tLuTA35P5vtPdXyEEEIIIYQQYZg0aVKiWooQQnhUupZy
7733Zr3/ouZ+FkIIIYQQQtRe7BgaIUTlQSzSokWLXPvuu+8yn//444/uZ8Ra
kcsZu+aaa9y61mlDPypVSyHvEXWozfffjjvu6PYzjBGXN2fOnLz2zDPPuNuS
D3vy5Mmh245i1Layj0veoksuucTNUeMZ7/YXX3zR9e8LagtfO/I2xenHnXfe
WfB6xDU7lxHxhDNnzvTtx/Dhw9176/HDDz8k3p+bb74565jk3THBz7FU1wIr
NpaPvFpJ9cX0h+O+UFfc777ky+XF/SqmD5XwrhNCCCFE7YS8p95cglom9hiI
2iUPPfSQW8PXHL9QS5e/48vCWP3cc891a7j4jXWon5vU3OG+++4ryfjUj+XL
l5d0TGza22+/Het6kLslzvG8+1esnXLKKW6tJe/f1Fk677zz3P8fOnRoZi53
6qmnOvfcc497bOY7/J35HbWKi+0Dc3Zz3ljIyDOSxLmb5+cZNbv9tiXnTL4+
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
VZCNGjXKWbZsWaw+CCFEPng/8rsjLUWI//s+oD/8/vvvZT3uU0895fzrX/9K
1GeEdSfmt37jOtalZs+endixRGWwcOHC0ONFnvW3337bufDCC93nIcq8IIxt
ueWWzpNPPumuhwbxzTffOA8++KCrZ5ST++67z2nVqpU7V7D7vfbaazsPPPBA
Isf59ddf3feJZ/y7toCOgp8A13SdddZxXnnllUTaXbRokfPpp5/G3v8///mP
67cQRd955pln3H0w5qTmPbWN7x9zZvMz1vcrmTPOOMO9T6usskrsOW9S8Dto
fh8bNWpUcJ9hw4bl6LtJ+FOgo2y77baJvRO/+OKL0Mfea6+93H3q1KnjHHvs
sUW9O3hmacfsywUXXJB3n1tvvTVre96JcfSUcePGZcYckydPjrw/7+Okrv9W
W23lvPnmm5H7IIQQ+XjhhRey3jXSUkRt47333nPnlJdeemlm/NKsWTPn+eef
L8vxf/zxR2fTTTd1j3v11VcX3R460EknnZTjb3z44Ye758R6F8ZcJx/8nfcB
12XevHlF9yssjL04JnOmOLB2xf6sGzKm9jNi8Vn/fOedd7Isyli3kmDN7ZRT
TnG1ATQM81yZJ/lpdOgXSesnfsY6rh9877znHmPsXmoWLFiQtX4dZIzfeR5s
+G7Zzwy++zxvfsbar60vBT2Tnp111lmuJlbtXHzxxVnnjp4yY8aMotrkWtev
Xz8zXz7qqKMirTV/9tlnmfci6+2FtOtjjjkmK59cWA3Rvu+bbLKJG1/BM8F8
spzv0zDcddddmb6SqyQtuJfMd72+7LPPPr7fQxM0Mb/5dq9evZzvv/++qP4M
GTIk9H1n3eKSSy5xhg4d6prpCxpVS8FvdKWVVsrat3PnzrH0FPw37LZ4Hgut
Fz333HM5/R84cGDk4xOf4+3P9ykqSWopGO+Pn376KXI/hBAiiDvuuENaiqh6
vv76azfOALvooovcMbtnjKcYb5mf9e3bN7O9vV6DEeN87733lqXvjKu94+68
885F+aagfzBeMc+FdbUXX3wxcluff/55po099tij4Dof14vree655zr/+9//
YvWf+7jeeuu5xzznnHMi74+vuj2PiWJ169Z1BgwYEKvv5YZ5x5133uk0btw4
Z6xsGzkcbcaOHeu77e677+60a9cuxxiTMxcwjWfk7LPPzmzTvHnznPaOO+44
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
s8lzjk6fPu27L7W87L5hRH0+5/FbtmwxNd2pJb906dLEnTt3zHpqz0Vp10/U
vaN9NGbMGFO3z/bH9mHDhiW3e2n58uVmv+nTp5u6f9Ym6NChg9lOXn7Wk2OR
muVebfTr18+00b17d9++/DR//nzP66Pfzp07J8+rWbNmodqrWbNmol69einr
unTpknGtR6saNWokpkyZkslXRAhRyZEvRQghhKj83L17t4zN+uTJk8StW7dS
FKemNDWE7fEfPnxI9uduO4rev3/v2Rc1uJYsWWJs0p8/f5p11KWO2j61u3bu
3Gn+pr41bWZD5Jmj1livXr3MMjYeywg7ze5HXbJz585Fbp8a9LY9NHPmTLO+
sLAwZX1YcX5xrxUbPU6fVrVq1TLvlnl5eca+T3c/W7duXcZOjdJPu3btsmYf
S1IUDR8+PPLvqRCiasD7VN++fVN+EzZu3Jj4/ft3eZ+aEBWKuHWFswHjbVeu
XEm8evUqa21iA9k6xzdu3DDtI/j48WNy2U8vXryI1Ofr169DtRtH1Hb34vv3
72b7p0+fzDJjgQsXLky8fPky9Hkzhhj2PEpKSsocbz8/dOrUqcS8efOM9u3b
Z9Y5bV9ikTO9F7RL+4wzsrxt2zazTJ1su8+6deuS57Fjx46cfCZHjx5N9oGK
i4vNNWITb9++PWUbOnz4cM6eD6vFixebvi5dumSW9+7dW+Y81q5da7ZRJ3vU
qFGJli1bGluNbYMHDzbLVj179ixzPFq9enVKf2E1Z86clPajqnr16omGDRsm
5s6da9qj/jvjsu53/xYtWkRuu3nz5snjqS9v+8vEBrHtuFW7du3kPk2bNjXr
GFsub5tJkiTJrf3790d5FRJCVCF4z/P6XWjQoEGiUaNGiaFDhyamTZtm/naL
8QXGW6wY+xk0aFBy+4QJExIzZszImaZOnep5Xk41adIkp+fAmBT9cC7ube3b
t085F2IA4/Yzfvz4wGvt06dPYuzYsYH7jRs3LmvX37ZtW9++evfubewp/HPE
hjI2xnHEhxIDmovPhOsLugdO2XNyi+fXuV+1atWMjeLVBnYWx/To0SNS304R
k+vs38av8v3j+8j3EvuC6+OzjtuPFXGp9evXT16b/e6zXLdu3VDvD4w3RunT
aR9lW9hZXn1iq7Gda2LZ2pVRzp17FfY82Nd9vP38wpx7nTp1yv29MFfiOavq
1yhJUuVVq1atEiNGjDD/97Lcv39/M8eFmBrWO0W8TlB7xMps2rTJ+LcR79Ss
x8fpbs8p5tnYY/DtWt97NkRsk1/fQSJGCh80f/PeEvc8uCbawH+M35pcLOlU
Wlqateu3YjyF+Dq7zBiS3zlYXb161fiq7f1YtGhRrDg/IUTVYPTo0eX+f5ck
SZIkSVVD+MzcyuTYbKhTp07GD40/3PZDzBHr0mngwIGR+/FrL0jMc2Hsgfk9
7m2NGzc2/n22Bwk7PEq/GzZsCNVuVDF/i7yl6ODBg6av9evXGxvWrrc6f/58
Rn29efMm8fTp05R1Fy9eLNNPkIghBGxjlv/8+WP+Zn6bm79//4Zuz0J7rC+v
GFchhBDZ5ciRIxnH6EpSVRExBcQI/Itxc9uXn+w881zK5mXzEznnMumDeJSg
9lgXdB5ecxWiinua7r4Su+LVr7UF+a1kOUp8DX3ZdniuaCvoOsMq3XOKvUgc
nFvEhGSrb6e8/g+x98r5DKSLd3Leo6hi7ofXtYYR481+bU+aNCnRsWNH83e3
bt1i9+Mn5jXt3r3b/H3ixAkzB8xPK1euLNMGY6RsKyoq8uxjz549Zjv7sXzs
2DHPtsn5yPZDhw6V2Ub+ylmzZiWXiWl391NQUJB4+PCh57vG2bNnA6/t5s2b
OX/nYc4fff369SvnfQkhhBCi6nP8+HEzZmPtO2IZcyHm28yePbuMnPnCice3
63k3y/Y55Ofne55DkDh32wbzWpgbRU45t86cOROrfcQ7slebccX4T5zzILe9
bYPY1FWrVpm/GTdi+4EDBzz7I14Tm8C9fuvWrbHvCTkdbDvkfMjkXq1Zs8a3
L8YEHz9+bL4TvGdn87Nw3s9du3aZv9PZHE4+f/6ck/NwitwVQZAXJZM+vn79
mtLes2fPktuwsXh2WBfE27dvM75e7injpV7bvMYe4cKFC+YZsflkyG8Stj9n
HhdyaJKbJlv8+PGjTH/k1/zXkCPGfR63b9822zgflrlnjMd63SObx1QIIYQQ
QojKBu+4165d88ybmGsYJ6JvlC5/pBBCCCGEEEIIIURU/gMYVMSK
    "], {{0, 426.}, {830.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> <|
       "Creation Time" -> 
        DateObject[{2022, 3, 8, 21, 52, 20.}, "Instant"]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{830.25, 426.},
  PlotRange->{{0, 830.25}, {0, 426.}}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.855758108339001*^9, 3.8557581361185274`*^9}, {
   3.85827345522062*^9, 3.85827350561689*^9}, {3.8589637081703367`*^9, 
   3.8589637131169925`*^9}, 3.858963756754156*^9, {3.8589638124829454`*^9, 
   3.8589638433390756`*^9}, {3.859069968233945*^9, 
   3.8590699710395184`*^9}},ExpressionUUID->"c4e0f289-5e7a-4a09-821f-\
f2d5beb5ce6f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8590699656818223`*^9, 3.859069965688842*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"7101bb6c-92b3-4e04-b12f-5858401cf27f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution Procedure", "Subsection",
 CellChangeTimes->{{3.855758477216158*^9, 
  3.8557584877949657`*^9}},ExpressionUUID->"93fd4a74-85ec-46f6-9b4c-\
49119a49f00a"],

Cell[CellGroupData[{

Cell["From Table 2.15, for twin engine propeller driven", "Subsubsection",
 CellChangeTimes->{{3.8557587886393757`*^9, 3.8557588233772774`*^9}, {
  3.8557595417350073`*^9, 
  3.8557595422037277`*^9}},ExpressionUUID->"c30b081a-09dd-4d83-b3dc-\
c772755c47a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AB", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<D:\\\\Aerospace\\\\Aerospace-2023\\\\3_Third Year\\\\Second Semester\
\\\\AER 3910_Aircraft design and manufacture [125 marks]\\\\WTO-A,B.csv\>\"", 
     ",", "\"\<Dataset\>\"", ",", 
     RowBox[{"\"\<HeaderLines\>\"", "->", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"WR", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<D:\\\\Aerospace\\\\Aerospace-2023\\\\3_Third Year\\\\Second \
Semester\\\\AER 3910_Aircraft design and manufacture [125 marks]\\\\Weight \
fractions.csv\>\"", ",", "\"\<Dataset\>\"", ",", 
    RowBox[{"\"\<HeaderLines\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.8582746686295023`*^9, 3.8582746686335297`*^9}, {
   3.858274720181863*^9, 3.858274739046924*^9}, 3.8582750983524046`*^9, {
   3.8582751654269314`*^9, 3.8582751703621883`*^9}, {3.8582752351465144`*^9, 
   3.858275261665599*^9}, 3.8589555115020056`*^9, 3.858955615383834*^9, 
   3.8589562608324747`*^9, {3.85895630853749*^9, 3.858956319981936*^9}, {
   3.8589566101602125`*^9, 3.8589566147005663`*^9}, {3.8589636111740427`*^9, 
   3.8589636257203693`*^9}, 3.858963659172782*^9, {3.859069998038489*^9, 
   3.859070025376521*^9}, {3.8590944694040356`*^9, 3.8590944701774864`*^9}, 
   3.859094594486267*^9},
 CellLabel->
  "In[734]:=",ExpressionUUID->"6eeff20a-7d0b-4aaf-8109-4abf082cb3d9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Homebuilt" -> <|
        "Engine Start, Warm-up" -> 0.998, "Taxi" -> 0.998, "Take-off" -> 
         0.998, "Climb" -> 0.995, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.995, "Landing Taxi, Shutdown" -> 0.995|>, 
       "Single Engine Propeller" -> <|
        "Engine Start, Warm-up" -> 0.995, "Taxi" -> 0.997, "Take-off" -> 
         0.998, "Climb" -> 0.992, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.993, "Landing Taxi, Shutdown" -> 0.993|>, 
       "Twin Engine Propeller" -> <|
        "Engine Start, Warm-up" -> 0.992, "Taxi" -> 0.996, "Take-off" -> 
         0.996, "Climb" -> 0.99, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.992, "Landing Taxi, Shutdown" -> 0.992|>, 
       "Agricultural" -> <|
        "Engine Start, Warm-up" -> 0.996, "Taxi" -> 0.995, "Take-off" -> 
         0.996, "Climb" -> 0.998, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.999, "Landing Taxi, Shutdown" -> 0.998|>, 
       "Business Jets" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.995, "Take-off" -> 0.995,
          "Climb" -> 0.98, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.99, "Landing Taxi, Shutdown" -> 0.992|>, 
       "Regional TBP's" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.995, "Take-off" -> 0.995,
          "Climb" -> 0.985, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.985, "Landing Taxi, Shutdown" -> 0.995|>, 
       "Transport Jets" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.99, "Take-off" -> 0.995, 
         "Climb" -> 0.98, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.99, "Landing Taxi, Shutdown" -> 0.992|>, 
       "Military Trainers" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.99, "Take-off" -> 0.99, 
         "Climb" -> 0.98, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.99, "Landing Taxi, Shutdown" -> 0.995|>, 
       "Fighters" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.99, "Take-off" -> 0.99, 
         "Climb" -> 0.96, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.99, "Landing Taxi, Shutdown" -> 0.995|>, 
       "Mil.Patrol, Bomb, Transport" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.99, "Take-off" -> 0.995, 
         "Climb" -> 0.98, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.99, "Landing Taxi, Shutdown" -> 0.992|>, 
       "Flying Boats, Amphibious and Float Airplanes" -> <|
        "Engine Start, Warm-up" -> 0.992, "Taxi" -> 0.99, "Take-off" -> 0.996,
          "Climb" -> 0.985, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.99, "Landing Taxi, Shutdown" -> 0.99|>, 
       "Supersonic Cruise" -> <|
        "Engine Start, Warm-up" -> 0.99, "Taxi" -> 0.995, "Take-off" -> 0.995,
          "Climb" -> 0.92, "Cruise" -> "Cruise", "Loiter" -> "Loiter", 
         "Decent" -> 0.985, "Landing Taxi, Shutdown" -> 0.992|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 
        1, {All, "Engine Start, Warm-up"} -> 1, {All, "Taxi"} -> 
        1, {All, "Take-off"} -> 1, {All, "Climb"} -> 1, {All, "Cruise"} -> 
        1, {All, "Loiter"} -> 1, {All, "Decent"} -> 
        1, {All, "Landing Taxi, Shutdown"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[257.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Engine Start, Warm-up" -> TypeSystem`PackageScope`AtomShape[60], 
             "Taxi" -> TypeSystem`PackageScope`AtomShape[60], "Take-off" -> 
             TypeSystem`PackageScope`AtomShape[60], "Climb" -> 
             TypeSystem`PackageScope`AtomShape[60], "Cruise" -> 
             TypeSystem`PackageScope`AtomShape[63.], "Loiter" -> 
             TypeSystem`PackageScope`AtomShape[63.], "Decent" -> 
             TypeSystem`PackageScope`AtomShape[60], "Landing Taxi, Shutdown" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 8, {All}]]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Engine Start, Warm-up", "Taxi", "Take-off", "Climb", "Cruise", 
         "Loiter", "Decent", "Landing Taxi, Shutdown"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Cruise"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Loiter"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 12], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 
        1, {All, "Engine Start, Warm-up"} -> 1, {All, "Taxi"} -> 
        1, {All, "Take-off"} -> 1, {All, "Climb"} -> 1, {All, "Cruise"} -> 
        1, {All, "Loiter"} -> 1, {All, "Decent"} -> 
        1, {All, "Landing Taxi, Shutdown"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[257.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Engine Start, Warm-up" -> TypeSystem`PackageScope`AtomShape[60], 
             "Taxi" -> TypeSystem`PackageScope`AtomShape[60], "Take-off" -> 
             TypeSystem`PackageScope`AtomShape[60], "Climb" -> 
             TypeSystem`PackageScope`AtomShape[60], "Cruise" -> 
             TypeSystem`PackageScope`AtomShape[63.], "Loiter" -> 
             TypeSystem`PackageScope`AtomShape[63.], "Decent" -> 
             TypeSystem`PackageScope`AtomShape[60], "Landing Taxi, Shutdown" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 8, {All}]]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "Engine Start, Warm-up", "Taxi", "Take-off", "Climb", "Cruise", 
         "Loiter", "Decent", "Landing Taxi, Shutdown"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Cruise"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Loiter"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 12], "Path" -> {}, "DisplayedRowCount" -> 
     12, "DisplayedColumnCount" -> 8, "DataRowCount" -> 12, "DataColumnCount" -> 
     8, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Engine Start, Warm-up", 
                  Style[
                  "Engine Start, Warm-up", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Engine Start, Warm-up"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Engine Start, Warm-up"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Taxi", 
                  Style[
                  "Taxi", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Taxi"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Taxi"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Take-off", 
                  Style[
                  "Take-off", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Take-off"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Take-off"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Climb", 
                  Style[
                  "Climb", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Climb"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Climb"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cruise", 
                  Style[
                  "Cruise", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Cruise"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Cruise"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Loiter", 
                  Style[
                  "Loiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Loiter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Loiter"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Decent", 
                  Style[
                  "Decent", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Decent"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Decent"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Landing Taxi, Shutdown", 
                  Style[
                  "Landing Taxi, Shutdown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Landing Taxi, Shutdown"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Landing Taxi, Shutdown"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Homebuilt", 
                  Style[
                  "Homebuilt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Homebuilt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Homebuilt"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Single Engine Propeller", 
                  Style[
                  "Single Engine Propeller", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Single Engine Propeller"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.997"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.993"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.993"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Single Engine Propeller"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Twin Engine Propeller", 
                  Style[
                  "Twin Engine Propeller", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Twin Engine Propeller"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Twin Engine Propeller"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Agricultural", 
                  Style[
                  "Agricultural", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Agricultural"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Agricultural"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Business Jets", 
                  Style[
                  "Business Jets", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Business Jets"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Business Jets"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Regional TBP's", 
                  Style[
                  "Regional TBP's", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Regional TBP's"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Regional TBP's"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Transport Jets", 
                  Style[
                  "Transport Jets", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Transport Jets"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Transport Jets"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Military Trainers", 
                  Style[
                  "Military Trainers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Military Trainers"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Military Trainers"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Fighters", 
                  Style[
                  "Fighters", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Fighters"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Fighters"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mil.Patrol, Bomb, Transport", 
                  Style[
                  "Mil.Patrol, Bomb, Transport", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mil.Patrol, Bomb, Transport"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mil.Patrol, Bomb, Transport"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Flying Boats, Amphibious and Float Airplanes", 
                  Style[
                  "Flying Boats, Amphibious and Float Airplanes", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Flying Boats, Amphibious and Float Airplanes"]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Flying Boats, Amphibious and Float Airplanes"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Supersonic Cruise", 
                  Style[
                  "Supersonic Cruise", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Supersonic Cruise"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Engine Start, Warm-up"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Taxi"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Take-off"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.92"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Climb"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cruise", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Cruise"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Loiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Loiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Decent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Supersonic Cruise"], 
                 Key["Landing Taxi, Shutdown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{941., {173.9206298828125, 179.0793701171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{941., {173.9206298828125, 179.0793701171875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8590945977172613`*^9, 3.859094696127704*^9, 3.859094839131263*^9, 
   3.8590951811781144`*^9, {3.859095298047724*^9, 3.8590953053177204`*^9}, 
   3.859095593773028*^9, 3.8590976119185977`*^9, 3.8590976468837323`*^9},
 CellLabel->
  "Out[735]=",ExpressionUUID->"f2e76979-e759-41dc-b67b-d5f0846d82f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aE", "=", 
   RowBox[{"AB", "[", 
    RowBox[{"4", ",", "\"\<A\>\""}], "]"}]}], ";", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<A = \>\"", ",", "aE"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bE", "=", 
   RowBox[{"AB", "[", 
    RowBox[{"4", ",", "\"\<B\>\""}], "]"}]}], ";", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<B = \>\"", ",", "bE"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.855758847778395*^9, 3.85575889205285*^9}, {
  3.858274839566679*^9, 3.8582748932331915`*^9}, {3.858274980573524*^9, 
  3.8582749899905405`*^9}, {3.858275030766704*^9, 3.85827503179845*^9}, {
  3.858275068438301*^9, 3.8582750715379443`*^9}, {3.858275274787218*^9, 
  3.8582753196215305`*^9}, {3.8590663354530478`*^9, 3.8590663437111793`*^9}, {
  3.859094191819767*^9, 3.859094192987915*^9}},
 CellLabel->
  "In[736]:=",ExpressionUUID->"169fbeef-2abd-4815-ae95-29cd75c84b5a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.144`"}]}],
  SequenceForm["A = ", -0.144],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700889435472`*^9, 3.8590701089042993`*^9}, 
   3.8590942259473796`*^9, 3.8590943487594695`*^9, 3.859094598079277*^9, 
   3.8590946965027065`*^9, 3.859094839583312*^9, 3.859095181646693*^9, {
   3.859095298413725*^9, 3.859095305746725*^9}, 3.859095594134035*^9, 
   3.8590976122805996`*^9, 3.859097647249736*^9},
 CellLabel->
  "During evaluation of \
In[736]:=",ExpressionUUID->"ade20fc9-02d3-48f1-bb66-031ab8ce1fb5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"B = \"\>", "\[InvisibleSpace]", "1.1162`"}],
  SequenceForm["B = ", 1.1162],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700889435472`*^9, 3.8590701089042993`*^9}, 
   3.8590942259473796`*^9, 3.8590943487594695`*^9, 3.859094598079277*^9, 
   3.8590946965027065`*^9, 3.859094839583312*^9, 3.859095181646693*^9, {
   3.859095298413725*^9, 3.859095305746725*^9}, 3.859095594134035*^9, 
   3.8590976122805996`*^9, 3.859097647256733*^9},
 CellLabel->
  "During evaluation of \
In[736]:=",ExpressionUUID->"42e11797-3127-4d4d-b7bc-4d9d8fbc79f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mission fuel fraction", "Subsubsection",
 CellChangeTimes->{{3.8557589303287888`*^9, 3.855758940601262*^9}, {
  3.8557590979489202`*^9, 
  3.8557591168627625`*^9}},ExpressionUUID->"a9adbf46-2e06-4d7b-bf41-\
3f7fb43cef8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WRP", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Weight", " ", "Ration", " ", "of", " ", "each", " ", "phase"}], 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.85576018416877*^9, 3.855760217176553*^9}, {
  3.855760306665526*^9, 3.8557603068061714`*^9}},
 CellLabel->
  "In[738]:=",ExpressionUUID->"c3841dcc-fe89-471c-8366-adc6f3f81c27"],

Cell["\<\
Phase 1 : Engine Start and Warm - up 
Phase 2 : Taxi 
Phase 3 : Take - off 
Phase 4 : Climb 
(as indicated in Table 2.1)\
\>", "Text",
 CellChangeTimes->{{3.858273530887868*^9, 
  3.8582735329566627`*^9}},ExpressionUUID->"5d5b046f-17ac-4ee9-91fe-\
abbfe0ecb1d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WRP", "=", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{"WRP", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"WR", "[", 
         RowBox[{"2", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], "}"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8557592633350987`*^9, 3.8557593077094383`*^9}, {
   3.855760010010157*^9, 3.8557600495302615`*^9}, {3.855760219663251*^9, 
   3.855760224837577*^9}, {3.855760563057331*^9, 3.855760593106301*^9}, 
   3.8557606341095996`*^9, {3.8557639936624417`*^9, 3.855764013685385*^9}, {
   3.855764334856061*^9, 3.855764345779889*^9}, {3.8557643823672624`*^9, 
   3.855764385313279*^9}, {3.855764875927577*^9, 3.855764940095214*^9}, {
   3.8558196392826686`*^9, 3.855819659451172*^9}, {3.855819692081537*^9, 
   3.8558197540817842`*^9}, {3.85581982239062*^9, 3.855819833452299*^9}, 
   3.858956270643453*^9, {3.858956464845872*^9, 3.858956489224497*^9}, {
   3.8589565283137093`*^9, 3.8589565608629866`*^9}, {3.8589566270518208`*^9, 
   3.858956688690325*^9}, 3.858956727152883*^9, {3.8589570282303405`*^9, 
   3.8589570791390457`*^9}, 3.858959918761794*^9, 3.8590946883792596`*^9},
 CellLabel->
  "In[739]:=",ExpressionUUID->"de1d3312-682f-4c3b-bcee-24e925a01efa"],

Cell["If the Climb was inclined", "Text",
 CellChangeTimes->{{3.8590510067571273`*^9, 
  3.859051041386693*^9}},ExpressionUUID->"1bd0745a-d182-4dc3-bb2d-\
7fc4d4ea01f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Vcl", "=", "275."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"average", " ", "climb", " ", "speed", " ", 
     RowBox[{"(", 
      RowBox[{"kts", "->", "nmph"}], ")"}]}], "\[LongDash]", " ", 
    RowBox[{"assumed", " ", "if", " ", "not", " ", "given"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rcl", "=", "2500."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"average", " ", "climb"}], "-", 
    RowBox[{"rate", " ", 
     RowBox[{"(", "fpm", ")"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Alt", "=", "20000"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ecl", "=", 
    FractionBox["Alt", "rcl"]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"endurance", " ", "of", " ", "climb", " ", 
    RowBox[{"(", "min", ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rcl", "=", 
    RowBox[{
     FractionBox["Ecl", "60."], "\[Times]", "Vcl"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"range", " ", "of", " ", "climb", " ", 
    RowBox[{"(", "nm", ")"}]}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8590511215916615`*^9, 3.859051162886895*^9}, {
  3.859094374684199*^9, 3.859094376978199*^9}, {3.8590947645774913`*^9, 
  3.8590947930010157`*^9}},
 CellLabel->
  "In[740]:=",ExpressionUUID->"52043f53-68ed-43ad-a14c-58db5c487395"],

Cell[BoxData["20000"], "Output",
 CellChangeTimes->{
  3.859094839691288*^9, 3.859095181740693*^9, {3.8590952984847264`*^9, 
   3.8590953057927275`*^9}, 3.859095594177029*^9, 3.8590976123236*^9, 
   3.8590976472957335`*^9},
 CellLabel->
  "Out[742]=",ExpressionUUID->"90a5a35b-420c-4dfb-881e-d811ba873ef5"]
}, Open  ]],

Cell["Phase 5 : Cruise (using Breguet\[CloseCurlyQuote] s range equation)", \
"Text",
 CellChangeTimes->{{3.855760802774579*^9, 3.85576083317962*^9}, {
  3.8557610881306443`*^9, 3.855761118598588*^9}, {3.8557641528097706`*^9, 
  3.855764157848216*^9}, {3.8557641970579176`*^9, 3.855764202300443*^9}, {
  3.855849053297867*^9, 
  3.8558490549619274`*^9}},ExpressionUUID->"0478f95e-cb1d-44aa-a970-\
884c061b40d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Eta]p", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cp", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LpD", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rcr", "=", 
   RowBox[{"MS", "[", 
    RowBox[{"6", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Rcr", "=", 
   RowBox[{"Rcr", "-", "Rcl"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Uncomment", " ", "if", " ", "the", " ", "climb", " ", "was", " ", 
    "inclined"}], "*)"}], 
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Rcr", "==", 
      RowBox[{"375", 
       FractionBox["\[Eta]p", "cp"], "\[Times]", "LpD", "\[Times]", 
       RowBox[{"Log", "[", 
        SuperscriptBox["WRP5", 
         RowBox[{"-", "1"}]], "]"}]}]}], ",", "WRP5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WRP", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"WRP", ",", 
     RowBox[{"WRP5", "/.", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"np", "=", "0.7"}], "\n", 
 RowBox[{"cpp", "=", "0.6"}], "\n", 
 RowBox[{"Ld", "=", "11"}], "\n", 
 RowBox[{"Vltr", "=", "120"}], "\n", 
 RowBox[{"Eltr", "=", "0.5"}], "\n", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Eltr", "==", 
      RowBox[{"375", "*", 
       RowBox[{"(", 
        RowBox[{"1", "/", "Vltr"}], ")"}], 
       FractionBox["np", "cpp"], "\[Times]", "Ld", "\[Times]", 
       RowBox[{"Log", "[", 
        SuperscriptBox["WRP6", 
         RowBox[{"-", "1"}]], "]"}]}]}], ",", "WRP6"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WRP", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"WRP", ",", 
     RowBox[{"WRP6", "/.", 
      RowBox[{"sol1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8557613300396023`*^9, 3.855761357322754*^9}, {
   3.8557614176649957`*^9, 3.855761589822929*^9}, {3.8557616394498177`*^9, 
   3.8557617409208803`*^9}, {3.855762626748421*^9, 3.85576264312924*^9}, {
   3.8557627086673384`*^9, 3.855762889910979*^9}, 3.8557630845466347`*^9, {
   3.8557632889245057`*^9, 3.8557633843172617`*^9}, {3.8557634182272587`*^9, 
   3.8557634348590555`*^9}, {3.855763727178697*^9, 3.855763748684695*^9}, 
   3.855763780086895*^9, 3.855763881178684*^9, {3.8582837568565*^9, 
   3.858283762259781*^9}, {3.8590481782277365`*^9, 3.859048213678749*^9}, {
   3.859051178937712*^9, 3.8590512453873153`*^9}, {3.8590948090340195`*^9, 
   3.859094811033016*^9}, {3.8590949916413727`*^9, 3.859095045532178*^9}, {
   3.8590951024266376`*^9, 3.8590951955850725`*^9}, 3.8590952415843277`*^9, {
   3.8590955837875257`*^9, 3.859095590586037*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"cd20ee48-0d8b-4d5d-81f7-748c841853b6"],

Cell[BoxData["0.7`"], "Output",
 CellChangeTimes->{
  3.8590951817835712`*^9, {3.859095298543728*^9, 3.8590953058217316`*^9}, 
   3.8590955941980324`*^9, 3.859097612349599*^9, 3.8590976473237333`*^9},
 CellLabel->
  "Out[751]=",ExpressionUUID->"823c43b8-5c97-4a31-9d2a-035ef577dfd4"],

Cell[BoxData["0.6`"], "Output",
 CellChangeTimes->{
  3.8590951817835712`*^9, {3.859095298543728*^9, 3.8590953058217316`*^9}, 
   3.8590955941980324`*^9, 3.859097612349599*^9, 3.859097647330733*^9},
 CellLabel->
  "Out[752]=",ExpressionUUID->"be85ff4e-9db0-45e7-b18e-6d855adaffbc"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{
  3.8590951817835712`*^9, {3.859095298543728*^9, 3.8590953058217316`*^9}, 
   3.8590955941980324`*^9, 3.859097612349599*^9, 3.859097647335734*^9},
 CellLabel->
  "Out[753]=",ExpressionUUID->"48ae2b61-043d-4b02-b110-0c12e53c5924"],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{
  3.8590951817835712`*^9, {3.859095298543728*^9, 3.8590953058217316`*^9}, 
   3.8590955941980324`*^9, 3.859097612349599*^9, 3.8590976473417315`*^9},
 CellLabel->
  "Out[754]=",ExpressionUUID->"f9f33f17-b78b-4c1c-935d-cf59dd599c88"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{
  3.8590951817835712`*^9, {3.859095298543728*^9, 3.8590953058217316`*^9}, 
   3.8590955941980324`*^9, 3.859097612349599*^9, 3.8590976473477316`*^9},
 CellLabel->
  "Out[755]=",ExpressionUUID->"db00d3dd-b953-4fab-b5f8-303747d25279"]
}, Open  ]],

Cell["\<\
Phase 6 : Descent 
Phase 7 : Landing, Taxi, Shutdown
(as indicated in Table 2.1)\
\>", "Text",
 CellChangeTimes->{{3.8557634904865656`*^9, 3.855763530178282*^9}, {
   3.8557640332806435`*^9, 3.8557640864079494`*^9}, {3.855764145467085*^9, 
   3.8557641467951202`*^9}, 
   3.8558490696237416`*^9},ExpressionUUID->"825612b7-a1d0-4cd5-91fc-\
9efb7f85783b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WRP", "=", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{"WRP", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"WR", "[", 
         RowBox[{"2", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}]}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", "WRP", "}"}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\"\<Weight Ratios\>\"", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(1\)], SubscriptBox[\(W\), \
\(TO\)]]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(2\)], \
SubscriptBox[\(W\), \(1\)]]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(3\)], \
SubscriptBox[\(W\), \(2\)]]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(4\)], \
SubscriptBox[\(W\), \(3\)]]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(5\)], \
SubscriptBox[\(W\), \(4\)]]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(6\)], \
SubscriptBox[\(W\), \(5\)]]\)\>\"", ",", 
        "\"\<\!\(\*FractionBox[SubscriptBox[\(W\), \(7\)], \
SubscriptBox[\(W\), \(6\)]]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8557635883514953`*^9, 3.855763589191105*^9}, {
   3.855764211845358*^9, 3.8557642205498877`*^9}, 3.855764251284509*^9, {
   3.855764298134242*^9, 3.8557643123702755`*^9}, {3.8557643527990417`*^9, 
   3.855764375884143*^9}, {3.8557644690247784`*^9, 3.855764493603582*^9}, {
   3.855764548509508*^9, 3.8557645547643576`*^9}, {3.855764683331462*^9, 
   3.855764686487525*^9}, {3.855764786549838*^9, 3.8557647879500775`*^9}, {
   3.8557648228103685`*^9, 3.8557648649394417`*^9}, {3.8557649552431526`*^9, 
   3.855764957524245*^9}, {3.855819783133052*^9, 3.855819803780363*^9}, 
   3.85581989492199*^9, 3.855849544529703*^9, 3.8582607997927203`*^9, {
   3.858956814567436*^9, 3.858956821616027*^9}, {3.858956856481699*^9, 
   3.858956865536841*^9}, {3.858958949439868*^9, 3.858959140144328*^9}, {
   3.858959245555401*^9, 3.858959398237819*^9}, {3.858959683098008*^9, 
   3.8589597959721594`*^9}, 3.858959889826729*^9, {3.8589601363531075`*^9, 
   3.858960160490453*^9}, {3.858969894565503*^9, 3.8589699429494452`*^9}, 
   3.8590948885861063`*^9},
 CellLabel->
  "In[758]:=",ExpressionUUID->"fb4f7ead-0465-489d-9b99-ddeddbcb2be9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(1\\)], \
SubscriptBox[\\(W\\), \\(TO\\)]]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(2\\)], \
SubscriptBox[\\(W\\), \\(1\\)]]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(3\\)], \
SubscriptBox[\\(W\\), \\(2\\)]]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(4\\)], \
SubscriptBox[\\(W\\), \\(3\\)]]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(5\\)], \
SubscriptBox[\\(W\\), \\(4\\)]]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(6\\)], \
SubscriptBox[\\(W\\), \\(5\\)]]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(W\\), \\(7\\)], \
SubscriptBox[\\(W\\), \\(6\\)]]\\)\"\>",
       HoldForm], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ]},
     {
      TagBox["\<\"Weight Ratios\"\>",
       HoldForm], "0.995`", "0.997`", "0.998`", "0.992`", 
      "0.9256841231654784`", "0.9876098652287117`", "0.993`", "0.993`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Weight Ratios"}, {
      "\!\(\*FractionBox[SubscriptBox[\(W\), \(1\)], SubscriptBox[\(W\), \(TO\
\)]]\)", "\!\(\*FractionBox[SubscriptBox[\(W\), \(2\)], SubscriptBox[\(W\), \
\(1\)]]\)", 
       "\!\(\*FractionBox[SubscriptBox[\(W\), \(3\)], SubscriptBox[\(W\), \(2\
\)]]\)", "\!\(\*FractionBox[SubscriptBox[\(W\), \(4\)], SubscriptBox[\(W\), \
\(3\)]]\)", 
       "\!\(\*FractionBox[SubscriptBox[\(W\), \(5\)], SubscriptBox[\(W\), \(4\
\)]]\)", "\!\(\*FractionBox[SubscriptBox[\(W\), \(6\)], SubscriptBox[\(W\), \
\(5\)]]\)", 
       "\!\(\*FractionBox[SubscriptBox[\(W\), \(7\)], SubscriptBox[\(W\), \(6\
\)]]\)"}}]]]], "Output",
 CellChangeTimes->{{3.85907008900799*^9, 3.8590701089851694`*^9}, 
   3.8590942260443673`*^9, 3.859094348840469*^9, 3.859094598157256*^9, 
   3.859094696570704*^9, 3.859094839746284*^9, 3.8590951818496685`*^9, {
   3.8590952986027274`*^9, 3.85909530589572*^9}, 3.8590955942430377`*^9, 
   3.8590976123986025`*^9, 3.859097647375738*^9},
 CellLabel->
  "Out[759]//TableForm=",ExpressionUUID->"665901fc-6302-41b8-a754-\
14d5887942e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mff", "=", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], 
     RowBox[{"MS", "[", 
      RowBox[{"1", ",", "1"}], "]"}]], 
    RowBox[{"WRP", "[", 
     RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.855759781618756*^9, 3.855759805878028*^9}, {
   3.855759842297555*^9, 3.855759923233018*^9}, {3.8557600771721797`*^9, 
   3.8557601283528533`*^9}, {3.8557601638295107`*^9, 
   3.8557601678973675`*^9}, {3.8557606666886873`*^9, 3.855760696675755*^9}, {
   3.8557607417658787`*^9, 3.8557607800272446`*^9}, {3.855763863922718*^9, 
   3.855763864953885*^9}, {3.855765015716135*^9, 3.855765055748101*^9}, {
   3.8558235363600435`*^9, 3.8558235377125406`*^9}, 3.855849534592181*^9, {
   3.855849800931134*^9, 3.8558498019310274`*^9}, {3.858280966525093*^9, 
   3.858280967644174*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"da8453f3-a4dc-4a49-83df-c58ad26b7815"]
}, Open  ]],

Cell[CellGroupData[{

Cell["C and D calculation", "Subsubsection",
 CellChangeTimes->{{3.855765650819479*^9, 
  3.8557656622859783`*^9}},ExpressionUUID->"deffe1d8-3166-43e1-886e-\
96edfcae14b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cE", "=", 
   RowBox[{"1.", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", "+", 
       RowBox[{"MS", "[", 
        RowBox[{"7", ",", "1"}], "]"}]}], ")"}], "\[Times]", 
     RowBox[{"(", 
      RowBox[{"1.", "-", "Mff"}], ")"}]}], "-", 
    RowBox[{"MS", "[", 
     RowBox[{"8", ",", "1"}], "]"}]}]}], ";", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<C = \>\"", ",", "cE"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"dE", "=", 
   RowBox[{"MS", "[", 
    RowBox[{"5", ",", "1"}], "]"}]}], ";", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<D = \>\"", ",", "dE"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.855765680172162*^9, 3.8557657352291393`*^9}, {
  3.8557657666501827`*^9, 3.855765780760626*^9}, {3.8558173970013685`*^9, 
  3.8558174017407484`*^9}, {3.8582810036290045`*^9, 3.858281023509415*^9}, {
  3.8582810590183597`*^9, 3.858281094985114*^9}, {3.858282911956564*^9, 
  3.8582829540199313`*^9}, {3.859066372879218*^9, 3.859066380982873*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"1dc4bec2-061d-4c8a-945f-588cfed7b561"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"C = \"\>", "\[InvisibleSpace]", "0.851667604321891`"}],
  SequenceForm["C = ", 0.851667604321891],
  Editable->False]], "Print",
 CellChangeTimes->{{3.859070089054723*^9, 3.8590701090395384`*^9}, 
   3.859094226141371*^9, 3.8590943489174705`*^9, 3.859094598235263*^9, 
   3.859094696659712*^9, 3.859094839841918*^9, 3.8590951819001694`*^9, {
   3.8590952986557226`*^9, 3.8590953059247265`*^9}, 3.859095594270028*^9, 
   3.859097612428598*^9, 3.859097647407737*^9},
 CellLabel->
  "During evaluation of \
In[761]:=",ExpressionUUID->"75ec6295-b8a9-4dc6-9a84-27a769bbe252"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"D = \"\>", "\[InvisibleSpace]", "1600"}],
  SequenceForm["D = ", 1600],
  Editable->False]], "Print",
 CellChangeTimes->{{3.859070089054723*^9, 3.8590701090395384`*^9}, 
   3.859094226141371*^9, 3.8590943489174705`*^9, 3.859094598235263*^9, 
   3.859094696659712*^9, 3.859094839841918*^9, 3.8590951819001694`*^9, {
   3.8590952986557226`*^9, 3.8590953059247265`*^9}, 3.859095594270028*^9, 
   3.859097612428598*^9, 3.8590976474137335`*^9},
 CellLabel->
  "During evaluation of \
In[761]:=",ExpressionUUID->"909f0c8c-b5f2-48bf-9f7c-aea29b0839df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take - off Weight", "Subsubsection",
 CellChangeTimes->{{3.855766906470619*^9, 
  3.855766924195549*^9}},ExpressionUUID->"87d6c7ca-32dc-4925-b05c-\
8d31a49f16e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqn", "=", 
   RowBox[{"Wto", "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["10.", 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"Log", "[", "Wto", "]"}], 
          RowBox[{"Log", "[", "10.", "]"}]], "-", "aE"}], "bE"]], "+", "dE"}],
      "cE"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WTO", " ", "=", " ", 
   RowBox[{"Wto", "/.", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", "eqn", "]"}], "==", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"Wto", ",", "7000"}], "}"}]}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.855766938379552*^9, 3.8557669410044284`*^9}, {
   3.855767370418795*^9, 3.8557674686596584`*^9}, {3.855767546998511*^9, 
   3.855767637122858*^9}, 3.8558094362194433`*^9, {3.8558098760801897`*^9, 
   3.855809917542013*^9}, {3.8558099910934906`*^9, 3.8558100598688965`*^9}, {
   3.855810110468468*^9, 3.855810306241993*^9}, {3.8558103490190897`*^9, 
   3.8558104461517982`*^9}, {3.855810483284709*^9, 3.8558105116221457`*^9}, {
   3.8558171980406246`*^9, 3.8558172499965706`*^9}, {3.855817357244938*^9, 
   3.855817368690079*^9}, {3.855817478474369*^9, 3.8558175225577755`*^9}, {
   3.8558176531950846`*^9, 3.855817660876052*^9}, {3.8558176954869046`*^9, 
   3.8558177148010225`*^9}, {3.8558177936393557`*^9, 
   3.8558179119011755`*^9}, {3.8558182088933344`*^9, 3.855818233021019*^9}, {
   3.8558182864665637`*^9, 3.8558184888633113`*^9}, {3.855818577246752*^9, 
   3.8558186206258783`*^9}, {3.8558187097625303`*^9, 3.855818935572467*^9}, {
   3.8558189670902777`*^9, 3.855819063637618*^9}, {3.855819115910612*^9, 
   3.855819258880582*^9}, {3.855819371154092*^9, 3.8558193778252554`*^9}, {
   3.8558194862120576`*^9, 3.8558195957167945`*^9}, {3.855819921014269*^9, 
   3.855819924930603*^9}, {3.8582605747552376`*^9, 3.8582605753696346`*^9}, {
   3.858273560142644*^9, 3.8582735786200123`*^9}, 3.858279834503442*^9, {
   3.8590663873571177`*^9, 3.8590663970669055`*^9}},
 CellLabel->
  "In[763]:=",ExpressionUUID->"7f58e557-6803-4c4f-85a0-bafb6349d7d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Empty Weight", "Subsubsection",
 CellChangeTimes->{{3.855765741037629*^9, 
  3.8557657538027296`*^9}},ExpressionUUID->"3dbd5a97-4b94-4791-9285-\
9b66111a97b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WE", "=", 
   RowBox[{
    RowBox[{"cE", "\[Times]", "WTO"}], "-", "dE"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8557657580385113`*^9, 3.8557658009420834`*^9}, {
  3.8557659502574987`*^9, 3.8557659974939585`*^9}, {3.855766073714175*^9, 
  3.855766077167513*^9}, {3.85576621368705*^9, 3.855766259263832*^9}, {
  3.855810093334303*^9, 3.8558100938250885`*^9}, {3.859066402013917*^9, 
  3.8590664042611833`*^9}},
 CellLabel->
  "In[765]:=",ExpressionUUID->"4fb477ee-988e-4ab1-b7cd-ef1db263b20e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fuel Weight", "Subsubsection",
 CellChangeTimes->{{3.855766242557141*^9, 
  3.855766250240991*^9}},ExpressionUUID->"8e443274-660c-4ceb-8fbe-\
3351bdef8b5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Wf", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"MS", "[", 
       RowBox[{"7", ",", "1"}], "]"}]}], ")"}], "\[Times]", 
    RowBox[{"(", 
     RowBox[{"1", "-", "Mff"}], ")"}], "\[Times]", "WTO"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.855766263053145*^9, {3.855810097773088*^9, 3.855810098210491*^9}, {
   3.858283320759325*^9, 3.858283342720193*^9}},
 CellLabel->
  "In[766]:=",ExpressionUUID->"e768d3cb-da5b-44a8-a650-cdb13a31cb0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Preliminary numbers for the given mission \
specifications", "Subtitle"]], "Subsection",
 CellChangeTimes->{{3.855766316037603*^9, 3.855766405701209*^9}, {
   3.855767275314517*^9, 3.855767338304797*^9}, {3.8558105970726285`*^9, 
   3.8558106127756124`*^9}, 
   3.855849847415745*^9},ExpressionUUID->"815d93f6-48d1-4c22-b08b-\
de3be8ed59ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(ff\)]\) = \>\"", ",", "Mff"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SubscriptBox[\(W\), \(TO\)]\) = \>\"", ",", "WTO", ",", 
   "\"\< lbs\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SubscriptBox[\(W\), \(E\)]\) = \>\"", ",", "WE", ",", 
   "\"\< lbs\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SubscriptBox[\(W\), \(f\)]\) = \>\"", ",", "Wf", ",", 
   "\"\< lbs\>\""}], "]"}]}], "Code",
 CellChangeTimes->{{3.8557667147128954`*^9, 3.8557667474771395`*^9}, {
  3.85576681520313*^9, 3.8557668678588033`*^9}, {3.85576719517155*^9, 
  3.855767245853155*^9}, {3.8558100845911336`*^9, 3.8558100861171446`*^9}, {
  3.8558103196438885`*^9, 3.855810321492831*^9}},
 CellLabel->
  "In[767]:=",ExpressionUUID->"de562f66-7b2e-4853-9e86-bcc66ac0f292"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(ff\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "0.8853340834575129`"}],
  SequenceForm["\!\(\*SubscriptBox[\(M\), \(ff\)]\) = ", 0.8853340834575129],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907008910673*^9, 3.859070109104476*^9}, 
   3.8590942264843664`*^9, 3.85909434926647*^9, 3.8590945985882626`*^9, 
   3.85909469705871*^9, 3.859094840258848*^9, 3.859095182332946*^9, {
   3.859095298715724*^9, 3.8590953059707274`*^9}, 3.8590955943480406`*^9, 
   3.8590976125105953`*^9, 3.8590976474937334`*^9},
 CellLabel->
  "During evaluation of \
In[767]:=",ExpressionUUID->"893716ad-b37d-4b21-8f45-a3682fa1cfb6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(W\\), \\(TO\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "5320.841003885309`", 
   "\[InvisibleSpace]", "\<\" lbs\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(W\), \(TO\)]\) = ", 5320.841003885309, " lbs"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907008910673*^9, 3.859070109104476*^9}, 
   3.8590942264843664`*^9, 3.85909434926647*^9, 3.8590945985882626`*^9, 
   3.85909469705871*^9, 3.859094840258848*^9, 3.859095182332946*^9, {
   3.859095298715724*^9, 3.8590953059707274`*^9}, 3.8590955943480406`*^9, 
   3.8590976125105953`*^9, 3.859097647500733*^9},
 CellLabel->
  "During evaluation of \
In[767]:=",ExpressionUUID->"fa3d2d75-44fb-43e3-acde-c59491e9c271"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(W\\), \\(E\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "2931.587910756687`", 
   "\[InvisibleSpace]", "\<\" lbs\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(W\), \(E\)]\) = ", 2931.587910756687, " lbs"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907008910673*^9, 3.859070109104476*^9}, 
   3.8590942264843664`*^9, 3.85909434926647*^9, 3.8590945985882626`*^9, 
   3.85909469705871*^9, 3.859094840258848*^9, 3.859095182332946*^9, {
   3.859095298715724*^9, 3.8590953059707274`*^9}, 3.8590955943480406`*^9, 
   3.8590976125105953`*^9, 3.8590976475137324`*^9},
 CellLabel->
  "During evaluation of \
In[767]:=",ExpressionUUID->"27aab536-8a52-4923-9ce9-b2768c3590b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(W\\), \\(f\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "762.6488881091955`", 
   "\[InvisibleSpace]", "\<\" lbs\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(W\), \(f\)]\) = ", 762.6488881091955, " lbs"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907008910673*^9, 3.859070109104476*^9}, 
   3.8590942264843664`*^9, 3.85909434926647*^9, 3.8590945985882626`*^9, 
   3.85909469705871*^9, 3.859094840258848*^9, 3.859095182332946*^9, {
   3.859095298715724*^9, 3.8590953059707274`*^9}, 3.8590955943480406`*^9, 
   3.8590976125105953`*^9, 3.8590976475177326`*^9},
 CellLabel->
  "During evaluation of \
In[767]:=",ExpressionUUID->"5f845d6b-dab7-436c-ad84-382e77d7d4d3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take-off Weight Sensitivity", "Section",
 CellChangeTimes->{{3.8590518355471964`*^9, 
  3.8590518521309342`*^9}},ExpressionUUID->"e27e248c-5207-4406-8565-\
6ddcbfbeec64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sen", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.857064564516573*^9, 3.8570645736332936`*^9}, {
  3.8590664861522927`*^9, 3.8590664862738643`*^9}, {3.8590665270021524`*^9, 
  3.859066527900034*^9}},
 CellLabel->
  "In[771]:=",ExpressionUUID->"d0fd0bff-a7f8-4ab4-ac75-3ffc0b6aed1b"],

Cell[CellGroupData[{

Cell["Airplane growth factor due to payload", "Subsubsection",
 CellChangeTimes->{{3.85706242598172*^9, 3.857062445787073*^9}, {
  3.8570625705268664`*^9, 
  3.857062586158032*^9}},ExpressionUUID->"05f4c6a8-7794-47ef-9ac4-\
a476b89777f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"Sen", ",", 
     RowBox[{"bE", "*", "WTO", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"dE", "-", 
         RowBox[{"cE", 
          RowBox[{"(", 
           RowBox[{"1", "-", "bE"}], ")"}], "WTO"}]}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8570624810303664`*^9, 3.8570625339180098`*^9}, {
   3.8570625978145447`*^9, 3.8570625985394526`*^9}, 3.8570626286948223`*^9, {
   3.857062858620038*^9, 3.857062884345333*^9}, {3.8570645800999126`*^9, 
   3.857064580269332*^9}, {3.8570646364636335`*^9, 3.857064678573468*^9}, {
   3.859066454492891*^9, 3.859066492991974*^9}},
 CellLabel->
  "In[772]:=",ExpressionUUID->"93b028bc-5f15-4de7-bf2d-59e6ec1bf0a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Airplane growth factor due to empty weight", "Subsubsection",
 CellChangeTimes->{{3.857062665480214*^9, 
  3.8570626915428658`*^9}},ExpressionUUID->"70d1cdfe-4289-4617-80ec-\
159daeb8053a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"Sen", ",", 
     RowBox[{"bE", "*", "WTO", 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox["10.", 
         FractionBox[
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", "WTO"}], "]"}], "-", "aE"}], "bE"]], ")"}], 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8570624810303664`*^9, 3.8570625339180098`*^9}, {
   3.8570625978145447`*^9, 3.8570625985394526`*^9}, 3.8570626286948223`*^9, {
   3.857062858620038*^9, 3.857062884345333*^9}, {3.8570645800999126`*^9, 
   3.857064580269332*^9}, {3.8570646364636335`*^9, 3.8570646989251056`*^9}, {
   3.859066509541024*^9, 3.8590665218468523`*^9}},
 CellLabel->
  "In[773]:=",ExpressionUUID->"00f19d89-c4e8-44f7-844c-9cf41a27bf77"],

Cell[BoxData[{
 RowBox[{"The", " ", "factor", " ", "F", " ", "is", " ", "defined", " ", 
  "as"}], "\[IndentingNewLine]", 
 RowBox[{"F", "=", " ", 
  RowBox[{"-", " ", 
   RowBox[{"B", " ", 
    SuperscriptBox[
     SubscriptBox["W", "TO"], "2"], 
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["CW", "TO"], 
       RowBox[{"(", 
        RowBox[{"1", "-", "B"}], ")"}], "D"}], "}"}], 
     RowBox[{"-", "1"}]], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SubscriptBox["M", "res"]}], ")"}], 
    SubscriptBox["M", "ff"]}]}]}]}], "Text",
 CellChangeTimes->{{3.8570630244228625`*^9, 3.8570631324675355`*^9}, {
  3.8570631710626307`*^9, 3.8570632180805674`*^9}, {3.8570635261552143`*^9, 
  3.8570635447520847`*^9}},ExpressionUUID->"d27084be-32ee-4ac2-8fa4-\
ad0877e3c3bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Mres", " ", "=", " ", 
   RowBox[{"MS", "[", 
    RowBox[{"7", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{"F", " ", "=", " ", 
  RowBox[{
   RowBox[{"-", " ", "bE"}], "\[Times]", 
   SuperscriptBox["WTO", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"cE", "\[Times]", "WTO", 
       RowBox[{"(", 
        RowBox[{"1", "-", "bE"}], ")"}]}], "-", "dE"}], ")"}], 
    RowBox[{"-", "1"}]], 
   RowBox[{"(", 
    RowBox[{"1", "+", "Mres"}], ")"}], "Mff"}]}]}], "Code",
 CellChangeTimes->{{3.8570632319760637`*^9, 3.8570632804787345`*^9}, {
   3.8570638328586044`*^9, 3.8570638378612432`*^9}, {3.8570638955841007`*^9, 
   3.85706390897466*^9}, 3.857065643594857*^9, 3.857067718270481*^9, {
   3.8590664138854017`*^9, 3.859066420726248*^9}, {3.8590665429955187`*^9, 
   3.8590665827665854`*^9}, 3.859096328096195*^9},
 CellLabel->
  "In[774]:=",ExpressionUUID->"2de84264-5f3a-42e6-ab98-a3eaab1c7e55"],

Cell[BoxData["16445.2314563095`"], "Output",
 CellChangeTimes->{3.859096328999196*^9, 3.8590976125696*^9, 
  3.8590976475587296`*^9},
 CellLabel->
  "Out[775]=",ExpressionUUID->"0d541798-95ef-41ec-8748-733ae68892d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Airplane growth factor due to range", "Subsubsection",
 CellChangeTimes->{{3.8570635780786905`*^9, 
  3.857063595220783*^9}},ExpressionUUID->"f6238fed-db90-47a7-9929-\
6ed76749b9aa"],

Cell["\<\
Using formula for propeller driven in range case where y = R stated in table \
2.20\
\>", "Text",
 CellChangeTimes->{{3.8570636118479824`*^9, 
  3.857063674882245*^9}},ExpressionUUID->"4c060371-f967-4cc3-821f-\
05cb76476f2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"Sen", ",", 
     RowBox[{"F", "\[Times]", "cp", "\[Times]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"375.", "\[Times]", "\[Eta]p", "\[Times]", "LpD"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8570624810303664`*^9, 3.8570625339180098`*^9}, {
   3.8570625978145447`*^9, 3.8570625985394526`*^9}, 3.8570626286948223`*^9, {
   3.857062858620038*^9, 3.857062884345333*^9}, {3.8570645800999126`*^9, 
   3.857064580269332*^9}, {3.8570646364636335`*^9, 3.8570646989251056`*^9}, 
   3.857064735761115*^9, {3.8590666228343115`*^9, 3.859066625708958*^9}},
 CellLabel->
  "In[776]:=",ExpressionUUID->"52c8b444-4758-440f-b940-b26ef9e55333"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Airplane growth factor due to endurance and velocity", "Subsubsection",
 CellChangeTimes->{{3.8570639399916587`*^9, 3.8570639492237144`*^9}, {
  3.8570639795934362`*^9, 
  3.8570639844560356`*^9}},ExpressionUUID->"de4f3ad3-6c90-4d81-b9c5-\
1dcfa3bae9bc"],

Cell["Not applicable as mentioned in [2]", "Text",
 CellChangeTimes->{{3.857063954680353*^9, 
  3.8570639972699814`*^9}},ExpressionUUID->"311169a7-f997-49d8-ae78-\
0fd130874051"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{"Sen", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<-\>\"", ",", "\"\<-\>\""}], "}"}]}], "}"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.859067059478053*^9, 3.859067102041489*^9}},
 CellLabel->
  "In[777]:=",ExpressionUUID->"26dff1c8-d291-44ed-9c6e-c8f27badaacf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Airplane growth factor due to specific fuel consumption", \
"Subsubsection",
 CellChangeTimes->{{3.8570640667289314`*^9, 
  3.8570640913831115`*^9}},ExpressionUUID->"89402fe6-b453-476e-a786-\
6e7de6523a94"],

Cell[TextData[{
 "Using formula for propeller driven in range case where y = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "p"], TraditionalForm]],ExpressionUUID->
  "e13ea7f6-aa6f-4916-a6cf-aee95144b75b"],
 " stated in table 2.20"
}], "Text",
 CellChangeTimes->{{3.857064162170246*^9, 
  3.8570641847139463`*^9}},ExpressionUUID->"a2a1d71e-39c7-47fa-9bfc-\
06fb71158252"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"Sen", ",", 
     RowBox[{"F", "\[Times]", "Rcr", "\[Times]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"375.", "\[Times]", "\[Eta]p", "\[Times]", "LpD"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"F", "\[Times]", "Rcr", "\[Times]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"375.", "\[Times]", "\[Eta]p", "\[Times]", "LpD"}], ")"}], 
   RowBox[{"-", "1"}]]}]}], "Code",
 CellChangeTimes->{{3.8570624810303664`*^9, 3.8570625339180098`*^9}, {
   3.8570625978145447`*^9, 3.8570625985394526`*^9}, 3.8570626286948223`*^9, {
   3.857062858620038*^9, 3.857062884345333*^9}, {3.8570645800999126`*^9, 
   3.857064580269332*^9}, {3.8570646364636335`*^9, 3.8570646989251056`*^9}, 
   3.857064735761115*^9, 3.8570647745081325`*^9, {3.8590666945254183`*^9, 
   3.859066698597071*^9}, {3.859096486562499*^9, 3.8590964978615065`*^9}, 
   3.859096541967087*^9, {3.85909658144518*^9, 3.8590965835901833`*^9}, 
   3.8590966587811923`*^9},
 CellLabel->
  "In[778]:=",ExpressionUUID->"ebd7b1b2-9d02-48a8-aca3-39ca2a53f286"],

Cell[BoxData["2539.8746360300224`"], "Output",
 CellChangeTimes->{3.8590964982570457`*^9, 3.8590965429671416`*^9, 
  3.859096660262222*^9, 3.8590976126046014`*^9, 3.8590976475967317`*^9},
 CellLabel->
  "Out[779]=",ExpressionUUID->"b5fc3373-431b-4bea-8f59-8048f04aae4c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Airplane growth factor due to propeller efficiency", "Subsubsection",
 CellChangeTimes->{{3.8570640667289314`*^9, 3.8570640913831115`*^9}, {
  3.8570643905361047`*^9, 
  3.8570644007079325`*^9}},ExpressionUUID->"03434159-b7e4-4e4b-ba84-\
ba62f3725c4a"],

Cell[TextData[{
 "Using formula for propeller driven in range case where y = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", "p"], TraditionalForm]],ExpressionUUID->
  "bfb0793b-b31a-4f2f-aaf1-293ab4bd9194"],
 " stated in table 2.20"
}], "Text",
 CellChangeTimes->{{3.857064162170246*^9, 3.8570641847139463`*^9}, {
  3.8570644110075836`*^9, 
  3.8570644139336176`*^9}},ExpressionUUID->"793cad06-81c2-4a4f-ab4d-\
2e42aaa8ff70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"Sen", ",", 
     RowBox[{
      RowBox[{"-", "F"}], "\[Times]", "Rcr", "\[Times]", "cp", "\[Times]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"375.", "\[Times]", 
         SuperscriptBox["\[Eta]p", "2"], "\[Times]", "LpD"}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"-", "F"}], "\[Times]", "Rcr", "\[Times]", "cp", "\[Times]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"375.", "\[Times]", 
     SuperscriptBox["\[Eta]p", "2"], "\[Times]", "LpD"}], ")"}], 
   RowBox[{"-", "1"}]]}], "\n", 
 RowBox[{"Rcr", "\[Times]", "cp", "\[Times]", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"375.", "\[Times]", 
     SuperscriptBox["\[Eta]p", "2"], "\[Times]", "LpD"}], ")"}], 
   RowBox[{"-", "1"}]]}]}], "Code",
 CellChangeTimes->{{3.8570624810303664`*^9, 3.8570625339180098`*^9}, {
   3.8570625978145447`*^9, 3.8570625985394526`*^9}, 3.8570626286948223`*^9, {
   3.857062858620038*^9, 3.857062884345333*^9}, {3.8570645800999126`*^9, 
   3.857064580269332*^9}, {3.8570646364636335`*^9, 3.8570646989251056`*^9}, 
   3.857064735761115*^9, {3.8570647745081325`*^9, 3.8570647935701447`*^9}, {
   3.85906675899302*^9, 3.85906676174216*^9}, {3.859096735203371*^9, 
   3.859096739441186*^9}},
 CellLabel->
  "In[780]:=",ExpressionUUID->"d0f45d0f-0bda-4d03-83e2-8837e5ffba1b"],

Cell[BoxData[
 RowBox[{"-", "1587.4216475187636`"}]], "Output",
 CellChangeTimes->{3.859096740722295*^9, 3.8590976126285944`*^9, 
  3.8590976476237345`*^9},
 CellLabel->
  "Out[781]=",ExpressionUUID->"64cce2ab-ae36-4d8e-b8d5-7d2571bdfe22"],

Cell[BoxData["0.09652777777777775`"], "Output",
 CellChangeTimes->{3.859096740722295*^9, 3.8590976126285944`*^9, 
  3.8590976476297364`*^9},
 CellLabel->
  "Out[782]=",ExpressionUUID->"dd5206d3-f5cf-4c0c-86d3-9190440fe921"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Airplane growth factor due to lift-to-drag ration", "Subsubsection",
 CellChangeTimes->{{3.8570640667289314`*^9, 3.8570640913831115`*^9}, {
  3.8570643905361047`*^9, 3.8570644007079325`*^9}, {3.85706448804762*^9, 
  3.857064499348858*^9}},ExpressionUUID->"f6189a21-0977-412d-bf8a-\
1a2a3550ff4f"],

Cell[TextData[{
 "Using formula for propeller driven in range case where y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "/", "D"}], TraditionalForm]],ExpressionUUID->
  "bb03903a-bda0-4af9-a422-57f8164f37d5"],
 " stated in table 2.20"
}], "Text",
 CellChangeTimes->{{3.857064162170246*^9, 3.8570641847139463`*^9}, {
  3.8570644110075836`*^9, 3.8570644139336176`*^9}, {3.8570645125779696`*^9, 
  3.857064514822892*^9}},ExpressionUUID->"84a094f6-a179-4da2-998c-\
b45ceb703ffb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sen", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"Sen", ",", 
     RowBox[{
      RowBox[{"-", "F"}], "\[Times]", "Rcr", "\[Times]", "cp", "\[Times]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"375.", "\[Times]", "\[Eta]p", "\[Times]", 
         SuperscriptBox["LpD", "2"]}], ")"}], 
       RowBox[{"-", "1"}]]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8570624810303664`*^9, 3.8570625339180098`*^9}, {
   3.8570625978145447`*^9, 3.8570625985394526`*^9}, 3.8570626286948223`*^9, {
   3.857062858620038*^9, 3.857062884345333*^9}, {3.8570645800999126`*^9, 
   3.857064580269332*^9}, {3.8570646364636335`*^9, 3.8570646989251056`*^9}, 
   3.857064735761115*^9, {3.8570647745081325`*^9, 3.8570648492097387`*^9}, {
   3.859066781101922*^9, 3.8590667833046465`*^9}},
 CellLabel->
  "In[783]:=",ExpressionUUID->"df38b197-e52c-4b00-8571-68afaaece916"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.8590669124639263`*^9, 
  3.8590669214652376`*^9}},ExpressionUUID->"761a3606-4a8d-4283-9bf9-\
7a958c89635a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Sen", "[", 
       RowBox[{"[", "#", "]"}], "]"}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8"}], "}"}]}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]\*SubscriptBox[\(W\), \(pl\)]\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]\*SubscriptBox[\(W\), \(E\)]\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]R\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]E\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]V\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]\*SubscriptBox[\(C\), \(p\)]\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]\*SubscriptBox[\(\[Eta]\), \(p\)]\)]\)\>\"", ",", 
       "\"\<\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \
\(\[PartialD]L/D\)]\)\>\""}], "}"}], "}"}]}]}], "]"}]], "Code",
 CellChangeTimes->{{3.859066929114193*^9, 3.8590669396978755`*^9}, {
  3.8590669753429923`*^9, 3.859067018705959*^9}, {3.8590671153554*^9, 
  3.859067140136473*^9}, {3.859067175520116*^9, 3.8590671777766376`*^9}, {
  3.8590672282234573`*^9, 3.859067371831476*^9}},
 CellLabel->
  "In[784]:=",ExpressionUUID->"baff1ab8-d484-40c9-93a1-d3347b061dee"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]\\*SubscriptBox[\\(W\\), \\(pl\\)]\\)]\\)\"\>",
       HoldForm], "2.7928172078011895`"},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]\\*SubscriptBox[\\(W\\), \\(E\\)]\\)]\\)\"\>",
       HoldForm], "2.0259064061305283`"},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]R\\)]\\)\"\>",
       HoldForm], "2.7408719093849165`"},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]E\\)]\\)\"\>",
       HoldForm], "\<\"-\"\>"},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]V\\)]\\)\"\>",
       HoldForm], "\<\"-\"\>"},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]\\*SubscriptBox[\\(C\\), \\(p\\)]\\)]\\)\"\>",
       HoldForm], "2539.8746360300224`"},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]\\*SubscriptBox[\\(\[Eta]\\), \\(p\\)]\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1587.4216475187636`"}]},
     {
      TagBox["\<\"\\!\\(\\*FractionBox[\\(\[PartialD]\\*SubscriptBox[\\(W\\), \
\\(TO\\)]\\), \\(\[PartialD]L/D\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "126.99373180150113`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]\*SubscriptBox[\(W\), \(pl\)]\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]\*SubscriptBox[\(W\), \(E\)]\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]R\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]E\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]V\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]\*SubscriptBox[\(C\), \(p\)]\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]\*SubscriptBox[\(\[Eta]\), \(p\)]\)]\)", 
       "\!\(\*FractionBox[\(\[PartialD]\*SubscriptBox[\(W\), \(TO\)]\), \(\
\[PartialD]L/D\)]\)"}}]]]], "Output",
 CellChangeTimes->{{3.8590700891933975`*^9, 3.8590701092060614`*^9}, 
   3.8590942282433634`*^9, 3.8590943510484715`*^9, 3.85909460036126*^9, 
   3.859094698992112*^9, 3.8590948420622597`*^9, 3.8590951842069373`*^9, {
   3.859095298812724*^9, 3.859095306050724*^9}, 3.8590955944230323`*^9, 
   3.859097612669595*^9, 3.8590976476667356`*^9},
 CellLabel->
  "Out[784]//TableForm=",ExpressionUUID->"2cc90300-ebd2-4b55-8f1f-\
a3424aa2fb68"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The variation in the design gross weight due to the mentioned changes\
\>", "Subsubsection",
 CellChangeTimes->{{3.859067427643654*^9, 
  3.8590674299772263`*^9}},ExpressionUUID->"8dd4a550-b0b5-4cd3-af0d-\
8927ff88b0f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dWTO", "[", 
   RowBox[{
   "\[CapitalDelta]Wpl_", ",", "\[CapitalDelta]WE_", ",", "\[CapitalDelta]R_",
     ",", "\[CapitalDelta]E_", ",", "\[CapitalDelta]V_", ",", 
    "\[CapitalDelta]Cp_", ",", "\[CapitalDelta]\[Eta]p_", ",", 
    "\[CapitalDelta]LpD_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"\[CapitalDelta]Wpl", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]WE", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]R", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]E", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]V", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "5", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]Cp", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "6", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]\[Eta]p", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "7", "]"}], "]"}]}], "+", 
   RowBox[{"\[CapitalDelta]LpD", "\[Times]", 
    RowBox[{"Sen", "[", 
     RowBox[{"[", "8", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dWTO", "[", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", "0.1"}], ",", "0.1", ",", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.859067449285304*^9, 3.859067794336809*^9}, {
  3.859068539604457*^9, 3.8590685707593813`*^9}, {3.85906861456264*^9, 
  3.8590686402643175`*^9}, {3.859096988730397*^9, 3.8590970130527077`*^9}},
 CellLabel->
  "In[785]:=",ExpressionUUID->"1336997e-f404-434a-9f0f-944cd625ee88"],

Cell[BoxData[
 RowBox[{"-", "412.7296283548786`"}]], "Output",
 CellChangeTimes->{3.859097013667701*^9, 3.8590976126966004`*^9, 
  3.8590976476967325`*^9},
 CellLabel->
  "Out[786]=",ExpressionUUID->"4ec2f19d-50a1-4ab1-8e1b-58db11106f2a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Plot", "Section",
 CellChangeTimes->{{3.85826066709027*^9, 
  3.858260672127553*^9}},ExpressionUUID->"e7f1f915-dd65-4a8c-8812-\
2d2ae6299cdc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"MS", "[", 
    RowBox[{"14", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Rho]U", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{"\[Rho]", ",", 
     RowBox[{"\"\<SlugsMass\>\"", "/", 
      SuperscriptBox["\"\<Feet\>\"", "3"]}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8575398797695603`*^9, 3.857540017047335*^9}, {
   3.857540170270172*^9, 3.8575402088920126`*^9}, 3.8575403377255063`*^9, {
   3.8575407329563165`*^9, 3.8575407360499125`*^9}, {3.857540861420384*^9, 
   3.857540928565238*^9}, {3.8575410424341164`*^9, 3.857541104406706*^9}, {
   3.8575411964091344`*^9, 3.857541214058586*^9}, {3.85896647513968*^9, 
   3.8589665722261963`*^9}, {3.858966637594863*^9, 3.8589666618266335`*^9}, {
   3.8589667840146403`*^9, 3.858966794176319*^9}, {3.858966828733622*^9, 
   3.8589668635319705`*^9}, {3.8589671017593555`*^9, 
   3.8589671029136257`*^9}, {3.8589674528250446`*^9, 
   3.8589675342708664`*^9}, {3.858967570128411*^9, 3.8589675769208384`*^9}, {
   3.8589678091686177`*^9, 3.8589678644084806`*^9}, {3.8589681795269737`*^9, 
   3.8589681920168657`*^9}, {3.8589682832902985`*^9, 
   3.8589685697104764`*^9}, {3.8589686486792727`*^9, 3.858968682545015*^9}, {
   3.858968717760854*^9, 3.858969021895132*^9}, {3.858969068855169*^9, 
   3.8589691308277864`*^9}, {3.85896920441665*^9, 3.858969271871278*^9}, {
   3.8589701233043475`*^9, 3.858970146680608*^9}},
 CellLabel->
  "In[787]:=",ExpressionUUID->"41136edd-e4f0-4605-b7c3-74a4c37ce9aa"],

Cell[CellGroupData[{

Cell["Sizing to Take-off Distance Requirements", "Subsection",
 CellChangeTimes->{{3.858273608738185*^9, 3.8582736309302063`*^9}, {
  3.8590441251803923`*^9, 
  3.8590441407811937`*^9}},ExpressionUUID->"0e4a1748-baa2-4f14-88a9-\
7003cd746663"],

Cell["According to FAR 23", "Text",
 CellChangeTimes->{{3.85902077385144*^9, 
  3.8590208047142043`*^9}},ExpressionUUID->"76dcf6fa-3eec-47b0-bece-\
86643d7c5b4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"STOG", " ", "=", " ", 
    RowBox[{"MS", "[", 
     RowBox[{"12", ",", "1"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"solTO", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"STO", "==", 
         RowBox[{
          RowBox[{"8.14", " ", "top"}], " ", "+", " ", 
          RowBox[{"0.0149", " ", 
           SuperscriptBox["top", "2"]}]}]}], "&&", 
        RowBox[{"top", ">", "0"}]}], ",", "top"}], "]"}]}], ";"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"solTO", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"STOG", "==", 
       RowBox[{
        RowBox[{"4.9", " ", "top"}], " ", "+", " ", 
        RowBox[{"0.009", " ", 
         SuperscriptBox["top", "2"]}]}]}], "&&", 
      RowBox[{"top", ">", "0"}]}], ",", "top"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TOP", "=", 
   RowBox[{"top", "/.", 
    RowBox[{"solTO", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]TO", "=", "1."}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "density", " ", "at", " ", "altitude", " ", "to", " ", "std", 
    " ", "sealevel", " ", "denisty", " ", "ratio"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CLt", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"{", 
    RowBox[{"DotDashed", ",", "Dashed", ",", "Bold"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WpPTO", "[", 
   RowBox[{"CLMaxt_", ",", "WpSTO_"}], "]"}], " ", ":=", " ", 
  FractionBox[
   RowBox[{"CLMaxt", "\[Times]", "TOP", "\[Times]", "\[Sigma]TO"}], 
   "WpSTO"]}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the curve of the equation \!\(TraditionalForm\`\*FractionBox[\(\
\((W/S)\) \((W/P)\)\), SubscriptBox[\(C\), SubscriptBox[\(L\), \(TO\)]]] = \
\*SubscriptBox[\(TOP\), \(23\)]\[Times]\[Sigma]\) at various \
\!\(\*SubscriptBox[\(C\), \(Lmax\)]\)\>\"", "]"}], "\n", 
 RowBox[{"Tplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WpS", ",", " ", 
         RowBox[{"WpPTO", "[", 
          RowBox[{
           RowBox[{"CLt", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ",", "WpS"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "->", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\
\) = ``\>\"", ",", 
           RowBox[{"CLt", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"ps", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "80"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Take-off Parameter = \>\"", ",", "TOP", ",", "\"\<\\n W/P = \>\"", " ",
    ",", 
   RowBox[{"WpPTO", "[", 
    RowBox[{
     RowBox[{"CLt", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<W/S\>\""}], "]"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.857543452223734*^9, 3.8575435634955997`*^9}, {
   3.857543664570888*^9, 3.8575437062133226`*^9}, {3.8575439298017235`*^9, 
   3.857543983427431*^9}, {3.857544238203022*^9, 3.8575442586546965`*^9}, {
   3.858273373867732*^9, 3.858273377703188*^9}, {3.858274038182624*^9, 
   3.858274055563158*^9}, 3.8582753550951877`*^9, {3.858276130958112*^9, 
   3.8582762187724414`*^9}, {3.85827650513223*^9, 3.858276558665651*^9}, {
   3.8582766336583595`*^9, 3.8582766845691147`*^9}, {3.8582767395842075`*^9, 
   3.858277099385084*^9}, {3.858277156694819*^9, 3.8582772160531287`*^9}, {
   3.858277248526676*^9, 3.8582773665995283`*^9}, 3.85827741348736*^9, {
   3.8582775044119015`*^9, 3.858277548682133*^9}, {3.858277585201277*^9, 
   3.8582775915703564`*^9}, {3.858277737140874*^9, 3.8582778846920757`*^9}, {
   3.858277929145677*^9, 3.8582779324714165`*^9}, {3.8582783519750037`*^9, 
   3.858278355988907*^9}, {3.8582784977474194`*^9, 3.858278631544983*^9}, {
   3.8582787915035915`*^9, 3.858278841844998*^9}, {3.858279632382635*^9, 
   3.8582796371817837`*^9}, {3.8582796869565525`*^9, 
   3.8582796899354115`*^9}, {3.858283606020851*^9, 3.858283623618375*^9}, {
   3.858956387306405*^9, 3.8589564194553614`*^9}, 3.858960003389864*^9, {
   3.8589612630161457`*^9, 3.858961351063725*^9}, {3.8589633783191814`*^9, 
   3.8589633786647506`*^9}, {3.858963878118261*^9, 3.8589638825512023`*^9}, {
   3.858964503566921*^9, 3.858964506355908*^9}, {3.8590102344184923`*^9, 
   3.8590103643536015`*^9}, {3.8590104026137605`*^9, 3.859010436873044*^9}, 
   3.8590208246162987`*^9, {3.859022139595785*^9, 3.859022149020239*^9}, {
   3.859022219088373*^9, 3.8590223647984924`*^9}, {3.859022427846608*^9, 
   3.8590224847668*^9}, {3.8590225266497793`*^9, 3.8590225662356744`*^9}, {
   3.85903071806206*^9, 3.8590307189297743`*^9}, {3.8590374624499226`*^9, 
   3.859037471640125*^9}, {3.859037729542553*^9, 3.8590377298517494`*^9}, 
   3.859046214291198*^9, {3.8590463571479464`*^9, 3.859046369701276*^9}, {
   3.859046449951971*^9, 3.8590465711732593`*^9}, {3.8590475780279417`*^9, 
   3.8590476095593705`*^9}, {3.859049978040104*^9, 3.859050101428872*^9}, 
   3.859053433544487*^9, {3.8590546173130493`*^9, 3.8590546800490303`*^9}, {
   3.859056166921672*^9, 3.859056344110473*^9}, {3.8590564253876524`*^9, 
   3.859056476514793*^9}, {3.859061043198577*^9, 3.859061070030551*^9}, {
   3.859061126226214*^9, 3.859061140228363*^9}, 3.859061303419219*^9, {
   3.8590630712790504`*^9, 3.8590630795136385`*^9}, {3.859063310391878*^9, 
   3.859063401653512*^9}, {3.859064162751291*^9, 3.8590641696031265`*^9}, {
   3.8590651584651375`*^9, 3.859065162208082*^9}, 3.8590976017701907`*^9, {
   3.859097643079737*^9, 3.8590976612187905`*^9}},
 CellLabel->
  "In[912]:=",ExpressionUUID->"25c357f5-1704-4aaf-b416-e92a1847a480"],

Cell[BoxData["\<\"Sketch the curve of the equation \
\\!\\(TraditionalForm\\`\\*FractionBox[\\(\\((W/S)\\) \\((W/P)\\)\\), \
SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(TO\\)]]] = \
\\*SubscriptBox[\\(TOP\\), \\(23\\)]\[Times]\[Sigma]\\) at various \
\\!\\(\\*SubscriptBox[\\(C\\), \\(Lmax\\)]\\)\"\>"], "Print",
 CellChangeTimes->{{3.85907008925869*^9, 3.8590701092795715`*^9}, 
   3.859094228410366*^9, 3.859094351136471*^9, 3.859094600440261*^9, 
   3.859094699112112*^9, 3.8590948421462636`*^9, 3.8590951842909355`*^9, {
   3.8590952989067316`*^9, 3.859095306103729*^9}, 3.8590955944690285`*^9, 
   3.859097612738594*^9, {3.8590976477467313`*^9, 3.859097662309785*^9}},
 CellLabel->
  "During evaluation of \
In[912]:=",ExpressionUUID->"255cae4a-c858-4e0c-9115-a543860a5d3f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
T7CzJoHp/x5rTPJJ6zyik/A/AQcrhw==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$15182#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
T7CzJoHp/x5rTPJJ6zyik/A/AQcrhw==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$15226#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          LineBox[CompressedData["
1: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
T7CzJoHp/x5rTPJJ6zyik/A/AQcrhw==
           "]]}, Annotation[#, "Charting`Private`Tag$15270#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Take - \
off\\)]]\\) = \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\) \
= ``", 2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Take - \
off\\)]]\\) = \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\) \
= ``", 2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Take - \
off\\)]]\\) = \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\) \
= ``", 2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8590700893865757`*^9, 3.8590701094127374`*^9}, 
   3.8590942288503675`*^9, 3.859094351417468*^9, 3.8590946009362597`*^9, 
   3.8590946994125967`*^9, 3.859094842436264*^9, 3.8590951845809364`*^9, {
   3.859095299239723*^9, 3.859095306207721*^9}, 3.859095594574027*^9, 
   3.859097612976594*^9, {3.85909764786473*^9, 3.8590976624277773`*^9}},
 CellLabel->
  "Out[920]=",ExpressionUUID->"e33be139-a17a-45f3-862e-8fac9a17e704"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Take-off Parameter = \"\>", "\[InvisibleSpace]", 
   "183.23169597910174`", "\[InvisibleSpace]", "\<\"\\n W/P = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["366.4633919582035`", "\<\"W/S\"\>"]}],
  SequenceForm[
  "Take-off Parameter = ", 183.23169597910174`, "\n W/P = ", 
   366.4633919582035/"W/S"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907008925869*^9, 3.8590701092795715`*^9}, 
   3.859094228410366*^9, 3.859094351136471*^9, 3.859094600440261*^9, 
   3.859094699112112*^9, 3.8590948421462636`*^9, 3.8590951842909355`*^9, {
   3.8590952989067316`*^9, 3.859095306103729*^9}, 3.8590955944690285`*^9, 
   3.859097612738594*^9, {3.8590976477467313`*^9, 3.8590976624537773`*^9}},
 CellLabel->
  "During evaluation of \
In[912]:=",ExpressionUUID->"0c907acd-3f21-4213-b23a-45a536386afb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sizing to Landing Distance Requirements", "Subsection",
 CellChangeTimes->{{3.8575412689853773`*^9, 3.857541273875654*^9}, {
  3.8582790243197374`*^9, 3.85827903815161*^9}, {3.8590440371810904`*^9, 
  3.859044047485443*^9}, {3.8590441456864476`*^9, 
  3.859044159072665*^9}},ExpressionUUID->"704fc88a-fa4c-4c18-848d-\
a2046893cbd8"],

Cell["According to FAR 25", "Text",
 CellChangeTimes->{{3.8590303136524487`*^9, 
  3.8590303248783607`*^9}},ExpressionUUID->"b3cb388b-c157-4f25-8e1a-\
b81fe52df09f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SLG", " ", "=", " ", 
    RowBox[{"MS", "[", 
     RowBox[{"13", ",", "1"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Vsl", "=", 
     RowBox[{
      SqrtBox[
       FractionBox["SL", "0.5136"]], "\[Times]", "1.68781"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Converted", " ", "from", " ", "kts", " ", "to", " ", "fps"}], 
    "*)"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Vsl", "=", 
   RowBox[{
    SqrtBox[
     FractionBox["SLG", "0.265"]], "\[Times]", "1.68781"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Converted", " ", "from", " ", "kts", " ", "to", " ", "fps"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"LpT", " ", "=", " ", "Mff"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox["W", "L"], "/", 
     SubscriptBox["W", "TO"]}], "=", 
    RowBox[{"0.95", " ", "=", " ", 
     SubscriptBox["M", "ff"]}]}], "*)"}], "\n", 
  RowBox[{"CLl", "=", 
   RowBox[{"{", 
    RowBox[{"2.2", ",", "2.2", ",", "2.2"}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Arbitrary", " ", 
    SubscriptBox["C", 
     SubscriptBox["Lmax", "TO"]], "values", " ", "in", " ", "the", " ", 
    "range", " ", "from", " ", "Table", " ", "3.1", " ", "for", " ", "Twin", 
    " ", "Propeller", " ", 
    RowBox[{"A", "/", "C"}]}], "*)"}], "\n", 
  RowBox[{"ps", "=", 
   RowBox[{"{", 
    RowBox[{"DotDashed", ",", "Dashed", ",", "Bold"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WpSL", "[", "CLMaxl_", "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{
     FractionBox["1", "2"], "\[Times]", "0.002378", "\[Times]", 
     SuperscriptBox["Vsl", "2"]}], "LpT"], "CLMaxl"}]}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the critical landing wing loading fraction at various \
\!\(\*SubscriptBox[\(C\), \(Lmax\)]\)\>\"", "]"}], "\n", 
 RowBox[{"Lplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"WpSL", "[", 
          RowBox[{"CLl", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", "y"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "80"}], "}"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) \
= ``\>\"", ",", 
           RowBox[{"CLl", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Magenta", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "80"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Stall Speed at Landing = \>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"Vsl", ",", "\"\<fps\>\""}], "]"}], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(W\), \(L\)]\)/S = \>\"", " ", ",", 
   RowBox[{"LpT", "\[Times]", 
    RowBox[{"WpSL", "[", "2.2", "]"}]}], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(W\), \(TO\)]\)/S = \>\"", " ", ",", 
   RowBox[{"WpSL", "[", "2.2", "]"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.8575398797695603`*^9, 3.857540017047335*^9}, {
   3.857540170270172*^9, 3.8575402088920126`*^9}, 3.8575403377255063`*^9, {
   3.8575407329563165`*^9, 3.8575407360499125`*^9}, {3.857540861420384*^9, 
   3.857540928565238*^9}, {3.8575410424341164`*^9, 3.857541104406706*^9}, {
   3.8575411812383976`*^9, 3.8575411921282463`*^9}, {3.85754145383147*^9, 
   3.857541471339101*^9}, {3.8575416398782344`*^9, 3.857541795979072*^9}, {
   3.8575418329493594`*^9, 3.857541833253648*^9}, {3.857541926775315*^9, 
   3.857541928905106*^9}, {3.857542368577376*^9, 3.857542418326791*^9}, {
   3.857542466428792*^9, 3.857542510836425*^9}, 3.8575425437665253`*^9, {
   3.8575429512219086`*^9, 3.8575429587058153`*^9}, {3.8575429949264927`*^9, 
   3.857543002629051*^9}, {3.8575432955227156`*^9, 3.857543361079054*^9}, {
   3.857656492214016*^9, 3.8576564994232554`*^9}, {3.857658360532303*^9, 
   3.857658389905532*^9}, {3.857658580823758*^9, 3.857658596782296*^9}, {
   3.857658861601058*^9, 3.8576588633608875`*^9}, {3.858279147740099*^9, 
   3.858279150936519*^9}, {3.858279225391356*^9, 3.858279449804244*^9}, {
   3.858279483442808*^9, 3.858279520619937*^9}, {3.8582796511945996`*^9, 
   3.858279683513101*^9}, {3.858279748123559*^9, 3.858279776803393*^9}, {
   3.858283579814245*^9, 3.8582836015441856`*^9}, {3.85895642979025*^9, 
   3.8589564433250027`*^9}, {3.858963357588134*^9, 3.85896335860613*^9}, {
   3.8589634850892997`*^9, 3.8589635557069235`*^9}, {3.8589638640111156`*^9, 
   3.8589638703965917`*^9}, {3.859012194599167*^9, 3.859012202395668*^9}, {
   3.8590123476391068`*^9, 3.85901235802155*^9}, {3.8590208911380043`*^9, 
   3.859020891469175*^9}, {3.859020954930978*^9, 3.859020957208605*^9}, {
   3.859021573876485*^9, 3.8590216004797325`*^9}, {3.859021689875422*^9, 
   3.859021703047261*^9}, {3.8590217410270047`*^9, 3.859021790775014*^9}, {
   3.859021830960739*^9, 3.8590218902387466`*^9}, 3.85902199594207*^9, {
   3.8590221692407064`*^9, 3.8590221782890654`*^9}, {3.8590225810737457`*^9, 
   3.8590227351079817`*^9}, {3.859030673635954*^9, 3.859030701200008*^9}, {
   3.859037725548309*^9, 3.859037725856182*^9}, 3.859046209840638*^9, {
   3.859053463148378*^9, 3.8590534955895557`*^9}, 3.8590543951112237`*^9, {
   3.859054427322362*^9, 3.8590544468517494`*^9}, {3.859054498434453*^9, 
   3.8590544989712305`*^9}, {3.8590545347221475`*^9, 
   3.8590545461364374`*^9}, {3.8590545853400664`*^9, 
   3.8590546048316107`*^9}, {3.8590546893080163`*^9, 
   3.8590547023632417`*^9}, {3.859054736209629*^9, 3.859054809350986*^9}, {
   3.8590565781135597`*^9, 3.859056647283247*^9}, {3.8590566783349075`*^9, 
   3.859056723724188*^9}, {3.8590609139875546`*^9, 3.859060915602352*^9}, {
   3.859061433029526*^9, 3.859061628209384*^9}, {3.8590631552389584`*^9, 
   3.8590631934057384`*^9}, {3.8590640892084227`*^9, 3.859064140218177*^9}, {
   3.8590976069301376`*^9, 3.8590976390177326`*^9}, {3.859097745162633*^9, 
   3.8590977481646333`*^9}, {3.8590979568586135`*^9, 
   3.8590979580086184`*^9}, {3.8590980310502186`*^9, 3.859098059364253*^9}, {
   3.8590980917595253`*^9, 3.859098099982523*^9}},
 CellLabel->
  "In[950]:=",ExpressionUUID->"507e9548-93e7-458e-aca5-b2296c373682"],

Cell[BoxData["98.36075948071283`"], "Output",
 CellChangeTimes->{{3.859070089582487*^9, 3.859070109658943*^9}, 
   3.859094229152362*^9, 3.8590943515864687`*^9, 3.8590946011732593`*^9, 
   3.859094699612039*^9, 3.8590948425992594`*^9, 3.8590951847469316`*^9, {
   3.859095299458723*^9, 3.859095306364721*^9}, 3.8590955947260303`*^9, 
   3.8590976132225933`*^9, 3.859097648015729*^9, 3.859097786612155*^9, 
   3.8590979590876207`*^9, 3.8590980340179787`*^9, 3.8590981004105244`*^9},
 CellLabel->
  "Out[951]=",ExpressionUUID->"e0014ed6-5c11-4d3c-8870-0cebd6e37a6d"],

Cell[BoxData["\<\"Sketch the critical landing wing loading fraction at \
various \\!\\(\\*SubscriptBox[\\(C\\), \\(Lmax\\)]\\)\"\>"], "Print",
 CellChangeTimes->{{3.859070089468437*^9, 3.8590701094817576`*^9}, 
   3.8590942290433626`*^9, 3.859094351483474*^9, 3.8590946010722604`*^9, 
   3.8590946995060387`*^9, 3.8590948424972706`*^9, 3.859095184640938*^9, {
   3.85909529932473*^9, 3.859095306261738*^9}, 3.859095594625041*^9, 
   3.859097613027601*^9, 3.8590976479117503`*^9, 3.859097786617157*^9, 
   3.859097959092617*^9, 3.8590980340229797`*^9, 3.8590981004165273`*^9},
 CellLabel->
  "During evaluation of \
In[950]:=",ExpressionUUID->"d6d52064-63ec-44bf-8866-98262d48fbc5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Dashing[{0, Small, Small, Small}], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnXB4r/D5qTYODFAA41vvitn9Uv6lPSr/J5xfo57B
kKPH5QDj+1U76LwpEobzQxVnlm5ZJwnn/9u3+8M9CwU4v2kd05cFCcpwflhl
TwfzGTU4PzV5j3a+uhacv5TPRUbCUxfOn+3Fft4g3ADOr8mbYfbljSGc/2th
jeqeKmM4X8GZKTZEyxTOv3fE2Jp7rxmc77KFLWlSoQWc77FZR0BOzgrOfzLp
X8qJtdZwvsaDQibneFs4n4Vvotudz3Zw/pErK14qhTogwmPVps+ROo5wvlGB
UKDCVwT/8ZtDl86dc4LzH0SeXM4zyxnOX+NXecAn0QXO9/lV+bfE0hXOt5h2
oVeH2Q3O//Gi3OnMXQS//fAJq7wt7nB+Ul9+2/waDzhfUCD9245QTzift2nL
zkQFLzj/evXqAzzPEfxSnc+v5+/zhvMTzk7IOtTuA+fLq9bznk30hfO1cg8z
p+v6IcLLdqMt81cEf9Ph97Pbz/oj0oPsoWVnvQPgfNstWyZ670Twuflr5p1S
CYTz/ye+CxHsRPBjBTplz3xF8B9tO9fvFx2ESK+KL5Uv7UPwVZ5rnzqpFYxI
L0slpTr7EfwJl3h6jxxH8CG5JcQBAGVfddc=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$16011#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Dashing[{Small, Small}], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnXB4r/D5qTYODFAA41vvitn9Uv6lPSr/J5xfo57B
kKPH5QDj+1U76LwpEobzQxVnlm5ZJwnn/9u3+8M9CwU4v2kd05cFCcpwflhl
TwfzGTU4PzV5j3a+uhacv5TPRUbCUxfOn+3Fft4g3ADOr8mbYfbljSGc/2th
jeqeKmM4X8GZKTZEyxTOv3fE2Jp7rxmc77KFLWlSoQWc77FZR0BOzgrOfzLp
X8qJtdZwvsaDQibneFs4n4Vvotudz3Zw/pErK14qhTogwmPVps+ROo5wvlGB
UKDCVwT/8ZtDl86dc4LzH0SeXM4zyxnOX+NXecAn0QXO9/lV+bfE0hXOt5h2
oVeH2Q3O//Gi3OnMXQS//fAJq7wt7nB+Ul9+2/waDzhfUCD9245QTzift2nL
zkQFLzj/evXqAzzPEfxSnc+v5+/zhvMTzk7IOtTuA+fLq9bznk30hfO1cg8z
p+v6IcLLdqMt81cEf9Ph97Pbz/oj0oPsoWVnvQPgfNstWyZ670Twuflr5p1S
CYTz/ye+CxHsRPBjBTplz3xF8B9tO9fvFx2ESK+KL5Uv7UPwVZ5rnzqpFYxI
L0slpTr7EfwJl3h6jxxH8CG5JcQBAGVfddc=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$16055#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnXB4r/D5qTYODFAA41vvitn9Uv6lPSr/J5xfo57B
kKPH5QDj+1U76LwpEobzQxVnlm5ZJwnn/9u3+8M9CwU4v2kd05cFCcpwflhl
TwfzGTU4PzV5j3a+uhacv5TPRUbCUxfOn+3Fft4g3ADOr8mbYfbljSGc/2th
jeqeKmM4X8GZKTZEyxTOv3fE2Jp7rxmc77KFLWlSoQWc77FZR0BOzgrOfzLp
X8qJtdZwvsaDQibneFs4n4Vvotudz3Zw/pErK14qhTogwmPVps+ROo5wvlGB
UKDCVwT/8ZtDl86dc4LzH0SeXM4zyxnOX+NXecAn0QXO9/lV+bfE0hXOt5h2
oVeH2Q3O//Gi3OnMXQS//fAJq7wt7nB+Ul9+2/waDzhfUCD9245QTzift2nL
zkQFLzj/evXqAzzPEfxSnc+v5+/zhvMTzk7IOtTuA+fLq9bznk30hfO1cg8z
p+v6IcLLdqMt81cEf9Ph97Pbz/oj0oPsoWVnvQPgfNstWyZ670Twuflr5p1S
CYTz/ye+CxHsRPBjBTplz3xF8B9tO9fvFx2ESK+KL5Uv7UPwVZ5rnzqpFYxI
L0slpTr7EfwJl3h6jxxH8CG5JcQBAGVfddc=
           "]]}, Annotation[#, "Charting`Private`Tag$16099#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Landing\
\\)]]\\) = \\!\\(\\*RowBox[{\\\"2.2`\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) = \
``", 2.2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Landing\
\\)]]\\) = \\!\\(\\*RowBox[{\\\"2.2`\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) = \
``", 2.2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Landing\
\\)]]\\) = \\!\\(\\*RowBox[{\\\"2.2`\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) = \
``", 2.2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.859070089582487*^9, 3.859070109658943*^9}, 
   3.859094229152362*^9, 3.8590943515864687`*^9, 3.8590946011732593`*^9, 
   3.859094699612039*^9, 3.8590948425992594`*^9, 3.8590951847469316`*^9, {
   3.859095299458723*^9, 3.859095306364721*^9}, 3.8590955947260303`*^9, 
   3.8590976132225933`*^9, 3.859097648015729*^9, 3.859097786612155*^9, 
   3.8590979590876207`*^9, 3.8590980340179787`*^9, 3.8590981005235205`*^9},
 CellLabel->
  "Out[955]=",ExpressionUUID->"18fb0017-e142-4ba5-b5bc-401d3278cfd6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Stall Speed at Landing = \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"98.36075948071283`", 
     RowBox[{
      "\"ft\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "feet per second", 
     FractionBox["\"Feet\"", "\"Seconds\""]},
    "Quantity"], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(W\\), \\(L\\)]\\)/S \
= \"\>", "\[InvisibleSpace]", "25.307443870907694`", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(W\\), \\(TO\\)]\\)/S \
= \"\>", "\[InvisibleSpace]", "28.585190996006872`"}],
  SequenceForm["Stall Speed at Landing = ", 
   Quantity[98.36075948071283, "Feet"/"Seconds"], 
   "\n\!\(\*SubscriptBox[\(W\), \(L\)]\)/S = ", 25.307443870907694`, 
   "\n\!\(\*SubscriptBox[\(W\), \(TO\)]\)/S = ", 28.585190996006872`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.859070089468437*^9, 3.8590701094817576`*^9}, 
   3.8590942290433626`*^9, 3.859094351483474*^9, 3.8590946010722604`*^9, 
   3.8590946995060387`*^9, 3.8590948424972706`*^9, 3.859095184640938*^9, {
   3.85909529932473*^9, 3.859095306261738*^9}, 3.859095594625041*^9, 
   3.859097613027601*^9, 3.8590976479117503`*^9, 3.859097786617157*^9, 
   3.859097959092617*^9, 3.8590980340229797`*^9, 3.8590981005475216`*^9},
 CellLabel->
  "During evaluation of \
In[950]:=",ExpressionUUID->"9002301f-831a-409c-a4a7-b05e62272cf6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sizing to Climb Requirements", "Subsection",
 CellChangeTimes->{{3.859022780529909*^9, 3.859022791135645*^9}, {
  3.859026925878627*^9, 
  3.859026942737296*^9}},ExpressionUUID->"532e4c0d-b7c2-472f-b8b5-\
f919e4687b87"],

Cell["According to FAR 23.(65,67,77)", "Text",
 CellChangeTimes->{{3.859023706953236*^9, 
  3.8590237660194445`*^9}},ExpressionUUID->"fcfdf1e9-17e5-4e9e-a0a9-\
a8452906ab82"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Y8aMUY5Zb9H87I7IVGC5lzwRv4Hn3PPpnSr6F8qu06Qv/OPemvZYyJskOe6D
MNUjSW7nbtiLvL2ZesSwZyb9u+gf82wgG19M0OjRo3v06DF58mRLpKNXe9D1
c+LUTj9qP2VOHOrb4pFA6oGhNjF89KafDBLFuZHGVoa3ACyLFCmSN2/eCy64
QHlQS5UqpfU4GY+mi6WgQxKARdaq/iVSiGBEifgEpCEzIA9JdO29Cv7VkVZ7
HBIyH4f6r5LVLF+fpV7XT1qz8CfTpboOslxm8iAw9dfcc2W1+e4S1PH5UlJJ
DPhNWCrcqVOnRo0a9ezZs2SCWrVq5fe0pu9GWx/R5iybseahisjA3Ox1iimm
3xxJPJqJajFjupmapNdb7t6gsJsh82HB9hn6jdjmc7C1DCus784qlOEfkjvW
ddMq98WCQ/iW2jFkTuQoypK9iFILmfMpyerx/Sal4G9G8JW1xSRSRBIaCDFD
RuJL+kXrAjIGvYcnOI+K2YOS29khLk9pdK7PiZddOuuIz1l2va8TbhGh1i2U
lPmvvvLLWL5OGwVTQCdTYuq8FyVH8PCzO9bKhvuLL74AGh0+fHj16tVgCS4i
HWLC36c80kWOqY1SyT8SUR/6stRG79ey0IuQ/JRMTUdG1mJRzEwOyVlnhrAa
nqPa0kqKOPTOwCz3CNivhlGZJBG3BvXYCVb/TB7D7cvkuAzkky/5IARvXHgX
h19RtWf9zDQUauHNuk8l/jg587ueTC5zWCt8+Kg9a9fZLavlCNdjium3SN7b
7JcMIl+cyHZVRMibnxJlISn3VL8+YXtFlmrUq/KIoed/sqe8c9UisoLzVfp1
Cr866QMJrBO8hesRUUh++yaNZeN4C0sM+2gHixkIzp/pvb4RnWLXEWyQZT97
e99WzIMTfT6MxCLlcuky9XPAEJf3zfokWhbDacz4dtlPqYGO1tU2HN5NnT7y
IZfIIdKoSI8FF5tqxTRzPI611BAhFxEy2b06pDgfPBr0JJTuNaDd14UH4d7v
ZApu69at27dvTzWZU71hWZIfTR9oofVE3+3ZOZSEcwwYnEyuYfk2mockPTMh
xXiPzB8jP2SRrOYhmUjTODfppKd8QyImkj8DNAJiNXwnk5kr/jtBHuOJfs58
KmtMMf3OyKt1I4lWj6UjZntEekci9ExdGnhILWafnv6V7WO/mn3qpZmHJd69
YBQ5mOCnZNap4FSYV7Wek1RS5p8IXvLpgISyvPqzan2PnXJBa36pWjLHyptw
s/plBvo7qTgq1WBX5aku5dxo28iKtvWeBKn5f3zSvNR4PGuvot+DU9+RkNrI
tT8s0ofQ2zTIJWaIiGuvjo8dO/b666+PHTt26tSpEydO9BDXGvXDDz9QYMqU
KZMmTaLMt99+q2H6BVv1I86TLH3XkSWM4Fb3TiXDMKwe764PyQHS36+//rpg
wYLKAR6SzpwcAYMxZouPPtDRfIPWHPvJ9uoGp9nNZj+VObQjpGSODbmbkBG3
SQSOmpURgSKmuD3uTfXI2bQ0pW8TPuIIitw09BthL/16R44HgcUU02+OfCiy
7pjCkhyw7L4SJmZ+CoFb7L3dDMlAtZAQIPY1/XoQ7kVWSDklx3+89pOpe4+R
vM0esY+koQyWKKCuXLlyJUuW1LXV79/yyyRDZHHEXmoNFLQzFZwa/+btenPR
R3SWl+GRYEWPdkKK3LNzo04lA9Ttpxwlv8eN3tg0ZvyFTT8vir3HJqQo4vTv
tTf+I3n2uv71GSfy5MnzyiuvRLQ5c3vRokWWTuHMM8986KGHcrlgHWlgcP3p
neoRd4GFudqpUr7VEeXlgZD3woVEzlWlZ2natKmf6vpajZO//OUv3odm7/UZ
vCOOGjnTvOUe3GxUVytc81Qy4YbKmKcox66LKaaYflvk1YF98qZGdbhhyIzJ
zXb2q/C2o02yxSLYzYbysd+/LNmaaWeTbN99953eboc+h6zUnEEI01DaP54K
aXiFLcqLTHRLj0ybNs3K+9OvstS8uSfvQziZ3P5p6Csie223hZ1eZEGMFvkQ
kjooEurp17K9F+jvCbLmhGy27oqEIdODJR9Nqnr8rpMsN9371RaY96rW7M0c
Nbi3x22+Sc9K2b3//vvdE6RkiS+99JIZ2vbGAwcOPPbYY126dLnqqqsykid3
RLiNUCqa5a+GgI61QbG1ePWAh392zqPVidI3h7mHDZGe94ira9euMKxka2qv
Ry+Rp+zaPhAfh2BfkGUaSe1nq+err77y0yyyxhFTTDH9Lkkr/ps3b167du0H
H3zwzjvvbNmy5ccff+TDP378uOVpMYFPyVmzZrVt2/bBBx988cUXt27dejLz
Fm+/CK4Lv1Ce5kjH9EwG5y20PVCIrI0bN/bq1atDhw6bNm1avXr1hx9+aKya
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
dKxoWoxBpvoketgKKqigXwjllssluHJOBinEaAssPP3jH/9Iwb0g+WDTbF5K
Vlc/R0fEj1WfBaC46yE6E8q1Q+w3vtN2tVT3aBf0KyarPG2TyaHN+C/MHE8U
j9Nt8bylVNNHtoM6avHsh4IK+iWT7kZkhkY153OHfrpbJ1QEJEGhTxlfqhVP
+Knrqi1peZI76ODnJ4cj0jm+zlJPbEXmQM4/M1pkNS5oUZMZG9D497//3c9h
8ggq4prFYmtuF5ihoIL+JyhiBuyj2bNnp5ISNH74cZcttCSh7/L2K/NYBM+t
jvXE9VGyReh5iPBGT9AI8opEWWcAZqNSCbwCXtCvm2AAXSArVsn5mnKuvP9k
BKuYsWGSxXzLrZoviVRQQQX9cqjGXX4peNQd8PATVQDp+re//Y06fPrpp1TG
toZLRPD26dPnnXfeSZk9El27i1Cueo+k6hmxQcrqDwYrP7tJqoEvGJ5ffvnl
z1/tghYVGRV7PQtmhnlqvIgkBgYvts4Heslz5Oe5Iragggr6oSTD38S0tSib
NWuWvvy4hxZKNr7wwgunn3767373O10Nucsuu3z11VcpAwxKQE369u273HLL
rbbaai+++KJfj17fRULqHwl2aqv4BxDOyy+/7JorpXws9J6fPPXUUzR5iy22
WGz1wmJFsPTo0aPbt2/fqFGjQw455LLLLpMvQv/CDMcdd1yTJk3467zzzhP/
p1JQUFpcwQOtHjJkSOvWrWfMmKHJtcinfEEFFZQj5qnNnPHjx59yyikrr7zy
2muvvd5666266qrbbbfdoEGDpPh+REsfZTpq1ChdDQmtvvrqfP72t79F+cY9
mN9+++2DDz6oNCCNFJRyWqSLobnFiJRBiMaNG4MK+vTpk4LDIVZYlmbPnj1p
Dm0vNl/86gmVd/zxxy+zzDKMuEAySPiRRx7Rv//85z+bN2+uh+L/3r17S0sa
XSzyXUWLio488sgllljiiCOOSKXDVBdPHFVQQb9kQtNhHd98881169ZFiC2T
UVWJTjvtNKeUvjaKkH3k4ITohk3hEAkfpCxtKyHwpz/96Te/+Q3gBONr4MCB
YINnn33266+/Vg68q/DChx56aKmlltpss80wyqL0kOaNwQPeJ6IXHRcRQyb0
1v9lpIcOvZDQLt9U7vroZ9w0ynfvJCXDffbZh6q2adMmBcwQAYaWs0FN9OqK
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
uRZBhdwUuVA0RbCnkniPYfNOpu7NxXNGn4O/5EJV7RGaWzoQIJV4gJ+PPPJI
VXYJSG06LQa7ulvmZUTLw/zfcPxg5LdUpsW8eq6NKjJppX+9nOcGxoaXB/9Y
B6mGgNLDDjsMzFCnTh3wA+rGKTWJlPmIESOee+65s88+W5tZXGKuP9FrXjSM
hRqHxChZP3GyWu7HZDpfcMEFmAwAvHvuuYdheuihh5544gnDb+NA/RTHRiu+
fKHwX+Ha01RCAptvvnlVdvF6LrG+TJ8+nX9l1zsuRc69XEiDMVJER7yim1Ys
eWqEPRqI3IEzMRO7ZKP/RJn07du3KtyiUlBBiy1JcmJf6F7IjTba6Oabb77u
uut69OiBcPMMJQ2Cjim/wQYbrLPOOsjG66+/3vqdSYqguPbaa3mLT8ylr7/+
+osvvvj888+Zy3xqOVXynDn4wgsvYHrcfvvtV111lQ4LSiURgahkqg4YMKB7
9+5Tp05laiPKSEyVomc4lRwX1FyH+XjDlxSHztMjk6effvrEE088+eST+a7p
P7d0A5Sz0pWRuusqBZhkyabTDmmI1ERctq7RqVIbsnxzNaZMmfLUU0/RHLpx
yJAhL7/8cp8+feaGDaHjx4+XlQooQte89957uZDR70pHbCHzu3btynjdeuut
VF5rItojc/nllz/77LN8ocfuvffeLl263HbbbRK5IhLTTK/yoyY0jlLKjqlz
D6A+6BA+Kcj5RE8FaXiu+68Z2WWXXRZop+6tcE6Rg1tgJylWBaWQlUrUmngU
/vzlZXdyjk4GW5GjRo2C8Wg1PTN58mQ3OWWnOugMNBV6TUY+LSQX4oKZTHo6
ihLNezmj+Pzzz2ew6tevT33IsFyP84QchDH4nnPukS2ZM1hHHHHE+uuvD2P4
RFMXRJ/fd999PXv2nDBhAqDlscceYwIyhXXIWwoRufPqZ2VFPjoH7JBDDpmd
Ea3T6xpTkjF2zBS6jqlEET5sysQrsC717NatG9UYO3as3EfqUjqBib/hhhvC
w0gbEtxxxx033ngj2VpZ00CdMnruuedecskldevW7dSpU26YNDoM3y233HLZ
ZZdRIsJBEzMyg844FT/AwAMHDmQ0yd83zKbsrAxaxOvUmfoMHjxY6DEaSvQM
lbz66qthG+Ydski9NK/+LKigXz15UZV5oZOBHe2gM2w322wz37yA6HAgBOaJ
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
poPw/JWjYuySfLO+40cNDl0zz8YwiXhB68rELOWUU04/kDK5kkR8dFpb952o
RvxRr1692i6/IYGcpqg3ohL4tni0QVRW0dAIRUTbZE8tKfpKMZYyMm8zp5vR
2CVpjiZd+GiMpGjLKCM4xL8VnlcYSQ1ZsWKF1s21Xiy96t0Tnld36v414WRD
k1VurNwN0Xy4f4J/bSdxM/lrX09AReWjzeJXmcgybTRjGZ9UFxHgOY1AxiRZ
tp999tk3xVMyM0GSkdYWT1SX7XaCEdtrSebss892DAMGFIR24YUXKpLWb/Qq
m2tO1kU78dTF2LTM1hujjmidNX3hAx8zc1ka/HH3TUTglp4XlXxkWJRhsi5c
dEl8/I4dO7Zv375Tp06XX365pkQ8ANZL/oJUsxsoe2rG/BmamQw0jUwqIOea
a6654IILzj33XFi6/fbbvV6gb9DW3wNPEz76l/tK+poBMHFYrnemsRQm+VQ7
PS6Bq2Spx5FTTjn96GT1npTMKiTFLDe6jsdDywzpfnS7ouqWXrLHoZsxviIq
W2mVyFgsGWcbokKAjYxfqUnOOBsc5zTMqreKx/WUyHay7vLuesmCouSMGTPu
v//+YcOGjR49mgvt5rDvHLeqZZjJLLXEMNEon2+LiR+9Ip+EePJSfZsJJ3CU
SPlDxqMYPYHvOYFoOn0oWEyXkQSrV4olIldr1ndicmYtOykOTs2ZLFu2DNkO
HTp0+PDhgwcPfuCBB2S2zF58UTzGMQknnifr5t+2oYlWPiM6dU0p6nD5+F5P
xcf5rngRx5vNtDNj/y2cNR+P9k5KQkeED8uPT+9zMdiO1jk2eU3xVNz4riR0
k8JvdDPuezJutOGOs3+ZhZVSeBx3VupdGmOeJIlIwIlfXK1X+ozT/Mnk6xc5
5ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeWUU045
5ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeWUU045
5ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeWUU045
5ZRTTjnllFNOOeWUU0455ZRTTjnllFNOOeW0CdN//ud/8vd//ud/9K8uvv32
W/37t7/97ZtvvonlubN27Vpdr1mzhr//+7//ywX3uaawf/1//+//qULdcZ2U
L8MP9ZiZ//iP/9AdP0X9rsevUAGu9ZMZKCW3Jbbiv//7v12Am7Tl//7f/6t/
VSF3zBIPqtXxb0ZEZeivf/2rLr7++mvfpAtUjxoS//Je8cBfeNPNJAhTrYgc
fpNSUiJnldGL/Lgk7Ib8WCQ+4c0vEv/+t4zEYNs9ota5aWZYVcWOXpNSGX48
DpPQ6h9CcTzHIRovIof/9V//FR83t7FbdVPNd7VuQnw88+tGIamOpIS3nHLK
6Z+HZEyjrpOVtK3hIip8SmJhoz7875RUQzTNSaoS/8//+T+6iJa6lGy1fVGK
BMTGV199pX/Fw6pVq/RT+fqToPP1rPU8PHMtNCLyT9+mFC9oiFu6XiZLXyoJ
6Fm1jqcy9j3yFq+TdZEAP0kIsjtmSa+ITZDZNWKJtjjTd+X5/x4kGCY+Bfn4
G+27mOEmTUMgmTGTrIsZktCujGSSdLTEVm+IeDvFXG1lHiltlKByptrSYkkR
z2RgEriFmzQhdmi8Njq1RaZ3PMz0k7+OjUVx8KixERnmlFNOmzyhtayx/fmj
mtB4UXVbV0j3Ri3BUzY90ZmSnyt3z7o0qchJoaSUrUwJNfOU364X+S3CD3Z/
9GBlNJi0d1K0BdGoZUyYuY2TLbbF0WrICJZ5qauSeOULR4kZn9Ai4woXs/Rs
XEwRmfhivcWS0ONu6b//+7+XNucH0tdff22jaahjHtShZUYCEnanu5janoS+
4F+NkEzJUmKo8JTnqYz9fgjpG/HwVn9lbKjfQnOEoDLzD/Hb8bhKin2hTyDC
1NjS8uPtZyDNfoiNTLtyyimnfwaSLlqv7Yiemg1TLBwnWl1b1J9eaMBIVcY8
oYukRWOdGW/RgMHFrMApWcYvs8MeFS+1RaSklRf5wvqXi/XqRpn1ypuhjCtt
fkpXfEqJMrHVyAEfFq48GeIWWc42MdRM+WhxzInaJXDyUxgjXuph45dmpnGS
YBnXy0MsptqiO88jlfR5v8dUQykx3rzMJFKvqS8yUw1qY2aVhA4yTtBYzQwM
/2qAx1+XgYEMtv/5yUAuKfZF+dGbU045bdqkzx/tlJlHjQVs04UKYoyENSpa
WlbJivTzzz9Pik5fGb2n8rb+epd0/pdffqmbeouMiN9b+Ylr/+VZP+L5/NK1
+Nh8HFgUu6ZHLKLKqM244u9li+HDh0ssNq+uUy6tjD4Uw0jMYbRfwjASke7L
AKmwS2Yg0JIlSx555JGkEssu35VkNDOQUn+jJVVzMutl3EE+elb8Z+Jw/Ky9
cgqUn9HKrM7Han9gMzc0njP4mb9PPfXU+PHj3dKIPDUV5oGk4aEZqiR8DhnE
+wOZ/4GkVnvUJfnkQ045/TORzei8efPeeOONRYsWvfnmm2+99db8lPhXc9oU
kAb74osvKPDJJ5+sWrXKIX82wei6uXPn8vi7776rejCOUbVuyIU3RfX45JNP
XnLJJZdeemn37t2fffbZpGSxntctXbq0Xr16f/rTn37/+9/vsMMO8IxBqRCc
mBlJ4Omnn7722muvu+66Tp06XXbZZT169LjxxhuXLVumWXE9NXbs2L59+155
5ZUwA0s333xznz59Ylvi5HwpReMok3feeedtvvnmrVq1sjGVuY/LNPERX/9X
SkkRkCTBUU2KoYAyalysXr169uzZixcvRjJS8hgdgUOkdO655/7hD39o164d
PagJig3x//2IMUO1YknrCx9++CHMiI3MBFHERZG8ziLYlhTnUkpLlgcDXp+i
WxnYMWD1O5Fmojy9Rl+8//77fBHJuuspupCJ59+FCxduueWWhUIBCBH54YLH
hw4desUVVzD8BgwYoF89LaOqQK18SmedddY999xjY70RwxTpzauuuqpNmzad
O3fu1q3bAw88kFRuxTCnnHLaZAjtN2vWrB133LFQpF/96lfYYl0ffvjhH3zw
gUpiT3fddVdubrXVVr/73e+OPvrol156KQnzFdipP/7xj3rwF7/4BfVst912
1apVO//889F4nouocPECTxwks8022/AW1YbiTVLtpEqwI1K8BxxwAC+iwL/8
y7/w99/+7d+SskYkGh1dv/feezVq1KASTHkh0NSpUzURTZnJkyfTZN13Me7A
JNahMjrTC+L6F0GpknHjxumObdk111xzyCGHnH766eAKIAroSPc1EcHr7rzz
zvr16x988MEHHnhgrVq16qXEv7vvvvuoUaP8RkQEHEL4vOWXv/zlr3/9a/R8
xubecMMNYmPKlCkVNuE7UeZFwEhMDHzqdfvvv/9hhx1GA+McF9IGwXbo0GG3
3XY74YQTevfuPXjw4OnTp+vXZ5555qGHHurfv/+DDz748MMPY20Ze0Ajm/Ly
kyfewkMxkCGjBUP8PYxdfAug6Pnnnz/jjDNoESwJ5MQlpDjO+/Xrp8HDI3SN
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
    "], {{0, 222.75}, {527.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "Artist" -> "Aya Muhammed", "ExifTag" -> 2136, "DateTimeOriginal" -> 
        DateObject[{2022, 4, 15, 7, 48, 7.}, "Instant"], "DateTimeDigitized" -> 
        DateObject[{2022, 4, 15, 7, 48, 7.}, "Instant"], "SubSecTimeOriginal" -> 
        "95", "SubSecTimeDigitized" -> "95", "XPAuthor" -> 
        ByteArray[{65, 0, 121, 0, 97, 0, 32, 0, 77, 0, 117, 0, 104, 0, 97, 0, 
          109, 0, 109, 0, 101, 0, 100, 0, 0, 0}]|>, 
      "XMP" -> <|
       "XMPBasicSchema" -> <|
         "CreateDate" -> 
          DateObject[{2022, 4, 15, 7, 48, 7.945}, "Instant", "Gregorian", 
            2.]|>, "DublinCoreSchema" -> <|"Creator" -> "Aya Muhammed"|>, 
        "XMPMediaManagementSchema" -> <|
         "InstanceID" -> "uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b"|>|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{527.25, 222.75},
  PlotRange->{{0, 527.25}, {0, 222.75}}]], "Item",
 CellChangeTimes->{
  3.859023829959999*^9},ExpressionUUID->"f5e51b64-12e2-4757-bbcb-\
7eb62403ba7e"],

Cell[CellGroupData[{

Cell["Common Expressions", "Subsubsection",
 CellChangeTimes->{{3.8590251898689404`*^9, 3.8590252050271597`*^9}, {
  3.859038753393757*^9, 
  3.859038756113195*^9}},ExpressionUUID->"71387257-98f6-43c1-afd4-\
aef4ccb75f9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CL32CDmax", "[", 
    RowBox[{"CDo_", ",", "ar_", ",", "o_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"1.345", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"ar", "\[Times]", "o"}], ")"}], 
      FractionBox["3", "4"]]}], 
    SuperscriptBox["CDo", 
     FractionBox["1", "4"]]]}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["C", "L"], 
         RowBox[{"3", "/", "2"}]], "/", 
        SubscriptBox["C", "D"]}], ")"}], "max"], " ", "as", " ", "a", " ", 
     "function", " ", "of", " ", "the", " ", 
     SubscriptBox["C", "D0"]}], ",", " ", 
    RowBox[{"Aspect", " ", "Ratio"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"Oswald", "'"}], "s", " ", "Factor"}], ",", " ", 
    "respectively"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CD", "[", 
    RowBox[{"CDo_", ",", "CL_", ",", "ar_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"CDo", "+", 
      RowBox[{"\[CapitalDelta]CD0", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "+", 
      RowBox[{"\[CapitalDelta]CD0", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "+", 
    FractionBox[
     SuperscriptBox["CL", "2"], 
     RowBox[{"\[Pi]", "\[Times]", 
      RowBox[{"e", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Times]", "ar"}]]}]}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox["C", "D"], " ", "as", " ", "a", " ", "function", " ", "of", 
     " ", 
     SubscriptBox["C", "D0"]}], ",", " ", 
    SubscriptBox["C", "L"], ",", " ", 
    RowBox[{"Aspect", " ", "Ration"}], ",", " ", 
    RowBox[{
     RowBox[{"Oswald", "'"}], "s", " ", "Factor"}], ",", " ", 
    RowBox[{"and", " ", "two", " ", "indices", " ", "for", " ", 
     SubscriptBox["C", "D"], " ", "conributions"}], ",", " ", 
    "respectively"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RCP", "[", "RC_", "]"}], ":=", " ", 
   FractionBox["RC", "33000"]}], "                       ", 
  RowBox[{"(*", 
   RowBox[{
   "Rate", " ", "of", " ", "Climb", " ", "Parameter", " ", "as", " ", 
    "function", " ", "of", " ", "Rate", " ", "of", " ", "Climb"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CGRP", "[", 
    RowBox[{"CGR_", ",", "LD_", ",", "CL_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"CGR", " ", "+", " ", 
     SuperscriptBox["LD", 
      RowBox[{"-", "1"}]]}], 
    SqrtBox["CL"]]}], "         ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Climb", " ", "Gradient", " ", "Parameter", " ", "as", " ", "a", " ", 
     "function", " ", "of", " ", "Climb", " ", "Gradient"}], ",", " ", 
    RowBox[{"L", "/", "D"}], ",", " ", 
    RowBox[{"and", " ", 
     SubscriptBox["C", "L"]}], ",", " ", "respectively"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"WpPRC", "[", 
   RowBox[{
   "RCP_", ",", "WpS_", ",", "CL32CD_", ",", "\[Eta]p_", ",", "\[Sigma]_"}], 
   "]"}], ":=", 
  FractionBox["\[Eta]p", 
   RowBox[{"(", 
    RowBox[{"RCP", " ", "+", " ", 
     FractionBox[
      SqrtBox["WpS"], 
      RowBox[{"19", "\[Times]", "CL32CD", "\[Times]", 
       SqrtBox["\[Sigma]"]}]]}], ")"}]]}], "\n", 
 RowBox[{
  RowBox[{"WpPCGR", "[", 
   RowBox[{"CGRP_", ",", "WpS_", ",", "\[Eta]p_", ",", "\[Sigma]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"18.97", "\[Times]", "\[Eta]p", "\[Times]", 
    SqrtBox["\[Sigma]"]}], 
   RowBox[{"CGRP", 
    SqrtBox["WpS"]}]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]CL", " ", "=", " ", "0.2"}], ";"}], 
  "                             ", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["C", 
     SubscriptBox["L", "Climb"]], "to", " ", 
    SubscriptBox["C", 
     SubscriptBox["L", "maxTO"]], " ", "safe", " ", "margin"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8590252386605835`*^9, 3.8590254596662855`*^9}, {
   3.85902555861331*^9, 3.8590256042671547`*^9}, {3.8590256344317875`*^9, 
   3.859025650291521*^9}, {3.8590338197329483`*^9, 3.8590338617538023`*^9}, {
   3.8590387098249187`*^9, 3.859038735234028*^9}, {3.859038828854066*^9, 
   3.859038863933711*^9}, {3.85903890248388*^9, 3.8590389242641582`*^9}, {
   3.859038960093021*^9, 3.859039085824405*^9}, {3.859039120607682*^9, 
   3.8590391591706696`*^9}, 3.8590394397455745`*^9, {3.859040092112096*^9, 
   3.8590401268181934`*^9}, {3.859040340843066*^9, 3.85904058717951*^9}, {
   3.85904131797451*^9, 3.859041334083831*^9}, {3.8590442331321416`*^9, 
   3.859044324228254*^9}, {3.8590444333038244`*^9, 3.859044433881897*^9}, 
   3.859044518661081*^9},
 CellLabel->
  "In[807]:=",ExpressionUUID->"9f694199-3538-41a1-ae40-84552b802979"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Drag Polar Preparation", "Subsubsection",
 CellChangeTimes->{{3.8590228251495256`*^9, 3.8590228501725235`*^9}, {
  3.859025178507515*^9, 
  3.859025187069973*^9}},ExpressionUUID->"009246c0-6994-421e-a5cf-\
b9476ec1bb65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cf", " ", "=", " ", "0.005"}], ";"}], 
  "                                            ", 
  RowBox[{"(*", 
   RowBox[{"skin", " ", "friction", " ", "coefficient"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AR", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", "10"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]CD0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.015", ",", "0.06", ",", "0.02", ",", "0.005"}], 
     "}"}]}], ";"}], "                      ", 
  RowBox[{"(*", 
   RowBox[{"clean", ",", " ", 
    RowBox[{"take", "-", 
     RowBox[{"off", " ", "flaps"}]}], ",", " ", 
    RowBox[{"landing", " ", "flaps"}], ",", " ", 
    RowBox[{"landing", " ", "gear"}], ",", " ", 
    RowBox[{"stopped", " ", "propeller"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"e", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "0.8", ",", "0.7", ",", "0.8"}], "}"}]}], ";"}], 
  "                                 ", 
  RowBox[{"(*", 
   RowBox[{"clean", ",", " ", 
    RowBox[{"take", "-", 
     RowBox[{"off", " ", "flaps"}]}], ",", " ", 
    RowBox[{"landing", " ", "flaps"}], ",", " ", 
    RowBox[{"landing", " ", "gear"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"f", "[", "Cf_", "]"}], ":=", " ", 
  RowBox[{"Switch", "[", 
   RowBox[{"Cf", ",", "0.009", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.0458"}], ",", "1."}], "}"}], ",", "0.008", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.0969"}], ",", "1."}], "}"}], ",", "0.007", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.1549"}], ",", "1."}], "}"}], ",", "0.006", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.2218"}], ",", "1."}], "}"}], ",", "0.005", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.301"}], ",", "1."}], "}"}], ",", "0.004", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.3979"}], ",", "1."}], "}"}], ",", "0.003", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.5229"}], ",", "1."}], "}"}], ",", "0.002", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.699"}], ",", "1."}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{
    RowBox[{"f", "[", "cf", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    RowBox[{"f", "[", "cf", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "[", "AirplaneType_", "]"}], ":=", " ", 
  RowBox[{"Switch", "[", 
   RowBox[{"AirplaneType", ",", "1", ",", 
    RowBox[{"{", 
     RowBox[{"1.2362", ",", "0.4319"}], "}"}], ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"1.0892", ",", "0.5147"}], "}"}], ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"0.8635", ",", "0.5632"}], "}"}], ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"1.0447", ",", "0.5326"}], "}"}], ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"0.2263", ",", "0.6977"}], "}"}], ",", "6", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0866"}], ",", "0.8099"}], "}"}], ",", "7", ",", 
    RowBox[{"{", 
     RowBox[{"0.0199", ",", "0.7531"}], "}"}], ",", "8", ",", 
    RowBox[{"{", 
     RowBox[{"0.8565", ",", "0.5423"}], "}"}], ",", "9", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1289"}], ",", "0.7506"}], "}"}], ",", "10", ",", 
    RowBox[{"{", 
     RowBox[{"0.1628", ",", "0.7316"}], "}"}], ",", "11", ",", 
    RowBox[{"{", 
     RowBox[{"0.6295", ",", "0.6708"}], "}"}], ",", "12", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1868"}], ",", "0.9609"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{
    RowBox[{"g", "[", "3", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{
    RowBox[{"g", "[", "3", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"solSW", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", "Swet"}], "]"}], "==", 
      RowBox[{"c", "+", 
       RowBox[{"d", "\[Times]", 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", "WTO"}], "]"}]}]}]}], ",", "Swet"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SWet", " ", "=", " ", 
   RowBox[{"Swet", "/.", 
    RowBox[{"solSW", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"solf", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", "fa"}], "]"}], "==", 
      RowBox[{"a", "+", 
       RowBox[{"b", "\[Times]", 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", "SWet"}], "]"}]}]}]}], ",", "fa"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", 
    RowBox[{"fa", "/.", 
     RowBox[{"solf", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WpSavg", " ", "=", " ", "35"}], ";"}], 
  "                                           ", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      RowBox[{"W", "/", "S"}], ")"}], "avg"], " ", "in", " ", "psf"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S", " ", "=", " ", 
    FractionBox["WTO", "WpSavg"]}], ";"}], 
  "                                           ", 
  RowBox[{"(*", 
   RowBox[{"Wing", " ", "planform", " ", "area", " ", "in", " ", 
    SuperscriptBox["ft", "2"]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CD0", " ", "=", " ", 
    FractionBox["f", "S"]}], ";"}], 
  "                                              ", 
  RowBox[{"(*", 
   RowBox[{"Parasite", " ", "drag", " ", "coefficient", " ", 
    SubscriptBox["C", "D0"]}], "*)"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<a = \>\"", ",", "a", ",", "\"\<\\nb = \>\"", ",", "b", ",", 
   "\"\<\\nc = \>\"", ",", "c", ",", "\"\<\\nd = \>\"", ",", "d"}], 
  "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\< Wetted Area (\!\(\*SubscriptBox[\(S\), \(Wet\)]\)) = \>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"SWet", ",", 
     SuperscriptBox["\"\<Feet\>\"", "2"]}], "]"}], ",", 
   "\"\<\\n Equivalent Parasite Area(f) = \>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"f", ",", 
     SuperscriptBox["\"\<Feet\>\"", "2"]}], "]"}], ",", 
   "\"\<\\n Wing Planform Area(S) = \>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"S", ",", 
     SuperscriptBox["\"\<Feet\>\"", "2"]}], "]"}], ",", 
   "\"\<\\n Parasite Drag Coefficient (\!\(\*SubscriptBox[\(C\), \(D0\)]\)) = \
\>\"", ",", "CD0"}], "]"}]}], "Code",
 CellChangeTimes->{{3.859023352557028*^9, 3.859023391955516*^9}, {
   3.8590234476112533`*^9, 3.859023541608418*^9}, {3.859026578330002*^9, 
   3.859026579989953*^9}, 3.8590275404432597`*^9, {3.8590276199720025`*^9, 
   3.8590276298724966`*^9}, 3.8590282719633675`*^9, {3.859034476604658*^9, 
   3.8590345373274193`*^9}, {3.859034622002406*^9, 3.859034629395383*^9}, {
   3.8590354273241663`*^9, 3.859035463513848*^9}, {3.8590356600410795`*^9, 
   3.859035669074217*^9}, 3.8590372667561445`*^9, 3.8590396552174716`*^9, {
   3.859039750582775*^9, 3.85903975299846*^9}, 3.859039876081645*^9, {
   3.859042145406455*^9, 3.8590421473582926`*^9}, {3.859043521289341*^9, 
   3.85904352257069*^9}, {3.859045677756527*^9, 3.859045692726515*^9}, {
   3.859057280176136*^9, 3.859057650741912*^9}, {3.859064626753153*^9, 
   3.8590647421394725`*^9}, {3.859064772628038*^9, 3.859064813117993*^9}, {
   3.859064846093273*^9, 3.859064851133026*^9}},
 CellLabel->
  "In[814]:=",ExpressionUUID->"7cafeb20-7460-4583-ab13-4942a9700494"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "2.301`"}], "\[InvisibleSpace]", "\<\"\\nb = \"\>", 
   "\[InvisibleSpace]", "1.`", "\[InvisibleSpace]", "\<\"\\nc = \"\>", 
   "\[InvisibleSpace]", "0.8635`", "\[InvisibleSpace]", "\<\"\\nd = \"\>", 
   "\[InvisibleSpace]", "0.5632`"}],
  SequenceForm[
  "a = ", -2.301, "\nb = ", 1., "\nc = ", 0.8635, "\nd = ", 0.5632],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700897125716`*^9, 3.859070109775236*^9}, 
   3.859094241042638*^9, 3.8590943633764286`*^9, 3.859094614364448*^9, 
   3.8590947143691*^9, 3.859094854997919*^9, 3.859095196542074*^9, {
   3.859095302101721*^9, 3.8590953064347253`*^9}, 3.859095594796029*^9, 
   3.8590976132905946`*^9, 3.859097648084729*^9},
 CellLabel->
  "During evaluation of \
In[814]:=",ExpressionUUID->"87558fa0-796b-4aab-b5c4-6245fb64e08e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Wetted Area (\\!\\(\\*SubscriptBox[\\(S\\), \\(Wet\\)]\\)) = \
\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"916.1616207043133`", 
     RowBox[{
       SuperscriptBox["\"ft\"", "2"]}], "feet squared", 
     SuperscriptBox["\"Feet\"", "2"]},
    "Quantity"], 
   "\[InvisibleSpace]", "\<\"\\n Equivalent Parasite Area(f) = \"\>", 
   "\[InvisibleSpace]", 
   TemplateBox[{"4.581124499726362`", 
     RowBox[{
       SuperscriptBox["\"ft\"", "2"]}], "feet squared", 
     SuperscriptBox["\"Feet\"", "2"]},
    "Quantity"], "\[InvisibleSpace]", "\<\"\\n Wing Planform Area(S) = \"\>", 
   "\[InvisibleSpace]", 
   TemplateBox[{"152.0240286824374`", 
     RowBox[{
       SuperscriptBox["\"ft\"", "2"]}], "feet squared", 
     SuperscriptBox["\"Feet\"", "2"]},
    "Quantity"], 
   "\[InvisibleSpace]", "\<\"\\n Parasite Drag Coefficient \
(\\!\\(\\*SubscriptBox[\\(C\\), \\(D0\\)]\\)) = \"\>", "\[InvisibleSpace]", 
   "0.030134213251879153`"}],
  SequenceForm[" Wetted Area (\!\(\*SubscriptBox[\(S\), \(Wet\)]\)) = ", 
   Quantity[916.1616207043133, "Feet"^2], "\n Equivalent Parasite Area(f) = ", 
   Quantity[4.581124499726362, "Feet"^2], "\n Wing Planform Area(S) = ", 
   Quantity[152.0240286824374, "Feet"^2], 
   "\n Parasite Drag Coefficient (\!\(\*SubscriptBox[\(C\), \(D0\)]\)) = ", 
   0.030134213251879153`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700897125716`*^9, 3.859070109775236*^9}, 
   3.859094241042638*^9, 3.8590943633764286`*^9, 3.859094614364448*^9, 
   3.8590947143691*^9, 3.859094854997919*^9, 3.859095196542074*^9, {
   3.859095302101721*^9, 3.8590953064347253`*^9}, 3.859095594796029*^9, 
   3.8590976132905946`*^9, 3.859097648090728*^9},
 CellLabel->
  "During evaluation of \
In[814]:=",ExpressionUUID->"9437fd21-13f1-4425-ae5c-06a3282f75a2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FAR 23.65 (AEO)", "Subsubsection",
 CellChangeTimes->{{3.8590236343071136`*^9, 
  3.859023647530322*^9}},ExpressionUUID->"3c1a46fe-2840-4403-8170-\
b3238793e4aa"],

Cell["Rate of Climb ", "Text",
 CellChangeTimes->{{3.8590236535608234`*^9, 
  3.859023659868617*^9}},ExpressionUUID->"7cbf2a40-4583-4a41-8f8a-\
20516eeb573a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RC65", " ", "=", " ", "300"}], ";"}], 
  "                                            ", 
  RowBox[{"(*", 
   RowBox[{"Minimum", " ", "rate", " ", "of", " ", "climb", " ", 
    RowBox[{"(", "fpm", ")"}], " ", "according", " ", "to", " ", "FAR23", 
    ".65"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]p65", " ", "=", " ", "0.8"}], ";"}], 
  "                                            ", 
  RowBox[{"(*", 
   RowBox[{"Assumed", " ", "propeller", " ", "efficiency"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]65", " ", "=", " ", "1."}], ";"}], 
  "                                              ", 
  RowBox[{"(*", 
   RowBox[{
   "Density", " ", "ratio", " ", "according", " ", "to", " ", "FAR23", 
    ".65"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RCP65", " ", "=", " ", 
    RowBox[{"RCP", "[", "RC65", "]"}]}], ";"}], 
  "                                     ", 
  RowBox[{"(*", 
   RowBox[{"Rate", " ", "of", " ", "climb", " ", "parameter"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CD065", " ", "=", " ", 
    RowBox[{"CD0", " ", "+", " ", 
     RowBox[{"\[CapitalDelta]CD0", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], 
  "                                ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Parasite", " ", "drag", " ", "coefficient", " ", 
     SubscriptBox["C", "D0"], " ", "with", " ", "take"}], "-", 
    RowBox[{"off", " ", "flaps"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CL32CDmax65", " ", "=", " ", 
    RowBox[{"CL32CDmax", "[", 
     RowBox[{"CD065", ",", "AR", ",", 
      RowBox[{"e", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "               ", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["C", "L"], 
        RowBox[{"3", "/", "2"}]], "/", 
       SubscriptBox["C", "D"]}], ")"}], "max"], " ", "for", " ", "FAR", " ", 
    "23.65"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WpPRC65", "[", 
    RowBox[{"WpSRC65_", ",", "CL32CD_"}], "]"}], ":=", " ", 
   RowBox[{"WpPRC", "[", 
    RowBox[{
    "RCP65", ",", "WpSRC65", ",", "CL32CD", ",", "\[Eta]p65", ",", 
     "\[Sigma]65"}], "]"}]}], " "}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Rate of Climb Parameter (RCP) = \>\"", ",", 
   RowBox[{"RCP65", "//", "N"}], ",", 
   "\"\<\\nUpdated Parasite Drag Coefficient (\!\(\*SubscriptBox[\(C\), \
\(D0\)]\))= \>\"", ",", "CD065", ",", 
   "\"\<\\nFor AR = {8,10}, (\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\) = \>\"", ",", "CL32CDmax65"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<W/P = \>\"", ",", 
   RowBox[{"WpPRC65", "[", 
    RowBox[{
    "\"\<W/S\>\"", ",", 
     "\"\<(\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\)\>\""}], "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"WpPRC65", "[", 
         RowBox[{"#", ",", 
          RowBox[{"CL32CDmax65", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"WpPRC65", "[", 
          RowBox[{"#", ",", 
           RowBox[{"CL32CDmax65", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "/", "1.1"}]}], "}"}], 
      "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "40", ",", "50"}], "}"}]}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \\n (pfs)\>\"", ",", 
         "\"\<(W/P\!\(\*SubscriptBox[\()\), \(max . \\\ cont . \)]\)  \\n \
(lbs/hp)\>\"", ",", 
         "\"\<(W/P\!\(\*SubscriptBox[\()\), \(max . \\\ take - off\)]\)  \\n \
(lbs/hp)\>\""}], "}"}]}], "}"}]}]}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the Plot Matching the Climb Rate Requirements for FAR 23.65 at \
various AR\>\"", "]"}], "\n", 
 RowBox[{"RC65plot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WpS", ",", 
         RowBox[{
          RowBox[{"WpPRC65", "[", 
           RowBox[{"WpS", ",", 
            RowBox[{"CL32CDmax65", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "/", "1.1"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(AR\), \(RC_FAR\\\ 23.65\)]\) = ``\>\"", 
           ",", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", 
            RowBox[{"#", "+", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Cyan", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "80"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.8590238693143463`*^9, 3.859024000303232*^9}, {
   3.8590240387990828`*^9, 3.8590241253327208`*^9}, {3.8590245460415463`*^9, 
   3.8590245751824503`*^9}, {3.859024606136903*^9, 3.859024658305504*^9}, {
   3.8590246888319273`*^9, 3.859024928188809*^9}, {3.859024958365218*^9, 
   3.859024970284412*^9}, {3.859025032525185*^9, 3.859025115916006*^9}, {
   3.859025680592661*^9, 3.8590257790755224`*^9}, {3.859025835430078*^9, 
   3.859026342043769*^9}, {3.8590263868401213`*^9, 3.8590264313262477`*^9}, {
   3.8590264744905787`*^9, 3.859026502954465*^9}, 3.8590265560635023`*^9, {
   3.8590266811474595`*^9, 3.859026690001071*^9}, {3.8590270587362523`*^9, 
   3.859027108442504*^9}, 3.859027348916645*^9, 3.8590274545145087`*^9, 
   3.8590275158544135`*^9, 3.859027655747187*^9, {3.859027685811944*^9, 
   3.8590276983350506`*^9}, {3.8590278261821356`*^9, 
   3.8590279081413574`*^9}, {3.8590279558969126`*^9, 3.859027961804148*^9}, {
   3.859028060187414*^9, 3.8590280813402457`*^9}, {3.8590281139111333`*^9, 
   3.859028227936409*^9}, {3.8590305043743496`*^9, 3.85903052797939*^9}, {
   3.859030562258929*^9, 3.859030652535535*^9}, {3.8590338684187703`*^9, 
   3.8590338762853355`*^9}, {3.859034209107496*^9, 3.8590342714851065`*^9}, {
   3.8590346424260616`*^9, 3.859034642837636*^9}, {3.8590346951631165`*^9, 
   3.8590346953410783`*^9}, {3.859034774910306*^9, 3.8590347922460833`*^9}, {
   3.859034906286521*^9, 3.8590349082351274`*^9}, 3.859035025103919*^9, {
   3.8590353031039295`*^9, 3.8590353101889305`*^9}, {3.859035423002778*^9, 
   3.859035453644976*^9}, {3.859037718034314*^9, 3.859037718341325*^9}, {
   3.8590443801623893`*^9, 3.859044417516105*^9}, 3.85904446380614*^9, 
   3.859044498594002*^9, {3.859044613285226*^9, 3.8590446425347357`*^9}, {
   3.8590447208158875`*^9, 3.859044752770857*^9}, 3.8590462012885303`*^9, {
   3.8590467556550446`*^9, 3.859046783525663*^9}, {3.8590579538185596`*^9, 
   3.8590579584196944`*^9}, {3.859058077168598*^9, 3.859058105246857*^9}, {
   3.859063222838722*^9, 3.8590632277163267`*^9}, {3.859064004178149*^9, 
   3.8590640646372213`*^9}, {3.8590652646472793`*^9, 3.859065294147866*^9}, {
   3.859065588767165*^9, 3.8590658394574976`*^9}, {3.8590658801578417`*^9, 
   3.859065904136816*^9}, {3.85906622445394*^9, 3.8590662362703824`*^9}, {
   3.8590695191435585`*^9, 3.859069548045992*^9}},
 CellLabel->
  "In[833]:=",ExpressionUUID->"2ba458c3-92d4-46b6-9e1f-72c618aa340f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rate of Climb Parameter (RCP) = \"\>", "\[InvisibleSpace]", 
   "0.00909090909090909`", 
   "\[InvisibleSpace]", "\<\"\\nUpdated Parasite Drag Coefficient \
(\\!\\(\\*SubscriptBox[\\(C\\), \\(D0\\)]\\))= \"\>", "\[InvisibleSpace]", 
   "0.04513421325187915`", 
   "\[InvisibleSpace]", "\<\"\\nFor AR = {8,10}, \
(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(C\\), \\(L\\)], \\(3/2\\)]\\)/\\!\\(\
\\*SubscriptBox[\\(C\\), \\(D\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(max\\)]\
\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"11.741695017624544`", ",", "13.88076192299101`"}], "}"}]}],
  SequenceForm[
  "Rate of Climb Parameter (RCP) = ", 0.00909090909090909, 
   "\nUpdated Parasite Drag Coefficient (\!\(\*SubscriptBox[\(C\), \
\(D0\)]\))= ", 0.04513421325187915, 
   "\nFor AR = {8,10}, (\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\) = ", {11.741695017624544`, 13.88076192299101}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700897639427`*^9, 3.859070109826499*^9}, 
   3.8590942428916397`*^9, 3.8590943652470493`*^9, 3.85909461617721*^9, 
   3.8590947163016605`*^9, 3.8590948568575134`*^9, 3.859095198458639*^9, {
   3.859095302173724*^9, 3.8590953064807343`*^9}, 3.8590955948360324`*^9, 
   3.859097613334603*^9, 3.8590976481247516`*^9},
 CellLabel->
  "During evaluation of \
In[833]:=",ExpressionUUID->"e32cf04a-25f1-4505-b512-d0cc1a936323"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"W/P = \"\>", "\[InvisibleSpace]", 
   FractionBox["0.8`", 
    RowBox[{
     FractionBox["1", "110"], "+", 
     FractionBox[
      RowBox[{"0.05263157894736842`", " ", 
       SqrtBox["\<\"W/S\"\>"]}], \
"\<\"(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(C\\), \\(L\\)], \
\\(3/2\\)]\\)/\\!\\(\\*SubscriptBox[\\(C\\), \
\\(D\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(max\\)]\\)\"\>"]}]]}],
  SequenceForm[
  "W/P = ", 0.8/(Rational[1, 110] + 
   0.05263157894736842 
    "(\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\)"^(-1) "W/S"^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700897639427`*^9, 3.859070109826499*^9}, 
   3.8590942428916397`*^9, 3.8590943652470493`*^9, 3.85909461617721*^9, 
   3.8590947163016605`*^9, 3.8590948568575134`*^9, 3.859095198458639*^9, {
   3.859095302173724*^9, 3.8590953064807343`*^9}, 3.8590955948360324`*^9, 
   3.859097613334603*^9, 3.859097648131729*^9},
 CellLabel->
  "During evaluation of \
In[833]:=",ExpressionUUID->"277166a0-f3aa-48f5-b5e4-da3aa76e85a5"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"(W/S\\!\\(\\*SubscriptBox[\\()\\), \\(TO\\)]\\) \\n (pfs)\"\
\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(max . \\\\ cont . \
\\)]\\)  \\n (lbs/hp)\"\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(max . \\\\ take - off\
\\)]\\)  \\n (lbs/hp)\"\>",
       HoldForm]},
     {"20", "27.456459218839242`", "24.960417471672038`"},
     {"30", "23.779581833765256`", "21.61780166705932`"},
     {"40", "21.367280617872254`", "19.42480056170205`"},
     {"50", "19.614271660098343`", "17.831156054634857`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \n (pfs)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(max . \\ cont . \)]\)  \n (lbs/hp)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(max . \\ take - off\)]\)  \n \
(lbs/hp)"}}]]]], "Output",
 CellChangeTimes->{{3.8590700897838345`*^9, 3.8590701098499627`*^9}, 
   3.8590942575367413`*^9, 3.859094380229751*^9, 3.859094630956937*^9, 
   3.8590947311163645`*^9, 3.8590948716626883`*^9, 3.859095213245367*^9, {
   3.8590953021957245`*^9, 3.859095306502721*^9}, 3.8590955948560324`*^9, 
   3.8590976133555994`*^9, 3.8590976481427317`*^9},
 CellLabel->
  "Out[842]//TableForm=",ExpressionUUID->"56e67461-b00e-4a42-990f-\
723c8dbaa433"],

Cell[BoxData["\<\"Sketch the Plot Matching the Climb Rate Requirements for \
FAR 23.65 at various AR\"\>"], "Print",
 CellChangeTimes->{{3.8590700897639427`*^9, 3.859070109826499*^9}, 
   3.8590942428916397`*^9, 3.8590943652470493`*^9, 3.85909461617721*^9, 
   3.8590947163016605`*^9, 3.8590948568575134`*^9, 3.859095198458639*^9, {
   3.859095302173724*^9, 3.8590953064807343`*^9}, 3.8590955948360324`*^9, 
   3.859097613334603*^9, 3.859097648151732*^9},
 CellLabel->
  "During evaluation of \
In[833]:=",ExpressionUUID->"5789151e-c0a9-4240-aeed-d289986e565c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Dashing[{Small, Small}], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1: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
+8mZrLFAnWx8zp1J4H97oMwTjpvz6QT+AzWTk4M=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$14214#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1: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
MFYYiU4sN8GuM9FplxKZWM3nbZQJN4EMKZRf6+OETr2jN+R1TSCVyqkLJjsj
SavhFo9njL6E642So8644vNhrextYxwymP7n0l0XRE+XWXCW3znoaU44N90V
kuc7mOYOxlDTTpF6GuyG9Yalkb7SxtCPfCASasiCdmWjzdCAEURtqmxEZlmQ
vW/pyL9phOoHHy+mP3XH4+9vceuTjLBdlVv61MUDyVunT9E9jWDD4Zx1qfOA
xLzI4nkNI0hIJ/7WquWJXoW9TZZ8KpaCP3jLZHoiNWxbtVw7FQGkTNW2WU+4
8+1jOy9T8bamPZvl74XRmgBSShIVLPVxze67Xqi+pJ7/aQcVWqObW1v02Sja
XvI8yIgK8hVllcxsNsSVq2f8pak4ZVs163yWjbPhtaX311LxuY/ZJZnHhuWx
3HCdZd0ufiQj5xwb449u6UxLUpF44Dn//K9saEc4Hs4Sp+KFVd6z0utslKkV
ht1bSUVOt+Tppsds8HoPJ5gsULAQURKW1sKGo7ROcOFXCkJXWjOYT9jwtbbc
Ibqsbc0jvj5pZ2NLXXJ8zzwFvF9b9j3rZYO2j5x96DMFzH1pDm+H2bip/WT2
zicKOMIbNUresTG2oDapuazVCm9/Cxllo8bn96+npijgt49wxifY6CZpOARO
UlBiQtecmmIj7/gfZaIfKCC19y9WT7NhZCZrEPWegoTQ2P4fZtlIPpPe2Mej
wKug+OzcHBuzrYUbrv9DwV1ji8g7X9iYEDEdkV/Wek87mYkLbMhk9DQkT1CQ
vzdMy3aRjSsih0rHxin49x/YrClf7LWs/wvw0Itf
           "]]}, Annotation[#, "Charting`Private`Tag$14258#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(RC_FAR\\\\ 23.65\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(RC_FAR\\ 23.65\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(RC_FAR\\\\ 23.65\\)]\\) = \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(RC_FAR\\ 23.65\)]\) = ``", 10], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8590700897838345`*^9, 3.8590701098499627`*^9}, 
   3.8590942575367413`*^9, 3.859094380229751*^9, 3.859094630956937*^9, 
   3.8590947311163645`*^9, 3.8590948716626883`*^9, 3.859095213245367*^9, {
   3.8590953021957245`*^9, 3.859095306502721*^9}, 3.8590955948560324`*^9, 
   3.8590976133555994`*^9, 3.8590976482377276`*^9},
 CellLabel->
  "Out[844]=",ExpressionUUID->"59033960-c3fa-4464-84cb-73e91115e42b"]
}, Open  ]],

Cell["Climb Gradient ", "Text",
 CellChangeTimes->{{3.859028305048205*^9, 
  3.8590283169978027`*^9}},ExpressionUUID->"3a293b35-a704-4bd2-880f-\
dccc7f4c5e40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CGR65", " ", "=", " ", 
    RowBox[{"1", "/", "12"}]}], ";"}], "                         ", 
  RowBox[{"(*", 
   RowBox[{"Climb", " ", "gradient", " ", "in", " ", "rad"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CLmaxTOfd", " ", "=", " ", "1.8"}], ";"}], 
  "                      ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox["C", "Lmax"], "  ", "with", " ", "Take"}], "-", 
    RowBox[{"off", " ", "flaps", " ", "down"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CLmaxCGR65", " ", "=", " ", 
    RowBox[{"CLmaxTOfd", " ", "-", " ", "\[CapitalDelta]CL"}]}], ";"}], 
  "         ", 
  RowBox[{"(*", 
   SubscriptBox["C", 
    SubscriptBox["L", "Climb"]], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CD65", "=", 
   RowBox[{"CD", "[", 
    RowBox[{"CD0", ",", "CLmaxCGR65", ",", 
     RowBox[{"AR", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "2", ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LpD65", " ", "=", " ", 
    RowBox[{"CLmaxCGR65", "/", "CD65"}]}], ";"}], "              ", 
  RowBox[{"(*", 
   RowBox[{"L", "/", "D"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CGRP65", " ", "=", " ", 
   RowBox[{"CGRP", "[", 
    RowBox[{"CGR65", ",", "LpD65", ",", "CLmaxCGR65"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"WpPCGR65", "[", "WpS65_", "]"}], ":=", " ", 
  RowBox[{"WpPCGR", "[", 
   RowBox[{"CGRP65", ",", "WpS65", ",", "\[Eta]p65", ",", "\[Sigma]65"}], 
   "]"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Climb Gradient Parameter (CGRP) = \>\"", ",", 
   RowBox[{"CGRP65", "//", "N"}], ",", 
   "\"\<\\nDrag Coefficient (\!\(\*SubscriptBox[\(C\), \(D\)]\)) = \>\"", ",",
    "CD65", ",", 
   "\"\<\\nLift Coeeficient (\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \
\(Climb\)]]\)) = \>\"", ",", "CLmaxCGR65", ",", "\"\<\\nL/D = \>\"", ",", 
   "LpD65"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<W/P = \>\"", ",", 
   RowBox[{"WpPCGR65", "[", "\"\<W/S\>\"", "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"WpPCGR65", "[", "#", "]"}], ",", 
        RowBox[{"0.85", "\[Times]", 
         RowBox[{"WpPCGR65", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "40", ",", "50"}], "}"}]}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \\n (pfs)\>\"", ",", 
         "\"\<(W/P\!\(\*SubscriptBox[\()\), \(max . \\\ cont . \)]\)  \\n \
(lbs/hp)\>\"", ",", 
         "\"\<(W/P\!\(\*SubscriptBox[\()\), \(max . \\\ take - off\)]\)  \\n \
(lbs/hp)\>\""}], "}"}]}], "}"}]}]}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the Plot Matching the Climb Gradient Requirements for FAR 23.65\
\>\"", "]"}], "\n", 
 RowBox[{"CGR65plot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WpS", ",", 
         RowBox[{"0.85", "\[Times]", 
          RowBox[{"WpPCGR65", "[", "WpS", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(AR\), \(CG_FAR\\\ 23.65\)]\) = ``\>\"", 
           ",", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", 
            RowBox[{"#", "+", "2"}], "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Pink", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "80"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{
  3.85902835720302*^9, {3.8590350426533117`*^9, 3.8590350494552536`*^9}, {
   3.8590381449485025`*^9, 3.8590383265545087`*^9}, {3.8590386882248735`*^9, 
   3.859038724876281*^9}, 3.859039271854494*^9, {3.8590428720933137`*^9, 
   3.859043062803129*^9}, {3.8590431073558097`*^9, 3.8590431221868773`*^9}, {
   3.859043155043507*^9, 3.8590432457471333`*^9}, {3.859043297687575*^9, 
   3.859043297845509*^9}, 3.8590461959339886`*^9, {3.859058401861393*^9, 
   3.859058434266636*^9}, {3.859058712544323*^9, 3.8590587207416363`*^9}, 
   3.859063235038464*^9, {3.8590639675734444`*^9, 3.8590639855182824`*^9}, {
   3.8590640416680374`*^9, 3.8590640489982967`*^9}, {3.859068711255499*^9, 
   3.8590688956236567`*^9}, {3.859069483332488*^9, 3.8590695045961266`*^9}, {
   3.8590695620247235`*^9, 3.859069566011201*^9}},
 CellLabel->
  "In[845]:=",ExpressionUUID->"8c9acf37-f372-42a4-a9c9-258c5e175fc3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Climb Gradient Parameter (CGRP) = \"\>", "\[InvisibleSpace]", 
   "0.15109338007302708`", 
   "\[InvisibleSpace]", "\<\"\\nDrag Coefficient \
(\\!\\(\\*SubscriptBox[\\(C\\), \\(D\\)]\\)) = \"\>", "\[InvisibleSpace]", 
   "0.17245816772539546`", 
   "\[InvisibleSpace]", "\<\"\\nLift Coeeficient \
(\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Climb\\)]]\\)) = \
\"\>", "\[InvisibleSpace]", "1.6`", "\[InvisibleSpace]", "\<\"\\nL/D = \"\>", 
   "\[InvisibleSpace]", "9.277612194904416`"}],
  SequenceForm[
  "Climb Gradient Parameter (CGRP) = ", 0.15109338007302708`, 
   "\nDrag Coefficient (\!\(\*SubscriptBox[\(C\), \(D\)]\)) = ", 
   0.17245816772539546`, 
   "\nLift Coeeficient (\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Climb\
\)]]\)) = ", 1.6, "\nL/D = ", 9.277612194904416],
  Editable->False]], "Print",
 CellChangeTimes->{{3.859070089947919*^9, 3.8590701100771437`*^9}, {
   3.859095302370725*^9, 3.8590953066467257`*^9}, 3.8590955949950323`*^9, 
   3.859097613501606*^9, 3.8590976482817316`*^9},
 CellLabel->
  "During evaluation of \
In[845]:=",ExpressionUUID->"27addbfb-b719-4237-af82-ab51ca2e3f23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"W/P = \"\>", "\[InvisibleSpace]", 
   FractionBox["100.44119730900898`", 
    SqrtBox["\<\"W/S\"\>"]]}],
  SequenceForm["W/P = ", 100.44119730900898` "W/S"^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.859070089947919*^9, 3.8590701100771437`*^9}, {
   3.859095302370725*^9, 3.8590953066467257`*^9}, 3.8590955949950323`*^9, 
   3.859097613501606*^9, 3.8590976482877297`*^9},
 CellLabel->
  "During evaluation of \
In[845]:=",ExpressionUUID->"6d2c9678-fe10-404f-b720-bf099e10ca1b"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"(W/S\\!\\(\\*SubscriptBox[\\()\\), \\(TO\\)]\\) \\n (pfs)\"\
\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(max . \\\\ cont . \
\\)]\\)  \\n (lbs/hp)\"\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(max . \\\\ take - off\
\\)]\\)  \\n (lbs/hp)\"\>",
       HoldForm]},
     {"20", "22.459334492441304`", "19.09043431857511`"},
     {"30", "18.337969822990466`", "15.587274349541897`"},
     {"40", "15.881147720542172`", "13.498975562460846`"},
     {"50", "14.204530345539252`", "12.073850793708365`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \n (pfs)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(max . \\ cont . \)]\)  \n (lbs/hp)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(max . \\ take - off\)]\)  \n \
(lbs/hp)"}}]]]], "Output",
 CellChangeTimes->{{3.8590700899657955`*^9, 3.859070110098488*^9}, {
   3.8590953023917236`*^9, 3.859095306668724*^9}, 3.8590955950150294`*^9, 
   3.859097613521597*^9, 3.8590976482977376`*^9},
 CellLabel->
  "Out[854]//TableForm=",ExpressionUUID->"80e71e6d-a2ff-4f52-8153-\
4ee69e0e0af7"],

Cell[BoxData["\<\"Sketch the Plot Matching the Climb Gradient Requirements \
for FAR 23.65\"\>"], "Print",
 CellChangeTimes->{{3.859070089947919*^9, 3.8590701100771437`*^9}, {
   3.859095302370725*^9, 3.8590953066467257`*^9}, 3.8590955949950323`*^9, 
   3.859097613501606*^9, 3.859097648307728*^9},
 CellLabel->
  "During evaluation of \
In[845]:=",ExpressionUUID->"0cf93fc9-58f2-46cb-81d3-a6a7b2fcab66"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], 
         LineBox[CompressedData["
1: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
XefNJA==
          "]]}, Annotation[#, "Charting`Private`Tag$14329#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(CG_FAR\\\\ 23.65\\)]\\) = \\!\\(\
\\*FormBox[\\\"8\\\", TraditionalForm]\\)\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(AR\), \(CG_FAR\\ 23.65\)]\) = ``", 8], Editable -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0.33333333333333337`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0.33333333333333337`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FaceForm", "[", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                 TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`]|>, "RGBColorSwatchTemplate"]}], 
               "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8590700899657955`*^9, 3.859070110098488*^9}, {
   3.8590953023917236`*^9, 3.859095306668724*^9}, 3.8590955950150294`*^9, 
   3.859097613521597*^9, 3.859097648366728*^9},
 CellLabel->
  "Out[856]=",ExpressionUUID->"f95057bf-71b4-48f4-bdaa-05d218cc334d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FAR 23.67 (OEI)", "Subsubsection",
 CellChangeTimes->{{3.8590283683088503`*^9, 
  3.8590283764321804`*^9}},ExpressionUUID->"de9820d4-3c09-43be-ac89-\
8f9f92ec9f29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]5kft", " ", "=", " ", "0.002049"}], ";"}], 
   "                        ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "The", " ", "density", " ", "of", " ", "the", " ", "atmosphere", " ", 
      "at", " ", "5"}], ",", 
     RowBox[{"000", " ", "ft"}]}], "*)"}], "\n", " ", 
   RowBox[{
    RowBox[{"\[Sigma]67", " ", "=", " ", 
     RowBox[{"\[Rho]5kft", "/", "\[Rho]"}]}], ";"}], 
   "                           ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"The", " ", "density", " ", "ratio", " ", "at", " ", "5"}], ",", 
     RowBox[{"000", " ", "ft"}]}], "*)"}], "\n", " ", 
   RowBox[{
    RowBox[{"\[Eta]p67", " ", "=", " ", "0.8"}], ";"}], 
   "                              ", 
   RowBox[{"(*", 
    RowBox[{"Propeller", " ", "efficiency"}], "*)"}], "\n", " ", 
   RowBox[{
    RowBox[{"CLmaxClean", " ", "=", " ", "1.7"}], ";"}], 
   "                        ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "Lmax"], " ", "at", " ", "flaps"}], "-", 
     RowBox[{
     "up", " ", "configuration", " ", "as", " ", "the", " ", "most", " ", 
      "favorable", " ", "case"}]}], "*)"}], "\n", " ", 
   RowBox[{
    RowBox[{"Vso", "[", "WpS67_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", "1.68781"], 
     SqrtBox[
      FractionBox[
       RowBox[{"2", " ", "WpS67"}], 
       RowBox[{"\[Rho]5kft", "\[Times]", "CLmaxClean"}]]]}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"Converted", " ", "from", " ", "fps", " ", "to", " ", "kts"}], 
    "*)"}], "\n", " ", 
   RowBox[{
    RowBox[{"RC67", "[", "Vs_", "]"}], ":=", " ", 
    RowBox[{"0.027", "\[Times]", 
     SuperscriptBox["Vs", "2"]}]}], "\n", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"RCP67", "[", "RC67_", "]"}], ":=", 
     RowBox[{"RCP", "[", "RC67", "]"}]}], ";"}], "\n", " ", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "#", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.68781", "\[Times]", 
           RowBox[{"Vso", "[", "#", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Vso", "[", "#", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"RC67", "[", 
           RowBox[{"Vso", "[", "#", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"RCP67", "[", 
           RowBox[{"RC67", "[", 
            RowBox[{"Vso", "[", "#", "]"}], "]"}], "]"}], "}"}]}], "}"}], 
       "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"20", ",", "30", ",", "40", ",", "50"}], "}"}]}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\)(pfs)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), SubscriptBox[\(S\), \(o\)]]\)(fps)\>\
\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(V\), SubscriptBox[\(s\), \(o\)]]\)(kts)\>\
\"", ",", "\"\<RC(fpm)\>\"", ",", "\"\<RCP(hp/lbs)\>\""}], "}"}]}], "}"}]}]}],
     "]"}], "\n", " ", "\n", " ", 
   RowBox[{
    RowBox[{"CD067", " ", "=", " ", 
     RowBox[{"CD0", " ", "+", " ", 
      RowBox[{"\[CapitalDelta]CD0", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], ";"}], 
   "                                ", 
   RowBox[{"(*", " ", 
    RowBox[{"Parasite", " ", "drag", " ", "coefficient", " ", 
     SubscriptBox["C", "D0"], " ", "with", " ", "gears", " ", "up", " ", 
     "and", " ", "flaps", " ", "up", " ", 
     RowBox[{"(", 
      RowBox[{"most", " ", "favorable"}], ")"}]}], "*)"}], "\n", " ", 
   RowBox[{
    RowBox[{"CL32CDmax67", " ", "=", " ", 
     RowBox[{"CL32CDmax", "[", 
      RowBox[{"CD067", ",", "AR", ",", 
       RowBox[{"e", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], "               ", 
   RowBox[{"(*", 
    RowBox[{
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["C", "L"], 
         RowBox[{"3", "/", "2"}]], "/", 
        SubscriptBox["C", "D"]}], ")"}], "max"], " ", "for", " ", "FAR", " ", 
     "23.67"}], "*)"}], "\n", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Rate of Climb Parameter (RCP) = \>\"", ",", 
     RowBox[{"RCP67", "[", 
      RowBox[{"RC67", "[", 
       RowBox[{"Vso", "[", "\"\<W/S\>\"", "]"}], "]"}], "]"}], ",", 
     "\"\<\\nUpdated Parasite Drag Coefficient (\!\(\*SubscriptBox[\(C\), \
\(D0\)]\))= \>\"", ",", "CD067", ",", 
     "\"\<\\nFor AR = {8,10}, (\!\(\*SuperscriptBox[SubscriptBox[\(C\), \
\(L\)], \(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \
\(D\)]\)\!\(\*SubscriptBox[\()\), \(max\)]\) = \>\"", ",", "CL32CDmax67"}], 
    "]"}], "\n", " ", 
   RowBox[{
    RowBox[{"WpPRC67", "[", 
     RowBox[{"WpSRC67_", ",", "CL32CD_"}], "]"}], ":=", " ", 
    RowBox[{"WpPRC", "[", 
     RowBox[{
      RowBox[{"RCP67", "[", 
       RowBox[{"RC67", "[", 
        RowBox[{"Vso", "[", "WpSRC67", "]"}], "]"}], "]"}], ",", "WpSRC67", 
      ",", "CL32CD", ",", "\[Eta]p67", ",", "\[Sigma]67"}], "]"}]}], " ", 
   "\n", " ", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<W/P = \>\"", ",", 
     RowBox[{"WpPRC67", "[", 
      RowBox[{
      "\"\<W/S\>\"", ",", 
       "\"\<(\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \(3/2\)]\)/\!\(\
\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \(max\)]\)\>\""}], 
      "]"}]}], "]"}], "\n", " ", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"WpPRC67", "[", 
          RowBox[{"#", ",", 
           RowBox[{"CL32CDmax67", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"WpPRC67", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CL32CDmax67", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "/", "2"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.85", "/", "2"}], ")"}], 
          RowBox[{"WpPRC67", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CL32CDmax67", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "}"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"20", ",", "30", ",", "40", ",", "50"}], "}"}]}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \\n(pfs)\>\"", ",", 
          "\"\<(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\) \\n for one \
engine \\n at 5,000 ft (lbs/hp)\>\"", ",", 
          "\"\<(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\) \\n for two \
engine \\n at 5,000 ft (lbs/hp)\>\"", ",", 
          "\"\<(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\) \\n for two \
engine \\n sealevel (lbs/hp)\>\""}], "}"}]}], "}"}]}]}], "]"}], "\n", "\n", 
   " ", "\n", " ", 
   RowBox[{
   "Print", "[", 
    "\"\<Sketch the Plot Matching the Rate of Climb Requirements for FAR \
23.67 at various AR\>\"", "]"}], "\n", " ", 
   RowBox[{"RC67plot", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"WpS", ",", 
           RowBox[{
            RowBox[{"WpPRC67", "[", 
             RowBox[{"WpS", ",", 
              RowBox[{"CL32CDmax67", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "]"}], 
            RowBox[{"(", 
             RowBox[{"0.85", "/", "2"}], ")"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
         RowBox[{"GridLines", "->", "Automatic"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(AR\), \(FAR\\\ 23.67\)]\) = ``\>\"", 
             ",", 
             RowBox[{"AR", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ps", "[", 
             RowBox[{"[", 
              RowBox[{"#", "+", "1"}], "]"}], "]"}], ",", "Black"}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "80"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.8590302445760155`*^9, {3.8590307728672657`*^9, 3.8590311864071875`*^9}, {
   3.85903122487059*^9, 3.8590316590756693`*^9}, {3.8590317131072364`*^9, 
   3.859031745308666*^9}, {3.8590317929772854`*^9, 3.859031810007038*^9}, {
   3.8590319273510275`*^9, 3.8590319523480043`*^9}, {3.859031996281065*^9, 
   3.859032023293557*^9}, {3.859032124529707*^9, 3.859032328881548*^9}, {
   3.8590323765960474`*^9, 3.8590324153849115`*^9}, {3.8590324609170322`*^9, 
   3.8590324949526987`*^9}, {3.859032565585843*^9, 3.8590325668331394`*^9}, {
   3.85903265085124*^9, 3.859032696032486*^9}, {3.8590327432699823`*^9, 
   3.8590328233146496`*^9}, {3.859032854774001*^9, 3.859032947746521*^9}, {
   3.859033020872434*^9, 3.8590331703116984`*^9}, {3.8590336845357847`*^9, 
   3.859033690124936*^9}, {3.859033790734003*^9, 3.859033798676338*^9}, {
   3.859033884180545*^9, 3.8590338990327616`*^9}, 3.859035162398239*^9, {
   3.859035537771951*^9, 3.8590355624105825`*^9}, {3.859035676153715*^9, 
   3.8590357032965007`*^9}, {3.8590357985237966`*^9, 
   3.8590359287745943`*^9}, {3.859035959578856*^9, 3.8590361178120937`*^9}, {
   3.8590362051902494`*^9, 3.8590363856916065`*^9}, {3.8590364253847284`*^9, 
   3.8590365570540943`*^9}, {3.85903665806458*^9, 3.859036706183623*^9}, {
   3.8590367455225596`*^9, 3.8590367716190896`*^9}, {3.8590368105916395`*^9, 
   3.8590368212069745`*^9}, {3.8590368656462564`*^9, 3.859036868364362*^9}, 
   3.859036949401584*^9, {3.8590370580806274`*^9, 3.8590370990739746`*^9}, {
   3.859037145389114*^9, 3.8590371867229657`*^9}, {3.859037350583186*^9, 
   3.8590373660833364`*^9}, {3.8590377123839607`*^9, 3.859037712689079*^9}, {
   3.85903777695296*^9, 3.8590377782177825`*^9}, {3.8590406307958083`*^9, 
   3.8590406414924994`*^9}, {3.8590409469403276`*^9, 
   3.8590409475878415`*^9}, {3.859041496493103*^9, 3.859041505203781*^9}, {
   3.8590415503006897`*^9, 3.859041557172628*^9}, 3.859044852950123*^9, {
   3.859044885388184*^9, 3.8590450110869246`*^9}, 3.8590450636654887`*^9, {
   3.859045109212454*^9, 3.8590451135535374`*^9}, {3.859045228335663*^9, 
   3.8590452482282248`*^9}, {3.8590453747160997`*^9, 3.859045384449731*^9}, {
   3.8590454462947683`*^9, 3.859045447150959*^9}, {3.8590454991813593`*^9, 
   3.859045541735594*^9}, 3.8590461869736905`*^9, {3.859055006784788*^9, 
   3.8590550122992835`*^9}, 3.859059152096673*^9, {3.8590623701090093`*^9, 
   3.8590623706745415`*^9}, 3.859063240895817*^9, {3.8590639323383245`*^9, 
   3.8590639512383223`*^9}, {3.8590659774220133`*^9, 3.859066021007448*^9}, {
   3.859066085620652*^9, 3.859066085758229*^9}, {3.859066116347002*^9, 
   3.8590661250424433`*^9}, {3.859069461276001*^9, 3.85906946777826*^9}},
 CellLabel->
  "In[857]:=",ExpressionUUID->"cc657d1a-431b-4273-92dc-4487db5fce6e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"(W/S\\!\\(\\*SubscriptBox[\\()\\), \\(TO\\)]\\)(pfs)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(V\\), SubscriptBox[\\(S\\), \
\\(o\\)]]\\)(fps)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(V\\), SubscriptBox[\\(s\\), \
\\(o\\)]]\\)(kts)\"\>",
       HoldForm], 
      TagBox["\<\"RC(fpm)\"\>",
       HoldForm], 
      TagBox["\<\"RCP(hp/lbs)\"\>",
       HoldForm]},
     {
      TagBox[GridBox[{
         {"20"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"107.1604566860484`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"63.490829350488745`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"108.83930611354783`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"0.0032981607913196314`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox[GridBox[{
         {"30"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"131.24421974221832`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"77.76006762740967`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"163.2589591703218`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"0.004947241186979448`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox[GridBox[{
         {"40"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"151.54777119550428`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"89.78959195377695`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"217.67861222709567`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"0.006596321582639263`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox[GridBox[{
         {"50"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"169.43555911586608`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"100.38781564030671`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"272.09826528386964`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {"0.00824540197829908`"}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\)(pfs)", 
       "\!\(\*SubscriptBox[\(V\), SubscriptBox[\(S\), \(o\)]]\)(fps)", 
       "\!\(\*SubscriptBox[\(V\), SubscriptBox[\(s\), \(o\)]]\)(kts)", 
       "RC(fpm)", "RCP(hp/lbs)"}}]]]], "Output",
 CellChangeTimes->{{3.8590700900843506`*^9, 3.8590701102323112`*^9}, {
   3.859095302518723*^9, 3.8590953067867236`*^9}, 3.8590955951250324`*^9, 
   3.8590976136555943`*^9, 3.859097648412735*^9},
 CellLabel->
  "Out[864]//TableForm=",ExpressionUUID->"6101ed26-d6fc-4c08-a84d-\
eefd261b7aee"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rate of Climb Parameter (RCP) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.0001649080395659816`", " ", "\<\"W/S\"\>"}], 
   "\[InvisibleSpace]", "\<\"\\nUpdated Parasite Drag Coefficient \
(\\!\\(\\*SubscriptBox[\\(C\\), \\(D0\\)]\\))= \"\>", "\[InvisibleSpace]", 
   "0.035134213251879154`", 
   "\[InvisibleSpace]", "\<\"\\nFor AR = {8,10}, \
(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(C\\), \\(L\\)], \\(3/2\\)]\\)/\\!\\(\
\\*SubscriptBox[\\(C\\), \\(D\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(max\\)]\
\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"12.500422922203663`", ",", "14.777712609581341`"}], "}"}]}],
  SequenceForm[
  "Rate of Climb Parameter (RCP) = ", 0.0001649080395659816 "W/S", 
   "\nUpdated Parasite Drag Coefficient (\!\(\*SubscriptBox[\(C\), \
\(D0\)]\))= ", 0.035134213251879154`, 
   "\nFor AR = {8,10}, (\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\) = ", {12.500422922203663`, 14.777712609581341`}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907009009494*^9, 3.8590701102403107`*^9}, {
   3.859095302529729*^9, 3.8590953067947283`*^9}, 3.8590955951330357`*^9, 
   3.8590976136645994`*^9, 3.8590976484227324`*^9},
 CellLabel->
  "During evaluation of \
In[857]:=",ExpressionUUID->"978ea3ac-23fc-42bc-901e-58c06ca180a2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"W/P = \"\>", "\[InvisibleSpace]", 
   FractionBox["0.8`", 
    RowBox[{
     FractionBox[
      RowBox[{"0.05669977623887567`", " ", 
       SqrtBox["\<\"W/S\"\>"]}], \
"\<\"(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(C\\), \\(L\\)], \
\\(3/2\\)]\\)/\\!\\(\\*SubscriptBox[\\(C\\), \
\\(D\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(max\\)]\\)\"\>"], "+", 
     RowBox[{"0.0001649080395659816`", " ", "\<\"W/S\"\>"}]}]]}],
  SequenceForm[
  "W/P = ", 0.8/(
   0.05669977623887567 
    "(\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\)"^(-1) "W/S"^Rational[1, 2] + 0.0001649080395659816 "W/S")],
  Editable->False]], "Print",
 CellChangeTimes->{{3.85907009009494*^9, 3.8590701102403107`*^9}, {
   3.859095302529729*^9, 3.8590953067947283`*^9}, 3.8590955951330357`*^9, 
   3.8590976136645994`*^9, 3.8590976484287357`*^9},
 CellLabel->
  "During evaluation of \
In[857]:=",ExpressionUUID->"dcc6eb0a-2a54-4f1c-981f-00e13f0f3a7c"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"(W/S\\!\\(\\*SubscriptBox[\\()\\), \\(TO\\)]\\) \
\\n(pfs)\"\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(take - off\\)]\\) \\n \
for one engine \\n at 5,000 ft (lbs/hp)\"\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(take - off\\)]\\) \\n \
for two engine \\n at 5,000 ft (lbs/hp)\"\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(take - off\\)]\\) \\n \
for two engine \\n sealevel (lbs/hp)\"\>",
       HoldForm]},
     {"20", "33.92273647648798`", "16.96136823824399`", "14.41716300250739`"},
     {"30", "26.85374976818991`", "13.426874884094955`", 
      "11.412843651480712`"},
     {"40", "22.673538561615207`", "11.336769280807603`", 
      "9.636253888686463`"},
     {"50", "19.84198151553561`", "9.920990757767806`", "8.432842144102635`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \n(pfs)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\) \n for one engine \n \
at 5,000 ft (lbs/hp)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\) \n for two engine \n \
at 5,000 ft (lbs/hp)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\) \n for two engine \n \
sealevel (lbs/hp)"}}]]]], "Output",
 CellChangeTimes->{{3.8590700900843506`*^9, 3.8590701102323112`*^9}, {
   3.859095302518723*^9, 3.8590953067867236`*^9}, 3.8590955951250324`*^9, 
   3.8590976136555943`*^9, 3.8590976484397335`*^9},
 CellLabel->
  "Out[870]//TableForm=",ExpressionUUID->"d9c2a2ee-7785-4107-ae5e-\
b6f9cfa699a0"],

Cell[BoxData["\<\"Sketch the Plot Matching the Rate of Climb Requirements for \
FAR 23.67 at various AR\"\>"], "Print",
 CellChangeTimes->{{3.85907009009494*^9, 3.8590701102403107`*^9}, {
   3.859095302529729*^9, 3.8590953067947283`*^9}, 3.8590955951330357`*^9, 
   3.8590976136645994`*^9, 3.8590976484487324`*^9},
 CellLabel->
  "During evaluation of \
In[857]:=",ExpressionUUID->"b2c18cba-15ec-4302-b1cf-7d44d60f9266"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Dashing[{Small, Small}], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1:eJwtlAk01V33xw0ZKmRKriHz0EXhmqff13yN4RpCxSUhIhpF9KqMZSxKFEVv
DyWVPEiIeqJMiTyIBsmQDF1Tkf7933XPWmedtdc+Z+/v53vW2jJ+4S4BbCws
LO1/9v+ffisirYkkV6KG9Wt464NCGNbufjwhdYUoz2bZ5PXkFDP+i6B67R0f
+HkEd1LP2c/0PSDuhXbWh5IimPkaInXPi/zorIN4OU4hfw5sICarv7WbHjjA
vN9ExO1NEyrbHIR52bkzUyvPiarAspvsVvuZ71uJ7i7Tn9SufYh3bvn+xbyN
oMeEP6rN82fW6yS2cZe8fHfRD9yNnRWzlq8J0W6fj9kP6cz63cTKVNGS8Iwv
nDwMx78F9xA/PMsjakx9mf16idGkjdU5jj64PH1L6uuFPmJNQCZ/m/5eZv9+
Ylwwx1vNZA+Gzwl6jN8fIGhzjbz3PHcz9bwjyKF1ZmeSvKEoGZs22jtEDI4n
iom0eDH1vScs6f+poop4QWdg3m8u5gPhoh/V6xHhydT7kbDTSX7X0reLqfcT
Udubn7j21AOxEb5504UjRO4Tj9wX5h5M/Z+J0w1ufFNt7kz9o8TlT1ISBd/d
8A932+uvz74Q2Xebq7jT3Jg8Y8SEqOahxO1uTJ4JwqS4wl7ulCt4CnXXT4xP
EJeieWPSyK5MvknixqOhuZJBGpNvivAVyfzrtTUNrro38YXnG+EteeV2BBuN
yfuN4LqlNPamwYXJO0PsKD3+r6qZCxwDueoiRGeJk0aev95wujD5Zwlh1pWI
gnZnJv8c8S17mkOM7szk/05siXfO7ch3wqW1SEaYEYM4mL3OLCnciekHg/ii
8rj6urkT0495YqhHOoH6fifTjwWC7XV2xctSRwxdGiaH+i4SGSPptq/8HJn+
LBJ8uweUyyQcmf4sEZcXLtlWX3Jg+vODcMx5Fy101R5pSZFHhs7/IDz71Ty2
edvjg3uS2usfP4ij3eVRbyTskcB4eL36zU/ibMDZ9cXFduhW3Xg2MXGVGKFR
VG88s4XCirRx9Pwq4TWTzqhPt8WJVp3FMPovIkNBMIB9ty227vcLcjdcIw6a
lx3oX7LBges19gozvwnnTffTKwxtMFw1Fs+znQVNLveUfvHZgPtapE/CPhbs
4wop3jZChXdokujJ1yyY98js5kijgnV9ZQq9jBXJGtRrwt+s4WC2MVzdhx33
Z25qlL+ywrFtOXall9ghyMejpV5qhUJ+GWX5Nna0UeaFjJOt8H1Y5+MW/XWY
ceJvGKda4XK0H+23IAc483a6KXdY4nNljW7HP5yo9cvrLftmAb58C2HqL068
deW5Sn9jAd0znbNPKVwwXlzyOVJjgRTn0b8eFXIh5sOjuNsJFlCf5pcoOMmN
LSyWvUIKFohRCmIJ3b4BBiUjkaGHzFGd0nLfhr4B8Ihbf2q3ORa+KfsrXdyA
p94cpBdUc4RVTjz/9GMD5hVO+bPLmsPXNCTV8/lGXEwYCGbpM4OFd5iI9W5e
mOwLyjWxNcPp+o4X8um8sMvyOnRE3wxPZHZEsTXxomco9Vyvshl0xmcGnyjx
wcialCzCbQbloxFFWgw+iBn9HjjdYooEawMRAUt+fHy8rHnAyRTyUZPTcXv5
0SUSvInTzBRNpXkvpo/zo+AGT1AzxRS/eVdOtJXywzz06IXCLaY40fN4MJFf
ACGT9np9H4ADdOOitUEBPHfXjOw+AThGQ3UqUgiVl8pqr58g8GUowGEwVQhf
FY+95fYnEIvUsJfFQhAVOWxy1YFAOcfbittvheDqnDWpL0dgU0aIdoCBMJJS
4hhOXSboKs4xGWbdjMDwxbOxGiZw6Zhy6soQgW96vNYqjzEm1QUjG/4SQZ1Y
j/rfK0aIz9bNLm8SgegGlQdpk0Z4sCu+9/y8CPIW3XizWowgNLLFy2bXFlh/
tBn7eM4IPUtm/k1SophLO14byGEEN5krRyvLSVjR8c+3FTFESx71amMrCZPP
twe95zSEgfByY9tnEqQPssWeXzKANJcHz6iYGIKCD6Vu7zfA5JTwzc2JYqja
lX4itcAAsdUZXcd8xNH5KqviKNkAt3cmqejzS+KzdFzMVZo+xFp1nS1VJGHM
b0F0WOnjgtnYMWcrSWQOqg4IGugjUtuqKThGEl4RjvNd0vowFl/nmTcuia7C
854SM3ro/hKXsNK4FZGX+6M70vSwVv94dlhPGoEN821l/bqoG2hZPmUpjV1D
JQ9TO3VxcrGXRdJFGmKV6SHHn+tiUW2W3ztEGlHavxgR93UxnS+v0VcgDYdG
waXZZF28P3khopNNBj474tjXGeuiUcfne0ObDKJEc7YySnUQ6xL6c2+/DFoL
onYo3NCBUVgU29ron3zs/HXfKzqoLskWNPotA+S07mEk6qBCuEWzWkMWrLTA
pIQAHRR9Vz9ckSMLO8XbDDdZHcSXs80X+sqBYDTbUW5o426va6xjmBxWY40i
Oq5o49/VW9yr0XJIs1c6FZmpjR12dpIeuXI4o8W5ofe0Nt6NZVvxdsiBlc5j
z+arDV0ZhStRhvIIGQ5PnpXSxlS2tYmLiAIu6MRfelyiBfeo80nsbYqg2Ou7
B/9DwZoeSTeiXxFTkcuUxQYKbi2XjA5/UQRXlmZrUg0FS8cbzGpZlfDI7MZy
/R0KLh/7vnpIVwllV2bOhmVTMHB4V8TwDSXktZHd3tAp2Bsm71UTpQw1MW6+
ODYKAvzrVMKVyHjFf7ho1FkTgvGxnQsUMiJHv79lddBEQyEOx4CM0RqOizJU
TZCGn9Ume5Ih+oL/YoiJJtp3tdsUp5JRtzlKd5uKJrQdhwP7Z8gQDquKs+bQ
BIc+S7F5tQo6UtzWLzzWQAmfhYSojRr2Cmg+d9TUwFVbrk51D3XQwH64h6yO
mLDLOvNTGhAaFvBOubcdP4tiFOpOUpCSb2Rqb6kGaXO2Pa5kbcjPl0e9nFTB
8DOK4cYnOnioJlpq+YoMi0pOv6wIPTQ23Z398nAbqA9V+bduNYB/84IWzxNl
fM5a29dy1xANOxVlcr8qQflDBJu5jzEaBvd7vBVXwjq+TKt3DBPUVl3d1xCs
iGc9tydk3QBiifNU698KcCt9wPBUNUX9aZlD+/78m+YhQWfpBVM4cynudE+R
x8hUU3dHhxmEOKMC7qzK4YNn63958syhM50ku3xaDnccoxrt6RZYztDonOCT
g/3PqF9H9C1RocJRF50nC72crguq7FbQMxII4tWSxfL4cbO2ISsQNvufaryS
QWJzi0FYpTXK/Onk6WAZ+KWFJ1yPoWLmXrpFv5AMBPgDF6vdbHCBcv673GNp
8MZX1tClbeFsOPjUM1QafdFljTxjtpCTCL2fKyuNo6qMr9fr7VBfmJLqfkcK
vu0ZB5oS7SF/jn6OU14KUgpxvO10B1ybMd5flLMV5IPN7IFqjrCmD/5WE92K
dcb3jdkXHHF64GzZliJJPGieuZrYvhO5pPWT3AqScJdsutVu5wSWM3ldjY8k
YFxZmWlX44TK5uCTTaYS2Lgp5tpLeWfkeRDJRI84ftOnXQWSnfFhzea/TRHi
2MOfLNm24IynjF9f6zaI41NVR7qjtws+l95pHL0rBkeZCbnuehf8I5Rf0+cm
BvkxlZetZBq8zrE4RP74MxdLSGLJ6TT4iG/P5LhFwnmT+wu2mTQUjYku5RST
sNRHfc2TTcPmcUa68k0SOjacSMrIoWGjm72XfSEJMYfeLuYW0FDgYeGUk0fC
v4bZb26V0TBYTP2bkk5CRjfPhWcvaMjuFZe9eIKE1ZDioIRWGtrq5jpVjpPw
Z4ZbUF/RYKDicK/5KAkmeiErrzpoOKoVxDYfScJUQWvwm14asvqXl90PkkAN
TrD6NEKD1PNhSUU/EirZtsoWj9IgPv1+uNGXBKn8R78CxmiITqrq8vYhYbHj
c+XEJA2+Z6qtsnaTUKxlLjc390dP6PuTrB4k8HcMrD1g0NA64v20wI2E6MDI
gSMLNMxzeegZuJLgkleUubxMwx2ta38fdiahnqJ/sPYnDbsqexr4nUjY1t5F
jVmlQa1z7/JdRxIu7g+SN1mjYVOrBt3OgQSW/y1XqE6Y/Ry3I+H/AOgGyBE=

           "]]}, 
         Annotation[#, "Charting`Private`Tag$14417#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$14461#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(FAR\\\\ 23.67\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(FAR\\ 23.67\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(FAR\\\\ 23.67\\)]\\) = \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(FAR\\ 23.67\)]\) = ``", 10], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8590700900843506`*^9, 3.8590701102323112`*^9}, {
   3.859095302518723*^9, 3.8590953067867236`*^9}, 3.8590955951250324`*^9, 
   3.8590976136555943`*^9, 3.8590976485397286`*^9},
 CellLabel->
  "Out[872]=",ExpressionUUID->"5362d527-b2c9-4803-a1e2-bf1314200d58"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FAR 23.77", "Subsubsection",
 CellChangeTimes->{{3.8590283882429714`*^9, 
  3.859028391976761*^9}},ExpressionUUID->"38ad1127-a898-4088-ab5b-\
c46b3641cfac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CGR77", " ", "=", " ", 
    RowBox[{"1", "/", "30"}]}], ";"}], "                        ", 
  RowBox[{"(*", 
   RowBox[{"Climb", " ", "gradient", " ", "in", " ", "rad"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]p77", " ", "=", " ", "0.8"}], ";"}], 
  "                          ", 
  RowBox[{"(*", 
   RowBox[{"Assumed", " ", "propeller", " ", "efficiency"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]77", " ", "=", " ", "1."}], ";"}], 
  "                            ", 
  RowBox[{"(*", 
   RowBox[{
   "Density", " ", "ratio", " ", "according", " ", "to", " ", "FAR23", 
    ".77"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CLmaxLfd", " ", "=", " ", "2."}], ";"}], 
  "                       ", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["C", "Lmax"], "  ", "with", " ", "landing", " ", "flaps", 
    " ", "down"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CLmaxCGR77", " ", "=", " ", 
    RowBox[{"CLmaxLfd", " ", "-", " ", "\[CapitalDelta]CL"}]}], ";"}], 
  "         ", 
  RowBox[{"(*", 
   SubscriptBox["C", 
    SubscriptBox["L", "Climb"]], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CD77", "=", 
   RowBox[{"CD", "[", 
    RowBox[{"CD0", ",", "CLmaxCGR77", ",", 
     RowBox[{"AR", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "3", ",", "4"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"LpD77", " ", "=", " ", 
   RowBox[{"CLmaxCGR77", "/", "CD77"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CGRP77", " ", "=", " ", 
   RowBox[{"CGRP", "[", 
    RowBox[{"CGR77", ",", "LpD77", ",", "CLmaxCGR77"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Climb Gradient Parameter (CGRP) = \>\"", ",", 
   RowBox[{"CGRP77", "//", "N"}], ",", 
   "\"\<\\nDrag Coefficient (\!\(\*SubscriptBox[\(C\), \(D\)]\)) = \>\"", ",",
    "CD77", ",", 
   "\"\<\\nLift Coeeficient (\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \
\(Climb\)]]\)) = \>\"", ",", "CLmaxCGR77", ",", "\"\<\\nL/D = \>\"", ",", 
   "LpD77"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"WpPCGR77", "[", "WpS77_", "]"}], ":=", " ", 
  RowBox[{"WpPCGR", "[", 
   RowBox[{"CGRP77", ",", "WpS77", ",", "\[Eta]p77", ",", "\[Sigma]77"}], 
   "]"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<W/P = \>\"", ",", 
   RowBox[{"WpPCGR77", "[", "\"\<W/S\>\"", "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"WpPCGR77", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "40", ",", "50"}], "}"}]}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \\n (pfs)\>\"", ",", 
         "\"\<(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\)  \\n (lbs/hp)\>\
\""}], "}"}]}], "}"}]}]}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the Plot Matching the Climb Gradient Requirements for FAR 23.77\
\>\"", "]"}], "\n", 
 RowBox[{"CGR77plot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WpS", ",", 
         RowBox[{"WpPCGR77", "[", "WpS", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(AR\), \(FAR\\\ 23.77\)]\) = ``\>\"", ",", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", 
            RowBox[{"#", "+", "2"}], "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Orange", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "80"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.8590385041730328`*^9, 3.8590385105548267`*^9}, {
   3.859038559304657*^9, 3.859038580531149*^9}, {3.8590386377443438`*^9, 
   3.859038666754591*^9}, {3.8590387689143257`*^9, 3.859038772864319*^9}, {
   3.859039231764748*^9, 3.859039236265869*^9}, {3.8590392810178223`*^9, 
   3.8590393066768904`*^9}, {3.859039354880083*^9, 3.859039359881396*^9}, {
   3.8590393944553404`*^9, 3.859039426584163*^9}, {3.85903949864727*^9, 
   3.8590396195649323`*^9}, {3.8590401774057503`*^9, 
   3.8590401933033752`*^9}, {3.85904027452007*^9, 3.8590403329855957`*^9}, {
   3.8590406007751107`*^9, 3.8590406033462152`*^9}, {3.859040667777837*^9, 
   3.8590407556322556`*^9}, {3.8590407933751125`*^9, 3.859040893132802*^9}, {
   3.85904096648094*^9, 3.8590409823457766`*^9}, {3.859041050286006*^9, 
   3.859041289871683*^9}, {3.859041350811562*^9, 3.859041440201274*^9}, {
   3.859041578688471*^9, 3.8590417977692037`*^9}, 3.8590418523452444`*^9, {
   3.859041888672849*^9, 3.8590419285070114`*^9}, {3.8590420915874963`*^9, 
   3.85904211525334*^9}, {3.859042257134011*^9, 3.859042276709603*^9}, {
   3.859042310950247*^9, 3.859042381788555*^9}, {3.8590424270294743`*^9, 
   3.8590424591248665`*^9}, {3.859042495892483*^9, 3.8590427183931165`*^9}, {
   3.8590435518031387`*^9, 3.8590435788509455`*^9}, {3.8590460306204276`*^9, 
   3.8590460918777275`*^9}, {3.859053600041023*^9, 3.859053709279875*^9}, {
   3.859053841861902*^9, 3.8590538450161552`*^9}, {3.8590538751214237`*^9, 
   3.8590538775654697`*^9}, {3.859054132422018*^9, 3.859054201376128*^9}, {
   3.8590543047332926`*^9, 3.859054313736054*^9}, 3.859063247462641*^9, {
   3.859063906358605*^9, 3.859063924418275*^9}, {3.859068924946433*^9, 
   3.859068947126238*^9}, {3.8590694332143097`*^9, 3.8590694517381363`*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"bbaf702d-42b2-42b7-811c-444cf390cd9a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Climb Gradient Parameter (CGRP) = \"\>", "\[InvisibleSpace]", 
   "0.14671058105151052`", 
   "\[InvisibleSpace]", "\<\"\\nDrag Coefficient \
(\\!\\(\\*SubscriptBox[\\(C\\), \\(D\\)]\\)) = \"\>", "\[InvisibleSpace]", 
   "0.29429921882964377`", 
   "\[InvisibleSpace]", "\<\"\\nLift Coeeficient \
(\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Climb\\)]]\\)) = \
\"\>", "\[InvisibleSpace]", "1.8`", "\[InvisibleSpace]", "\<\"\\nL/D = \"\>", 
   "\[InvisibleSpace]", "6.116224185569235`"}],
  SequenceForm[
  "Climb Gradient Parameter (CGRP) = ", 0.14671058105151052`, 
   "\nDrag Coefficient (\!\(\*SubscriptBox[\(C\), \(D\)]\)) = ", 
   0.29429921882964377`, 
   "\nLift Coeeficient (\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Climb\
\)]]\)) = ", 1.8, "\nL/D = ", 6.116224185569235],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700902966604`*^9, 3.8590701104382815`*^9}, {
   3.859095302702725*^9, 3.8590953069747353`*^9}, 3.8590955952950354`*^9, 
   3.8590976138326025`*^9, 3.859097648596734*^9},
 CellLabel->
  "During evaluation of \
In[873]:=",ExpressionUUID->"2a2f7a10-f202-4a7b-8d08-ad3225b113e7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"W/P = \"\>", "\[InvisibleSpace]", 
   FractionBox["103.44175512924771`", 
    SqrtBox["\<\"W/S\"\>"]]}],
  SequenceForm["W/P = ", 103.44175512924771` "W/S"^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700902966604`*^9, 3.8590701104382815`*^9}, {
   3.859095302702725*^9, 3.8590953069747353`*^9}, 3.8590955952950354`*^9, 
   3.8590976138326025`*^9, 3.85909764860373*^9},
 CellLabel->
  "During evaluation of \
In[873]:=",ExpressionUUID->"b56f5ef9-c5f6-4c56-a0f9-e126cc2da82a"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"(W/S\\!\\(\\*SubscriptBox[\\()\\), \\(TO\\)]\\) \\n (pfs)\"\
\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(take - off\\)]\\)  \
\\n (lbs/hp)\"\>",
       HoldForm]},
     {"20", "23.13027961808854`"},
     {"30", "18.88579422407156`"},
     {"40", "16.35557756869139`"},
     {"50", "14.628873301945875`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \n (pfs)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\)  \n (lbs/hp)"}}]]]], \
"Output",
 CellChangeTimes->{{3.8590700903204203`*^9, 3.8590701104611716`*^9}, {
   3.8590953027227216`*^9, 3.859095306995721*^9}, 3.859095595315031*^9, 
   3.859097613851595*^9, 3.8590976486137342`*^9},
 CellLabel->
  "Out[884]//TableForm=",ExpressionUUID->"07505619-2da6-4251-813f-\
aa68cd32b180"],

Cell[BoxData["\<\"Sketch the Plot Matching the Climb Gradient Requirements \
for FAR 23.77\"\>"], "Print",
 CellChangeTimes->{{3.8590700902966604`*^9, 3.8590701104382815`*^9}, {
   3.859095302702725*^9, 3.8590953069747353`*^9}, 3.8590955952950354`*^9, 
   3.8590976138326025`*^9, 3.85909764862273*^9},
 CellLabel->
  "During evaluation of \
In[873]:=",ExpressionUUID->"df2eccec-898c-46b9-8804-31e1c966a2d9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0]], 
         LineBox[CompressedData["
1:eJwtlgk0VWsDhkWknFMHpbgZjmlzyJDMw34d83E6OMcQyVRCiohKSV0VpbhU
EkncpJFf0k0TrnKjDHGpELeBDFHmUuK//7/2Xmuvvb71ffv73ud5115rM4Mi
+cHCQkJCjf/e/3sG/ZCpT5Z1J4Wvp94tlLoC8/u+DwYVs8nb2brzyy4docbX
yIoBzkiA7gHcPHGU++VVGdmdVtXv07aHmr9HrY/BswEDVm9IFWn44NUp19ho
an0NuWGwxCynYycmlccOD/+oJS9li/lZGkRS79dT++9Aolvd+EebBjJ7D+m+
4kg4tV8zeTHI/2aO3DaIVzeXjtq1kHvHP0zkfgil9m+l8oTA1ct8YCSsjYwq
q5QR79tKnddOqtPC2tqWbcW5z0WKn1JfkaKx7Ga+azB1fgeVfwt6jkp5Ddzq
JC9l5jfyRbdQed6QauffOH6K2Qx1+YS0vvZu0pbbuVxqNIjK9w/FGwSjzsmg
sfi3ZPNZlm+kSBCV9x359Ny8Vlh2IJX3PeUjAAlRATmf8z+Q0/tOrt2VGEDl
7yWFXlrTAvQCqPx9lC9//CXe0PLpyUcy6fVXKf5VP4qnn+TaNcuFqvpRPIOU
z02g5RsvHhwYJFdPQJb3yJfiGyJX92c5r3f1pfiGKd8b4W58CR9pI+Rw4eJb
lqobKd4RMsDpEN2wzofi/UL14QNeyKKHUatGyZEAZcXzdd4U/yg5IHG5MTXO
m+Ifo/raQPGPU315IXMueiLCYoL0ky9Uqc/0onxMkGeUIr3kvL0oH5NUn56U
jymqT090Z/awtgdMkxE/7d5I9nhQfqbJm72lddnFHpSfr1TfHpSfGapvd6Qd
i47pPjlDlhmvz3272x1vPY+taZmZIdfH6/rVObsjaeL2xYq/v5N/HO6sKf0m
QKu2xJHk5FnSxWVAqmmTAGo/lCz3T86S8jpNQ+amAuytN5qOCPxJLnS+MhK7
QgCFrUGhnuZzpLV2XZr+Cz62XbzHVfsyT77R7RFi8Pjo+aM/kaYjBPvSbFU1
XT7E86L9k7YIoc0ytL+NwcfG7cdW7WsRwumQloLRdjcsWFyeEnhjAVLWRMzn
bHXDerZEpJ6/CD5OSrr457lit+ZZ5+uZItjWK2e+NtkV+QymhmqDCFb/SkoF
73TFeI/Ru5WmC1Fe+8D/rY0rzu0PEsxLieJuwHONV90u6C2/Z9z0lxgUOy23
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
C3yYBP4LUlm9fQ==
          "]]}, Annotation[#, "Charting`Private`Tag$14533#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(FAR\\\\ 23.77\\)]\\) = \
\\!\\(\\*FormBox[\\\"8\\\", TraditionalForm]\\)\"", 
        StringForm["\!\(\*SubscriptBox[\(AR\), \(FAR\\ 23.77\)]\) = ``", 8], 
        Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]], {}}}, AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FaceForm", "[", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                 TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0]|>, 
                  "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8590700903204203`*^9, 3.8590701104611716`*^9}, {
   3.8590953027227216`*^9, 3.859095306995721*^9}, 3.859095595315031*^9, 
   3.859097613851595*^9, 3.859097648678728*^9},
 CellLabel->
  "Out[886]=",ExpressionUUID->"b234c852-4d4b-4f60-874f-2df520425d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sizing for Time-To-Climb and Ceiling Requirements", "Subsection",
 CellChangeTimes->{{3.858278741947746*^9, 3.8582787462378387`*^9}, {
   3.858992306468376*^9, 3.858992306679411*^9}, 3.8589924404769244`*^9, {
   3.858992474970854*^9, 3.858992514962334*^9}, {3.8590456350536723`*^9, 
   3.859045638761833*^9}},ExpressionUUID->"3dbf6138-e67b-4124-8ed3-\
a43fea89df26"],

Cell[CellGroupData[{

Cell["Time-to-Climb", "Subsubsection",
 CellChangeTimes->{{3.858998599787813*^9, 3.858998643994187*^9}, {
  3.858998737045995*^9, 
  3.8589987462821846`*^9}},ExpressionUUID->"6551fe18-c99e-4ee6-9c6d-\
e9359eb429d4"],

Cell["For shallow flight path angles: \[Gamma] < 15\[Degree]", "Text",
 CellChangeTimes->{{3.859049435600402*^9, 
  3.85904947523752*^9}},ExpressionUUID->"47504c8a-a3f9-4fd1-a9e2-\
1c3196f03ae4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tcl", " ", "=", " ", 
    RowBox[{"MS", "[", 
     RowBox[{"11", ",", "1"}], "]"}]}], ";"}], 
  "                                                     ", 
  RowBox[{"(*", 
   RowBox[{"time", "-", "to", "-", 
    RowBox[{"climb", " ", "in", " ", "minutes"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"MS", "[", 
    RowBox[{"9", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Eta]pTC", " ", "=", " ", "0.8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]TC", " ", "=", " ", "1."}], ";"}], 
  "                                                            ", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "Density", " ", "ratio", " ", "at", " ", "the", " ", 
    "attitude", " ", "for", " ", "the", " ", "design", " ", "range"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"habs", " ", "=", " ", "25000."}], ";"}], 
  "                                                       ", 
  RowBox[{"(*", 
   RowBox[{
   "Absolute", " ", "Ceiling", " ", "from", " ", "Table", " ", "3.7"}], 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RC0", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["habs", "tcl"]}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       FractionBox["h", "habs"]}], "]"}]}]}], ";"}], 
  "                                             ", 
  RowBox[{"(*", 
   RowBox[{
   "Rate", " ", "of", " ", "climb", " ", "at", " ", "sealevel", " ", "in", 
    " ", "fpm"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RCh", " ", "=", " ", 
    RowBox[{"RC0", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["h", "habs"]}], ")"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RCPTC", " ", "=", " ", 
    RowBox[{"RCP", "[", "RCh", "]"}]}], ";"}], 
  "                                                     ", 
  RowBox[{"(*", 
   RowBox[{"Rate", " ", "of", " ", "climb", " ", "parameter"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CD0TC", " ", "=", " ", 
    RowBox[{"CD0", " ", "+", " ", 
     RowBox[{"\[CapitalDelta]CD0", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], 
  "                                                ", 
  RowBox[{"(*", 
   RowBox[{"Parasite", " ", "drag", " ", "coefficient", " ", 
    SubscriptBox["C", "D0"], " ", "in", " ", "clean", " ", "configuration"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CL32CDmaxTC", " ", "=", " ", 
    RowBox[{"CL32CDmax", "[", 
     RowBox[{"CD0TC", ",", "AR", ",", 
      RowBox[{"e", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
  "                               ", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["C", "L"], 
        RowBox[{"3", "/", "2"}]], "/", 
       SubscriptBox["C", "D"]}], ")"}], "max"], " ", "for", " ", "FAR", " ", 
    "23.77"}], "*)"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Rate of Climb at sealevel (\!\(\*SubscriptBox[\(RC\), \(0\)]\)) = \
\>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"RC0", ",", "\"\<fpm\>\""}], "]"}], ",", 
   "\"\<\\nRate of Climb at 10,000 ft (\!\(\*SubscriptBox[\(RC\), \(h\)]\)) = \
\>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"RCh", ",", "\"\<fpm\>\""}], "]"}], ",", 
   "\"\<\\nRate of Climb Parameter (RCP) = \>\"", ",", "RCPTC", ",", 
   "\"\<\\nParasite Drag Coeeficient (\!\(\*SubscriptBox[\(C\), SubscriptBox[\
\(D\), \(0\)]]\)) = \>\"", ",", "CD0TC", ",", 
   "\"\<\\nFor AR = {8,10}, (\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\) = \>\"", ",", "CL32CDmaxTC"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WpPRCTC", "[", 
    RowBox[{"WpSRCTC_", ",", "CL32CD_"}], "]"}], ":=", " ", 
   RowBox[{"WpPRC", "[", 
    RowBox[{
    "RCPTC", ",", "WpSRCTC", ",", "CL32CD", ",", "\[Eta]pTC", ",", 
     "\[Sigma]TC"}], "]"}]}], " "}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<W/P = \>\"", ",", 
   RowBox[{"WpPRCTC", "[", 
    RowBox[{
    "\"\<W/S\>\"", ",", 
     "\"\<(\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\)\>\""}], "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"WpPRCTC", "[", 
         RowBox[{"#", ",", 
          RowBox[{"CL32CDmaxTC", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30", ",", "40", ",", "50"}], "}"}]}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \\n (pfs)\>\"", ",", 
         "\"\<(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\)  \\n (lbs/hp)\>\
\""}], "}"}]}], "}"}]}]}], "]"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the Plot Matching the Time to Climb Requirements at various \
AR\>\"", "]"}], "\n", 
 RowBox[{"RCTCplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WpS", ",", 
         RowBox[{"WpPRCTC", "[", 
          RowBox[{"WpS", ",", 
           RowBox[{"CL32CDmaxTC", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(AR\), \(Time - to - climb\)]\) = ``\>\"", 
           ",", 
           RowBox[{"AR", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ps", "[", 
           RowBox[{"[", 
            RowBox[{"#", "+", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Darker", "[", "Yellow", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "80"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.85899862832742*^9, 3.8589986293902884`*^9}, {
   3.8590479887670107`*^9, 3.8590479963194356`*^9}, {3.8590482747042665`*^9, 
   3.859048276546518*^9}, {3.8590483211622753`*^9, 3.859048419323612*^9}, {
   3.859048641511644*^9, 3.8590486644205227`*^9}, {3.8590486992805815`*^9, 
   3.8590488014053645`*^9}, {3.859048886451371*^9, 3.859048918110495*^9}, {
   3.8590489628656344`*^9, 3.8590490462412715`*^9}, 3.8590490832424145`*^9, {
   3.859049129249072*^9, 3.859049212050627*^9}, {3.859049250918705*^9, 
   3.859049399658388*^9}, {3.8590494924962044`*^9, 3.859049592940198*^9}, {
   3.85904964077952*^9, 3.859049716705906*^9}, {3.859049794923212*^9, 
   3.859049796756154*^9}, 3.859063254228649*^9, {3.8590637939233875`*^9, 
   3.859063812888609*^9}, {3.85906385657629*^9, 3.8590638778126163`*^9}, {
   3.8590689976663713`*^9, 3.8590692319056273`*^9}, {3.859069360581897*^9, 
   3.8590694091277103`*^9}},
 CellLabel->
  "In[887]:=",ExpressionUUID->"cf066d3f-beb6-4a90-85bc-38f365482507"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rate of Climb at sealevel (\\!\\(\\*SubscriptBox[\\(RC\\), \
\\(0\\)]\\)) = \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"4023.5947810852513`", 
     RowBox[{
      "\"ft\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"min\""}], "feet per minute", 
     FractionBox["\"Feet\"", "\"Minutes\""]},
    "Quantity"], 
   "\[InvisibleSpace]", "\<\"\\nRate of Climb at 10,000 ft \
(\\!\\(\\*SubscriptBox[\\(RC\\), \\(h\\)]\\)) = \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"804.71895621705`", 
     RowBox[{
      "\"ft\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"min\""}], "feet per minute", 
     FractionBox["\"Feet\"", "\"Minutes\""]},
    "Quantity"], 
   "\[InvisibleSpace]", "\<\"\\nRate of Climb Parameter (RCP) = \"\>", 
   "\[InvisibleSpace]", "0.024385422915668184`", 
   "\[InvisibleSpace]", "\<\"\\nParasite Drag Coeeficient \
(\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(D\\), \\(0\\)]]\\)) = \"\>", 
   "\[InvisibleSpace]", "0.030134213251879153`", 
   "\[InvisibleSpace]", "\<\"\\nFor AR = {8,10}, \
(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(C\\), \\(L\\)], \\(3/2\\)]\\)/\\!\\(\
\\*SubscriptBox[\\(C\\), \\(D\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(max\\)]\
\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"12.989495999153975`", ",", "15.355883557975245`"}], "}"}]}],
  SequenceForm[
  "Rate of Climb at sealevel (\!\(\*SubscriptBox[\(RC\), \(0\)]\)) = ", 
   Quantity[4023.5947810852513`, "Feet"/"Minutes"], 
   "\nRate of Climb at 10,000 ft (\!\(\*SubscriptBox[\(RC\), \(h\)]\)) = ", 
   Quantity[804.71895621705, "Feet"/"Minutes"], 
   "\nRate of Climb Parameter (RCP) = ", 0.024385422915668184`, 
   "\nParasite Drag Coeeficient (\!\(\*SubscriptBox[\(C\), \
SubscriptBox[\(D\), \(0\)]]\)) = ", 0.030134213251879153`, 
   "\nFor AR = {8,10}, (\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\) = ", {12.989495999153975`, 15.355883557975245`}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700904469213`*^9, 3.8590701105771704`*^9}, {
   3.859095304154735*^9, 3.859095307108739*^9}, 3.859095595433028*^9, 
   3.859097613963606*^9, 3.8590976487207317`*^9},
 CellLabel->
  "During evaluation of \
In[887]:=",ExpressionUUID->"1ad961a5-b800-4a5b-95f2-3f9b6640a5f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"W/P = \"\>", "\[InvisibleSpace]", 
   FractionBox["0.8`", 
    RowBox[{"0.024385422915668184`", "\[VeryThinSpace]", "+", 
     FractionBox[
      RowBox[{"0.05263157894736842`", " ", 
       SqrtBox["\<\"W/S\"\>"]}], \
"\<\"(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(C\\), \\(L\\)], \
\\(3/2\\)]\\)/\\!\\(\\*SubscriptBox[\\(C\\), \
\\(D\\)]\\)\\!\\(\\*SubscriptBox[\\()\\), \\(max\\)]\\)\"\>"]}]]}],
  SequenceForm[
  "W/P = ", 0.8/(0.024385422915668184` + 
   0.05263157894736842 
    "(\!\(\*SuperscriptBox[SubscriptBox[\(C\), \(L\)], \
\(3/2\)]\)/\!\(\*SubscriptBox[\(C\), \(D\)]\)\!\(\*SubscriptBox[\()\), \
\(max\)]\)"^(-1) "W/S"^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700904469213`*^9, 3.8590701105771704`*^9}, {
   3.859095304154735*^9, 3.859095307108739*^9}, 3.859095595433028*^9, 
   3.859097613963606*^9, 3.859097648730727*^9},
 CellLabel->
  "During evaluation of \
In[887]:=",ExpressionUUID->"705a1b5c-88a9-46a4-84d3-b0227e75db1e"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"(W/S\\!\\(\\*SubscriptBox[\\()\\), \\(TO\\)]\\) \\n (pfs)\"\
\>",
       HoldForm], 
      TagBox["\<\"(W/P\\!\\(\\*SubscriptBox[\\()\\), \\(take - off\\)]\\)  \
\\n (lbs/hp)\"\>",
       HoldForm]},
     {"20", "18.820926443356765`"},
     {"30", "17.175358883146394`"},
     {"40", "15.996283740730233`"},
     {"50", "15.083986374144539`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"(W/S\!\(\*SubscriptBox[\()\), \(TO\)]\) \n (pfs)", 
       "(W/P\!\(\*SubscriptBox[\()\), \(take - off\)]\)  \n (lbs/hp)"}}]]]], \
"Output",
 CellChangeTimes->{{3.859070090470216*^9, 3.859070110599432*^9}, {
   3.8590953041797276`*^9, 3.8590953071327295`*^9}, 3.8590955954560337`*^9, 
   3.8590976139875994`*^9, 3.859097648741728*^9},
 CellLabel->
  "Out[900]//TableForm=",ExpressionUUID->"cf73a94b-8edf-493b-b3d3-\
3aaf8cd30855"],

Cell[BoxData["\<\"Sketch the Plot Matching the Time to Climb Requirements at \
various AR\"\>"], "Print",
 CellChangeTimes->{{3.8590700904469213`*^9, 3.8590701105771704`*^9}, {
   3.859095304154735*^9, 3.859095307108739*^9}, 3.859095595433028*^9, 
   3.859097613963606*^9, 3.8590976487507315`*^9},
 CellLabel->
  "During evaluation of \
In[887]:=",ExpressionUUID->"bac4b1e1-a876-46d0-8a5e-3e9c7b0b5c16"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           Dashing[{Small, Small}], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0]], 
          LineBox[CompressedData["
1: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
/78VN0jXyvXozOT/AkCS4jk=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$14601#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0]], 
          LineBox[CompressedData["
1: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
eRT+BVVAta4=
           "]]}, Annotation[#, "Charting`Private`Tag$14645#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(Time - to - climb\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(Time - to - climb\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(Time - to - climb\\)]\\) = \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(Time - to - climb\)]\) = ``", 10], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.859070090470216*^9, 3.859070110599432*^9}, {
   3.8590953041797276`*^9, 3.8590953071327295`*^9}, 3.8590955954560337`*^9, 
   3.8590976139875994`*^9, 3.8590976488367295`*^9},
 CellLabel->
  "Out[902]=",ExpressionUUID->"10a64c66-3671-45ed-a0dc-75d153839120"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ceiling Requirements", "Subsubsection",
 CellChangeTimes->{{3.858998599787813*^9, 3.858998643994187*^9}, {
  3.858998752106188*^9, 
  3.858998759121418*^9}},ExpressionUUID->"5606d038-5f72-4e7c-ac6f-\
23956c59b939"],

Cell[BoxData[""], "Code",
 CellChangeTimes->{{3.85899862832742*^9, 3.8589986293902884`*^9}},
 CellLabel->
  "In[903]:=",ExpressionUUID->"b62fde8f-cea2-468a-9fac-7e4a202d2e82"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sizing for Cruise Speed Requirements", "Subsection",
 CellChangeTimes->{{3.85827875288536*^9, 3.858278762704806*^9}, 
   3.8589923049519887`*^9, {3.858992490232074*^9, 
   3.8589925016340246`*^9}},ExpressionUUID->"539cac19-b505-4d51-aea1-\
aab03ddbf91a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vcr", " ", "=", " ", 
   RowBox[{"300.", "\[Times]", "1.15077945"}]}], "          ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"average", " ", "cruise", " ", "speed", " ", 
     RowBox[{"(", 
      RowBox[{"kts", "->", "nmph"}], ")"}]}], "\[LongDash]", " ", 
    RowBox[{"assumed", " ", "if", " ", "not", " ", "given"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ip", " ", "=", " ", "2"}], ";"}], "                       ", 
  RowBox[{"(*", 
   RowBox[{
   "Corresponding", " ", "Power", " ", "Index", " ", "from", " ", "figure", 
    " ", "3.28"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]CS", " ", "=", " ", "0.5329"}], ";", 
  "                    ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "density", " ", "ratio", " ", "at", " ", "10"}], ",", 
    RowBox[{"000", " ", "ft"}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"WpPCS", "[", "WpSCS_", "]"}], " ", "=", " ", 
   FractionBox["WpSCS", 
    RowBox[{"\[Sigma]CS", "\[Times]", 
     SuperscriptBox["Ip", "3"]}]]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<W/P = \>\"", ",", 
   RowBox[{"WpPCS", "[", "\"\<W/S\>\"", "]"}]}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  "\"\<Sketch the Plot Matching the Cruise Speed Requirements at various \
Cruise Speeds\>\"", "]"}], "\n", 
 RowBox[{"CSplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WpS", ",", 
       RowBox[{"WpPCS", "[", "WpS", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"WpS", ",", "0", ",", "80"}], "}"}], ",", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<W/S\>\"", ",", "\"\<W/P\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<Cruise Speed = ``\>\"", ",", 
         RowBox[{"Quantity", "[", 
          RowBox[{"Vcr", ",", "\"\<mph\>\""}], "]"}]}], "]"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ps", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"Darker", "[", "Brown", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "80"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}]}], "}"}]}]}], "]"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.858278763699731*^9, 3.858278764384166*^9}, {
   3.859052355402048*^9, 3.8590523587882805`*^9}, {3.859052416533713*^9, 
   3.859052454732272*^9}, {3.859052489092741*^9, 3.8590525691894145`*^9}, {
   3.8590526590898347`*^9, 3.8590526654798822`*^9}, {3.8590527057560477`*^9, 
   3.859052841620701*^9}, {3.8590528721673784`*^9, 3.859053123787771*^9}, {
   3.8590532536734676`*^9, 3.859053303937611*^9}, {3.859059725894085*^9, 
   3.8590597313699417`*^9}, 3.859063262578283*^9, {3.8590636153084197`*^9, 
   3.8590637480433407`*^9}, 3.8590643493535547`*^9, {3.8590643988081617`*^9, 
   3.8590643999158363`*^9}, {3.8590644606839156`*^9, 
   3.8590644614156895`*^9}, {3.859064492628055*^9, 3.859064493963382*^9}, {
   3.859064910198115*^9, 3.8590649108454895`*^9}, {3.859069281269308*^9, 
   3.8590693407697997`*^9}, {3.8590982283223615`*^9, 3.8590982405943613`*^9}, 
   3.8590983319435263`*^9, {3.859098411937334*^9, 3.8590984171538954`*^9}},
 CellLabel->
  "In[970]:=",ExpressionUUID->"13ec86d6-c2c7-4192-b560-e990e09fbd87"],

Cell[BoxData["345.233835`"], "Output",
 CellChangeTimes->{{3.859070090789394*^9, 3.859070110829472*^9}, {
   3.85909530442772*^9, 3.859095307352722*^9}, 3.859095595664028*^9, 
   3.859097614205593*^9, 3.8590976489507275`*^9, {3.859098231268354*^9, 
   3.85909824111236*^9}, 3.859098418246892*^9},
 CellLabel->
  "Out[970]=",ExpressionUUID->"5bce7003-3bc7-4e99-bce2-d8d277d141be"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"W/P = \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.23456558453743664`", " ", "\<\"W/S\"\>"}]}],
  SequenceForm["W/P = ", 0.23456558453743664` "W/S"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8590700906703634`*^9, 3.8590701107702503`*^9}, {
   3.85909530434972*^9, 3.8590953072797217`*^9}, 3.8590955955940285`*^9, 
   3.8590976141335993`*^9, 3.859097648881735*^9, {3.859098231201359*^9, 
   3.859098241118357*^9}, 3.859098418252892*^9},
 CellLabel->
  "During evaluation of \
In[970]:=",ExpressionUUID->"34134904-afc5-4248-b523-413a11bf177e"],

Cell[BoxData["\<\"Sketch the Plot Matching the Cruise Speed Requirements at \
various Cruise Speeds\"\>"], "Print",
 CellChangeTimes->{{3.8590700906703634`*^9, 3.8590701107702503`*^9}, {
   3.85909530434972*^9, 3.8590953072797217`*^9}, 3.8590955955940285`*^9, 
   3.8590976141335993`*^9, 3.859097648881735*^9, {3.859098231201359*^9, 
   3.859098241118357*^9}, 3.8590984182578907`*^9},
 CellLabel->
  "During evaluation of \
In[970]:=",ExpressionUUID->"fbeff2ef-9dc1-429a-9ce9-7989c8a22276"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]], 
         LineBox[CompressedData["
1:eJxd1P8/1HcAB/DbSTWkK2t9w50v57sb78oU516+pHM4Xz6uPbSkU0aLi9LD
5NaiR2QRdxoL1WpEpVp2hLBCD11xE5tb0XdNp1sqX5LKvjy6n/Z6PF6P1+P5
D7wsYraFx9JpNFrwv/1v/x+PxvWXNMzDPAlTHdUjT+W99ymds3Vu0LlYZ6XO
lTrf0vmizhqdO3R+rbOaJ7WNpyVwDPBL9LqA4wVPeMJ0OGm3m+BES/zCHN5L
nsji8E7FucUoLYsTdC6a5E23XHp+152F5iV2oxNJ07zMc/SxHzZaQRVdR4vm
0LE2LXe/XqcNwjMbfOo26SN2U5PjNlsHJAfdHZz/7WxUGPuZLgpwxnP7qw3c
XYYoFcz61eUzF+xV5wYMnDKGVPK925jWFR5BhlnlNxmYOi5lN+1ahkyauPiO
/3ywfOlREQ4r0Gtqm9Xdb4K77cs8DJvd0OsjPHhatAB+ipkx8mR33Ol+vMNr
5GPwf3ZimJuvQi05+KEoYxEG5dObr531gOfR4vrwycWwu59M943mQpU8b7VB
/lLMMJb5D4x6YW6IdrjKwAztv1VpLEVA5KFPJR+cNIfodM1opJM3GvqUoc9M
WSBJ88NY494wi7dLDbnFwiNta49K5YMsZ15uXoUF7kcqK41KfNGROpPD22yJ
amHa5SCxH0Yc+2wJ0wpBU2nvUlauhulHGxj0YSu4F3XnOen5g5VRtG91pTUm
n6T6dN7xh71ltiY2hY3stmurJIo1WOK8p6KDa4OYg9uyjkn5eNhk/6zstQ3m
MeIm6kUBOL/nADvkqi3mZCoaxCwBRMojmpS9dlCnn7lsNCTAg/R6/QGuPXY6
jT491hKI7TEHGKzZDtjYVfBla3YQ+ruMq9TtDmCyv5nTJQ5GQKKAkyBzhENi
m16csxD5MjfvlFAnzOBe4OqNC9HMdKxuNnRGTdtIaXZXCEYeqPUH+5yx1qz1
ZFdgKF7brdB+fYgDrkIhC2wIxaxywZUx8ScwnCs9et06DLv9lqf2LXDB3+Jn
EfNywrA5bWmEdocLohg5Zp3jYQi+tqHq+S0XPKxT5Qs/D8ePkVOtnJWuEFpo
rHpawvGUWZKTV+QK6yHH60oHCm60oo7bb1zBqli8JCefwl+WwzfE6whyvS6M
C2QUzBMKH8xaT/BKzb9pVEghuNbz1dkoApXBV/sLiihUr8m3nNpIIE3qmyg+
QiEhYXmaPI7gD4/C3pNnKAzX7rZpSyEo6DHKa++g8CffJMM6n+Dt1vL4LCWF
hfKmousFBHH6nn78GxT8+2Ork+QEXu5b39xQUahIrFc3fUegPaLc0vs7hVh5
FEdURsDfkuX/8BGFR/2V/ftOESjo5pbljymYsMNeOJ4hYJbVvosdouAjmZrZ
U00woRpUaIYpnKAFE/OfCMqX+1q9eEFBzH65v66OgKG6PV0zSkEmKT26vp4g
PW777ZRxClcu+inojQThJcdlk5MUWILie8JmgpZlKxMbpyiEFmJ8rIXAvqub
L31LYc+AxqD0MsGhL+KtvaYpnGcXsrxbCd6/VgTuSTzdhtoI/gEj3R52
          "]]}, Annotation[#, "Charting`Private`Tag$16410#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"Cruise Speed = \
\\!\\(\\*FormBox[TemplateBox[List[\\\"345.233835`\\\", RowBox[List[\\\"\\\\\\\
\"mi\\\\\\\"\\\", \\\"\\\\[InvisibleSpace]\\\", \\\"\\\\\\\"/\\\\\\\"\\\", \\\
\"\\\\[InvisibleSpace]\\\", \\\"\\\\\\\"h\\\\\\\"\\\"]], \\\"miles per hour\\\
\", FractionBox[\\\"\\\\\\\"Miles\\\\\\\"\\\", \
\\\"\\\\\\\"Hours\\\\\\\"\\\"]], \\\"QuantityTF\\\", Rule[SyntaxForm, Mod]], \
TraditionalForm]\\)\"", 
        StringForm["Cruise Speed = ``", 
         Quantity[345.233835, "Hours"^(-1) "Miles"]], Editable -> False]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    0.4, 0.2666666666666667, 0.13333333333333336`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FaceForm", "[", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                 
                 TemplateBox[<|
                  "color" -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]|>, 
                  "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.859070090789394*^9, 3.859070110829472*^9}, {
   3.85909530442772*^9, 3.859095307352722*^9}, 3.859095595664028*^9, 
   3.859097614205593*^9, 3.8590976489507275`*^9, {3.859098231268354*^9, 
   3.85909824111236*^9}, 3.859098418324891*^9},
 CellLabel->
  "Out[975]=",ExpressionUUID->"7b9914a0-beb1-4e13-b7df-20b73ec385bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrated Matching Plot", "Section",
 CellChangeTimes->{{3.8590283251210394`*^9, 
  3.85902833662576*^9}},ExpressionUUID->"410157cb-dfe6-47e8-8c5f-\
7973a245ed52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "Tplot", ",", "Lplot", ",", "RC65plot", ",", "RC67plot", ",", "CGR65plot",
      ",", "CGR77plot", ",", "RCTCplot", ",", "CSplot"}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.8582796985613027`*^9, 3.858279717658075*^9}, {
  3.85902824558994*^9, 3.8590282461535845`*^9}, {3.8590373713833294`*^9, 
  3.8590374231730676`*^9}, {3.8590375579682693`*^9, 3.859037559266799*^9}, {
  3.8590379937940903`*^9, 3.8590380111630535`*^9}, {3.859042740754956*^9, 
  3.85904275426803*^9}, {3.8590432663830023`*^9, 3.859043279198348*^9}, {
  3.8590435981913114`*^9, 3.859043603930925*^9}, {3.8590497698325577`*^9, 
  3.859049774319335*^9}, {3.8590531341036367`*^9, 3.859053154865636*^9}},
 CellLabel->
  "In[911]:=",ExpressionUUID->"20c2e25c-10ad-4bc4-83a1-f8f179c23cfd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            Dashing[{0, Small, Small, Small}]], 
           LineBox[CompressedData["
1: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
T7CzJoHp/x5rTPJJ6zyik/A/AQcrhw==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$13880#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            Dashing[{Small, Small}]], 
           LineBox[CompressedData["
1:eJwtlgc0lm/cx42UCukxon/27EHZ6+nxfI3sxPNYRdkjSXZWQlmVkKaSERrS
HyGkkgbKaqio9Cd774j09r7vfZ9zn/v8znVdv9/38znnPucScz1K92BhYmL6
/ff936/rMn9ToqA17XYRSSKEQtKl1Dg+Gha5SuvcferGhFwL/r++Q9SPce9M
vPnkpzJa+g573uzAB8R6NbFejNdDKuQ+r6e0Ho32aHvbW8T+emL/TcyJT58c
W35Jy7lo1uhWlEOcbyLOZyHOqnFmQL+Z5psR4r994irRr43odxnsdW0lU7vf
0rLDjiloaVwk+r8j+mfA0o4yNH7oA21ociKpcDadmNdBzEvDlYlCkdGUT7QY
0zrGG6FUYn4nMT8F3fEku6HSLlrQwpx9fvAZIs9XIk8ypIWiz/V3fKMF/TSc
bkxLIvJ9J/IlQr1rznU66j9aXIO7c5dWApG3h8gbj66Cu6uTXL20Fxd6zPnM
ThH5e4n8JxEd4Jw5kfODFrvE8Se8KI7g6SN4YiFO5VcfV+6nZT28Oe9vEkvw
9RN8MXjF3vx29MUALcaBhZ0qEEPwDhK8JwjeYYL3ODhyNNYPDw3TPuTMpeea
RBH8IwR/JME/RvCHw1rjJgY4xmkvggSS67TDCR/jhI8wwsck4eMYLLzW1QYI
TNHmghP0c1+EEn6mCD+hhJ9pwk8IppUf2/nfnabZfSWnJD4JJnzNEL6CCV8z
hK8gXFwNnPXbNUs7mpBNX8MZRPibJfwFEv7mCH8B0Hotm3qk9W/99Pe9qesB
hM95wmcA4XOe8OmPbxe7yb7OC7S8vTsX4p39Cb8LhF9/wu9Pwu9Rwu8S4fcI
ziUFBn87u0Tb1OF8L/lfX/xnm6TwdmmJ9j4keZemhi8SZh9kV73/RXsv/5uy
nn4Y7+Q3nkpMXKG5idzmKys5BKllUWrk3ArtakeZ3jrLQwhrUl/wc/lNQ9ov
5+0z3hD2dPW2pazSEqz/YzjoeMMnu9pcavIPTdkn5E7MrCe6KwfjOHYwIW5N
+VHtQk+w3wh0SnBnQlIFrXV+vyccfJMEIt4ywSiSsk/itQeY15efdilihtpm
CRffx+4gT+l4felhxs/V933UaHdYf2rStxFggZHwrQ9n4I5bBd9XjONZwJwq
G+/d5IY9ehuPKjqxon3DS4OPI64I3X7J7O5FVjgajWdoVLoih1tMVrKZFd8a
xsJq4lwx063es0VrDYrqUoKYRFxxJdKV8YfEBnshRm+umwvqXcd3hpuwISuJ
cUNMwwWjJmEcsyfY8Krs4re4jS7QETj3cmCMDSIpknltlc7oK6/WaH21FiMW
0jJD/M7gum7Aa/x7LUhu5p9Te5ygcbJt6pnKOqyf7wyouOSE01b9dypy1sHg
5DYxDjYnKE5wb8uKYEdkrKnH6NQBRMl4M/nu2IBMd1OmxFUHVJ1uLDVx2YCP
6mMnzjY6YH5c1k3mwgZsvf4l0znDAX7lwy97lzYgRa3ayVXOAc66h8/se7kR
H0fF8hju+2Hg4Mdv5MiJQ+EHW04v2CPmSWuDZConurrkP1x8Y4/HYjvDWeo5
wbK3v0Il1x7qQ5NfHstwIdvi+JFtFvaQDQnIVZ3lQhX/p3Tr+3ZIMNLm37yb
G94V1YydCbaQDB+ZOHGQG1KqVEtFN1vU381smDjGjQc+Nu5ZsMUfzuWw5rvc
eBG0uKV8xQZhHx59SeTejMh0A56ccBv4uFBzV79sxvmhht8/T1mDPWM8/Mj8
ZrxszXk55GWNwhdZ9K9cJMSeN/eWM7PGD5lV1hpdEnhNn/XnkKzhOPHEM+QW
CfrMNROyBQxYREJ+LJAHc1yLmfmf6Bj45rHnyxkerKYqHLj2lI5onPF7nc8D
lkF1ybZbdNxn+1hy+yMP2taEyY6E0bEp7bCahzYvojSefuoQoqM9/5JONzMf
KFzfH7YFWMF7Xa1Ty1Y+WGhRrqgcsAKTT09MrQofJiiYaTC2guJO+eeZHnw4
teR55ISoFdKrnxnZNfHhSMabnC3vLEFvHbNsT+PHvqXvel5US4wokgKf3uHH
ZdsyJMtZIi5DI+N+PT/On5FzfydoiTL7uI6zc/wQLM2mlIzvBc+PLftN7Lfg
7Z3TT4w89uLDTz23ehEBrFZkHb/vYgEbsash5fcFwRTjnfc42RyNmcbX6poE
McVcKNx22BzavIt1zX2CiNevERexMIfoOjuO/q1bscNxpuoYjzlGxnhv8iVu
RerHj0kLOWaIrkprD3X6BwIDsVdSX5ni9t4kOS1uIay3rfr2TcMEW5s0rHbL
CWFUaHdqpKgJUvQGQ60MhXBbMCXUYL0JAtUM6w9FCeHoq6INtl+MQf1nzb7M
ISGc0mkoOBxrjHcDJxKW64RxU+RgPVOHEVafPJrq1hRFU1vNQeHLhqjtalw8
vlsU2xT/vXol3hARCx1MQnRR+FxMnlAINsSCwhS3w2FRaGnPjd62MsTEdUml
T1miKL5pkNzJaYjvESkBbSxicBvkpc6c3o06daeZp81iYM7Jnj99yQDRdN9f
BzvFsG1hRWQl0QC7/MJZVvvFcEbN6V1suAGqCjJIu/6IgazoI/7a0QAlvI3K
VUriuHvQvt1E0gC5M4pBJZfEIUAW7e2p1EfcfZa5HGcJjD6fP+E3rIfiDuto
Cz8J9GU7RAt/1cPnlUL2lUgJMHOkKfS06mGnmZmQ3WUJbIxtYb5RroevgxmG
nK0SOH1KzGo6Rg8aYlJXwymS8MmgOXRv08NYhpEOnV8Kk22nFfucdbHl0dXG
PxJSMF/Ie1Vgowu93lF6sZIUYvqWv4eY6uKqYpoX+x4p7BK+Lq+rqgvDls9p
T05K4XKE3Y5Ydl3krvX5QZ6WQrrMQnXqA8A2/GwSa7M0ct0kxCk8wKqmoEZA
pzRYTm6+2bgeKFws6O8ekMbxSllNFybg57GnejXMMtDXDcrz/ELDldCZFX8N
GVwp5GGUpdPQFWQf0J0ng8KzovfUWWg46Ce5vzpcFmfqI1hZZqhYu6OUXSZR
Fn0Rq5uyeqi4P059eOGCLOx0ZdeavqXij68dr/+/shC4c0K7s4SKnMOnW6X7
ZXG5Mf5Gkz8Vvd5TehcstyP3h+FC5+wueLjVyh2VIeNk3vtS5rW7QIqLbptX
IePi/WqD64sUPM1BUBTIKHpunKM/SoFg94ua5H1kOOqHeFe1U9Bi32KSf4YM
CVU+Q83rFKhZdHt1TpJh/Sx6LFaNAjYtpnz9KjlokY9zN/lro4DLYJuAiQIu
rJ6a6FurhTpNM71iWwV4SSS/tljWRJcr3VvPXQFrBpkdn09qguuhc7nvCYW/
9wAp9+bPmghzOm7+rEIBEfeH/R2LNGFaUhnlI74Dop4u3N50TUxYbf9Wu7wD
pW61Ym23NHDNdF2bop0iJIdmO1WOqIOcWvA18YAiNuqEFp10V0fNe/2RbjdF
1F4uVetyUEeXYwxbir8i9nBq2lwzVYfA0SXKcLIiLjU4D/vKquNCxujt3FpF
BChQ3hv2q+Hs17Y4krgS/umtOHDTTQ1RflfU58aUUPJ2Zue5AFWY/mHYys0q
4TOJdU2EjyoE0jaFui4pYX+a/WMfN1WUlyZUtLMpg9Ka9ma/jSrG5oJVi4WV
IeM00hSspQrHSCtlT0tlqD5UYTnLogpK0oYdnx8o42mpt530FRX8yo2Sqo1Q
wdv2lA387coQ1Wc5YE1Ww/Wh4rhQSyV0v1ChbHysjl5Gkne7kCIMyte6ng/Q
RIC7WuXqsgKMH8hzCwtro5JH9zMTtzz6zq+6NxZTEJ/Ev7s5ggzZ/wJY9J2o
KKenpDDPyWINV7rh11kd3AoW2vuhWAYvPtweFrcBDqzSFtn8pWFzt2x2n7wu
XEcejHTYSkHZn2QlOq+LoEt5QfCWxI+x+netf//jUXIIx6YoCfy3r+kWR6Y+
+NuX5dnLxHHPIrzO3MUAdeXGx7AsBvNf4b+DtXZDvtLCWsRADJqX2lPkWQ1x
i4uXNlAgisWhY3rN3wxx6ED/uZq1okh83qjtV24EbYvR29RRYbie+3vzjDLG
S+sqj9AJIWzm9lqosjHBJSMhnaXxbeCMK692ETUFPS5K+zznNnyKLKrjGDRF
uZke1VvnH4TIz45mPzFD59NZy2qfrXBuSfOpTzRHqqw0x/ESQYhIneBscdmD
iq1u0Z3TAiAfec7qpWCBfUJ39FNMBLCGWkplnbcA/7qGkpl7W1D2fPJaYste
KIrWiz/fuAW2QvWFLWaW4DIcu/s9ih/U8vJ0s2pLvJHI21AwzIeNm6JuvJa0
Aqea73cdZz78cZmw3pxshRyLm1+ZB3hxgDtZqHneCgO01zrHvXjRW9maauFA
R+ymG9K3F3hgITYs8e4JHWuf54kUn+WB5KDc6yYyA8VK2TznhHkgWiC4NTmV
gb3FtUW8tSSc1SmdN01n4JfDj3mPGhJ+fjJ+y5HBgI+0U8rDKhJaN4QlpV1i
4FQrS75DBQlR/h8XLmcxwL6n4sit+yR8pmS8LyxiYNyt0nlPLglp7zhSXjQw
0CMrpf4ugYSVw/neCU0M3Lgmw6oQT4IX2y4D4zcMVMnMbk06SYKO5uHlN60M
HJ24SKbFkDCW1XTofQcDzQHdDSXhJBgfSjDs/cFAhYrqcK4vCeUswuL5/Qy4
7Y3bx3yYBJHrFb89BhkY0D7I43KIhIXWvvLhkb/58gLcxDxJyFfVl5ieZkCW
bzCwwIkE7tau1bJZBop+nFRYd5CESK/AruB5BvRDeJQOOZJAz8xNX1xk4NXX
x6Qd+0h4oqJ1pOYXA0q6ZVNpdiRsb2k3jlphoDDefMucDQkXPL0ldVYZMIoL
T7CzJoHp/x5rTPJJ6zyik/A/AQcrhw==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$13924#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798]], 
           LineBox[CompressedData["
1:eJwtlgc0lm/cx42UCukxon/27EHZ6+nxfI3sxPNYRdkjSXZWQlmVkKaSERrS
HyGkkgbKaqio9Cd774j09r7vfZ9zn/v8znVdv9/38znnPucScz1K92BhYmL6
/ff936/rMn9ToqA17XYRSSKEQtKl1Dg+Gha5SuvcferGhFwL/r++Q9SPce9M
vPnkpzJa+g573uzAB8R6NbFejNdDKuQ+r6e0Ho32aHvbW8T+emL/TcyJT58c
W35Jy7lo1uhWlEOcbyLOZyHOqnFmQL+Z5psR4r994irRr43odxnsdW0lU7vf
0rLDjiloaVwk+r8j+mfA0o4yNH7oA21ociKpcDadmNdBzEvDlYlCkdGUT7QY
0zrGG6FUYn4nMT8F3fEku6HSLlrQwpx9fvAZIs9XIk8ypIWiz/V3fKMF/TSc
bkxLIvJ9J/IlQr1rznU66j9aXIO7c5dWApG3h8gbj66Cu6uTXL20Fxd6zPnM
ThH5e4n8JxEd4Jw5kfODFrvE8Se8KI7g6SN4YiFO5VcfV+6nZT28Oe9vEkvw
9RN8MXjF3vx29MUALcaBhZ0qEEPwDhK8JwjeYYL3ODhyNNYPDw3TPuTMpeea
RBH8IwR/JME/RvCHw1rjJgY4xmkvggSS67TDCR/jhI8wwsck4eMYLLzW1QYI
TNHmghP0c1+EEn6mCD+hhJ9pwk8IppUf2/nfnabZfSWnJD4JJnzNEL6CCV8z
hK8gXFwNnPXbNUs7mpBNX8MZRPibJfwFEv7mCH8B0Hotm3qk9W/99Pe9qesB
hM95wmcA4XOe8OmPbxe7yb7OC7S8vTsX4p39Cb8LhF9/wu9Pwu9Rwu8S4fcI
ziUFBn87u0Tb1OF8L/lfX/xnm6TwdmmJ9j4keZemhi8SZh9kV73/RXsv/5uy
nn4Y7+Q3nkpMXKG5idzmKys5BKllUWrk3ArtakeZ3jrLQwhrUl/wc/lNQ9ov
5+0z3hD2dPW2pazSEqz/YzjoeMMnu9pcavIPTdkn5E7MrCe6KwfjOHYwIW5N
+VHtQk+w3wh0SnBnQlIFrXV+vyccfJMEIt4ywSiSsk/itQeY15efdilihtpm
CRffx+4gT+l4felhxs/V933UaHdYf2rStxFggZHwrQ9n4I5bBd9XjONZwJwq
G+/d5IY9ehuPKjqxon3DS4OPI64I3X7J7O5FVjgajWdoVLoih1tMVrKZFd8a
xsJq4lwx063es0VrDYrqUoKYRFxxJdKV8YfEBnshRm+umwvqXcd3hpuwISuJ
cUNMwwWjJmEcsyfY8Krs4re4jS7QETj3cmCMDSIpknltlc7oK6/WaH21FiMW
0jJD/M7gum7Aa/x7LUhu5p9Te5ygcbJt6pnKOqyf7wyouOSE01b9dypy1sHg
5DYxDjYnKE5wb8uKYEdkrKnH6NQBRMl4M/nu2IBMd1OmxFUHVJ1uLDVx2YCP
6mMnzjY6YH5c1k3mwgZsvf4l0znDAX7lwy97lzYgRa3ayVXOAc66h8/se7kR
H0fF8hju+2Hg4Mdv5MiJQ+EHW04v2CPmSWuDZConurrkP1x8Y4/HYjvDWeo5
wbK3v0Il1x7qQ5NfHstwIdvi+JFtFvaQDQnIVZ3lQhX/p3Tr+3ZIMNLm37yb
G94V1YydCbaQDB+ZOHGQG1KqVEtFN1vU381smDjGjQc+Nu5ZsMUfzuWw5rvc
eBG0uKV8xQZhHx59SeTejMh0A56ccBv4uFBzV79sxvmhht8/T1mDPWM8/Mj8
ZrxszXk55GWNwhdZ9K9cJMSeN/eWM7PGD5lV1hpdEnhNn/XnkKzhOPHEM+QW
CfrMNROyBQxYREJ+LJAHc1yLmfmf6Bj45rHnyxkerKYqHLj2lI5onPF7nc8D
lkF1ybZbdNxn+1hy+yMP2taEyY6E0bEp7bCahzYvojSefuoQoqM9/5JONzMf
KFzfH7YFWMF7Xa1Ty1Y+WGhRrqgcsAKTT09MrQofJiiYaTC2guJO+eeZHnw4
teR55ISoFdKrnxnZNfHhSMabnC3vLEFvHbNsT+PHvqXvel5US4wokgKf3uHH
ZdsyJMtZIi5DI+N+PT/On5FzfydoiTL7uI6zc/wQLM2mlIzvBc+PLftN7Lfg
7Z3TT4w89uLDTz23ehEBrFZkHb/vYgEbsash5fcFwRTjnfc42RyNmcbX6poE
McVcKNx22BzavIt1zX2CiNevERexMIfoOjuO/q1bscNxpuoYjzlGxnhv8iVu
RerHj0kLOWaIrkprD3X6BwIDsVdSX5ni9t4kOS1uIay3rfr2TcMEW5s0rHbL
CWFUaHdqpKgJUvQGQ60MhXBbMCXUYL0JAtUM6w9FCeHoq6INtl+MQf1nzb7M
ISGc0mkoOBxrjHcDJxKW64RxU+RgPVOHEVafPJrq1hRFU1vNQeHLhqjtalw8
vlsU2xT/vXol3hARCx1MQnRR+FxMnlAINsSCwhS3w2FRaGnPjd62MsTEdUml
T1miKL5pkNzJaYjvESkBbSxicBvkpc6c3o06daeZp81iYM7Jnj99yQDRdN9f
BzvFsG1hRWQl0QC7/MJZVvvFcEbN6V1suAGqCjJIu/6IgazoI/7a0QAlvI3K
VUriuHvQvt1E0gC5M4pBJZfEIUAW7e2p1EfcfZa5HGcJjD6fP+E3rIfiDuto
Cz8J9GU7RAt/1cPnlUL2lUgJMHOkKfS06mGnmZmQ3WUJbIxtYb5RroevgxmG
nK0SOH1KzGo6Rg8aYlJXwymS8MmgOXRv08NYhpEOnV8Kk22nFfucdbHl0dXG
PxJSMF/Ie1Vgowu93lF6sZIUYvqWv4eY6uKqYpoX+x4p7BK+Lq+rqgvDls9p
T05K4XKE3Y5Ydl3krvX5QZ6WQrrMQnXqA8A2/GwSa7M0ct0kxCk8wKqmoEZA
pzRYTm6+2bgeKFws6O8ekMbxSllNFybg57GnejXMMtDXDcrz/ELDldCZFX8N
GVwp5GGUpdPQFWQf0J0ng8KzovfUWWg46Ce5vzpcFmfqI1hZZqhYu6OUXSZR
Fn0Rq5uyeqi4P059eOGCLOx0ZdeavqXij68dr/+/shC4c0K7s4SKnMOnW6X7
ZXG5Mf5Gkz8Vvd5TehcstyP3h+FC5+wueLjVyh2VIeNk3vtS5rW7QIqLbptX
IePi/WqD64sUPM1BUBTIKHpunKM/SoFg94ua5H1kOOqHeFe1U9Bi32KSf4YM
CVU+Q83rFKhZdHt1TpJh/Sx6LFaNAjYtpnz9KjlokY9zN/lro4DLYJuAiQIu
rJ6a6FurhTpNM71iWwV4SSS/tljWRJcr3VvPXQFrBpkdn09qguuhc7nvCYW/
9wAp9+bPmghzOm7+rEIBEfeH/R2LNGFaUhnlI74Dop4u3N50TUxYbf9Wu7wD
pW61Ym23NHDNdF2bop0iJIdmO1WOqIOcWvA18YAiNuqEFp10V0fNe/2RbjdF
1F4uVetyUEeXYwxbir8i9nBq2lwzVYfA0SXKcLIiLjU4D/vKquNCxujt3FpF
BChQ3hv2q+Hs17Y4krgS/umtOHDTTQ1RflfU58aUUPJ2Zue5AFWY/mHYys0q
4TOJdU2EjyoE0jaFui4pYX+a/WMfN1WUlyZUtLMpg9Ka9ma/jSrG5oJVi4WV
IeM00hSspQrHSCtlT0tlqD5UYTnLogpK0oYdnx8o42mpt530FRX8yo2Sqo1Q
wdv2lA387coQ1Wc5YE1Ww/Wh4rhQSyV0v1ChbHysjl5Gkne7kCIMyte6ng/Q
RIC7WuXqsgKMH8hzCwtro5JH9zMTtzz6zq+6NxZTEJ/Ev7s5ggzZ/wJY9J2o
KKenpDDPyWINV7rh11kd3AoW2vuhWAYvPtweFrcBDqzSFtn8pWFzt2x2n7wu
XEcejHTYSkHZn2QlOq+LoEt5QfCWxI+x+netf//jUXIIx6YoCfy3r+kWR6Y+
+NuX5dnLxHHPIrzO3MUAdeXGx7AsBvNf4b+DtXZDvtLCWsRADJqX2lPkWQ1x
i4uXNlAgisWhY3rN3wxx6ED/uZq1okh83qjtV24EbYvR29RRYbie+3vzjDLG
S+sqj9AJIWzm9lqosjHBJSMhnaXxbeCMK692ETUFPS5K+zznNnyKLKrjGDRF
uZke1VvnH4TIz45mPzFD59NZy2qfrXBuSfOpTzRHqqw0x/ESQYhIneBscdmD
iq1u0Z3TAiAfec7qpWCBfUJ39FNMBLCGWkplnbcA/7qGkpl7W1D2fPJaYste
KIrWiz/fuAW2QvWFLWaW4DIcu/s9ih/U8vJ0s2pLvJHI21AwzIeNm6JuvJa0
Aqea73cdZz78cZmw3pxshRyLm1+ZB3hxgDtZqHneCgO01zrHvXjRW9maauFA
R+ymG9K3F3hgITYs8e4JHWuf54kUn+WB5KDc6yYyA8VK2TznhHkgWiC4NTmV
gb3FtUW8tSSc1SmdN01n4JfDj3mPGhJ+fjJ+y5HBgI+0U8rDKhJaN4QlpV1i
4FQrS75DBQlR/h8XLmcxwL6n4sit+yR8pmS8LyxiYNyt0nlPLglp7zhSXjQw
0CMrpf4ugYSVw/neCU0M3Lgmw6oQT4IX2y4D4zcMVMnMbk06SYKO5uHlN60M
HJ24SKbFkDCW1XTofQcDzQHdDSXhJBgfSjDs/cFAhYrqcK4vCeUswuL5/Qy4
7Y3bx3yYBJHrFb89BhkY0D7I43KIhIXWvvLhkb/58gLcxDxJyFfVl5ieZkCW
bzCwwIkE7tau1bJZBop+nFRYd5CESK/AruB5BvRDeJQOOZJAz8xNX1xk4NXX
x6Qd+0h4oqJ1pOYXA0q6ZVNpdiRsb2k3jlphoDDefMucDQkXPL0ldVYZMIoL
T7CzJoHp/x5rTPJJ6zyik/A/AQcrhw==
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$13968#1"]& ]}}, {}}}, {{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            Dashing[{0, Small, Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 3], 0.6666666666666666], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666]]], 
           LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7b3h/poNi60cGKAAxrfeFbP7pfxLe1T+Tzi/Rj2D
IUePywHG96t20HlTJAznhyrOLN2yThLO/7dv94d7FgpwftM6pi8LEpTh/LDK
ng7mM2pwfmryHu18dS04fymfi4yEpy6cP9uL/bxBuAGcX5M3w+zLG0M4/9fC
GtU9VcZwvoIzU2yIlimcf++IsTX3XjM432ULW9KkQgs432OzjoCcnBWc/2TS
v5QTa63hfI0HhUzO8bZwPgvfRLc7n+3g/CNXVrxUCnVAhMeqTZ8jdRzhfKMC
oUCFrwj+4zeHLp075wTnP4g8uZxnljOcv8av8oBPoguc7/Or8m+JpSucbzHt
Qq8Osxuc/+NFudOZuwh+++ETVnlb3OH8pL78tvk1HnC+oED6tx2hnnA+b9OW
nYkKXnD+9erVB3ieI/ilOp9fz9/nDecnnJ2QdajdB86XV63nPZvoC+dr5R5m
Ttf1Q4SX7UZb5q8I/qbD72e3n/VHpAfZQ8vOegfA+bZbtkz03ongc/PXzDul
Egjn/098FyLYieDHCnTKnvmK4D/adq7fLzoIkV4VXypf2ofgqzzXPnVSKxiR
XpZKSnX2I/gTLvH0HjmO4ENyS4gDAB4cj9c=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$14044#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 3], 0.6666666666666666], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666]]], 
           LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7b3h/poNi60cGKAAxrfeFbP7pfxLe1T+Tzi/Rj2D
IUePywHG96t20HlTJAznhyrOLN2yThLO/7dv94d7FgpwftM6pi8LEpTh/LDK
ng7mM2pwfmryHu18dS04fymfi4yEpy6cP9uL/bxBuAGcX5M3w+zLG0M4/9fC
GtU9VcZwvoIzU2yIlimcf++IsTX3XjM432ULW9KkQgs432OzjoCcnBWc/2TS
v5QTa63hfI0HhUzO8bZwPgvfRLc7n+3g/CNXVrxUCnVAhMeqTZ8jdRzhfKMC
oUCFrwj+4zeHLp075wTnP4g8uZxnljOcv8av8oBPoguc7/Or8m+JpSucbzHt
Qq8Osxuc/+NFudOZuwh+++ETVnlb3OH8pL78tvk1HnC+oED6tx2hnnA+b9OW
nYkKXnD+9erVB3ieI/ilOp9fz9/nDecnnJ2QdajdB86XV63nPZvoC+dr5R5m
Ttf1Q4SX7UZb5q8I/qbD72e3n/VHpAfZQ8vOegfA+bZbtkz03ongc/PXzDul
Egjn/098FyLYieDHCnTKnvmK4D/adq7fLzoIkV4VXypf2ofgqzzXPnVSKxiR
XpZKSnX2I/gTLvH0HjmO4ENyS4gDAB4cj9c=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$14088#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[
             NCache[
              Rational[2, 3], 0.6666666666666666], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666]]], 
           LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7b3h/poNi60cGKAAxrfeFbP7pfxLe1T+Tzi/Rj2D
IUePywHG96t20HlTJAznhyrOLN2yThLO/7dv94d7FgpwftM6pi8LEpTh/LDK
ng7mM2pwfmryHu18dS04fymfi4yEpy6cP9uL/bxBuAGcX5M3w+zLG0M4/9fC
GtU9VcZwvoIzU2yIlimcf++IsTX3XjM432ULW9KkQgs432OzjoCcnBWc/2TS
v5QTa63hfI0HhUzO8bZwPgvfRLc7n+3g/CNXVrxUCnVAhMeqTZ8jdRzhfKMC
oUCFrwj+4zeHLp075wTnP4g8uZxnljOcv8av8oBPoguc7/Or8m+JpSucbzHt
Qq8Osxuc/+NFudOZuwh+++ETVnlb3OH8pL78tvk1HnC+oED6tx2hnnA+b9OW
nYkKXnD+9erVB3ieI/ilOp9fz9/nDecnnJ2QdajdB86XV63nPZvoC+dr5R5m
Ttf1Q4SX7UZb5q8I/qbD72e3n/VHpAfZQ8vOegfA+bZbtkz03ongc/PXzDul
Egjn/098FyLYieDHCnTKnvmK4D/adq7fLzoIkV4VXypf2ofgqzzXPnVSKxiR
XpZKSnX2I/gTLvH0HjmO4ENyS4gDAB4cj9c=
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$14132#1"]& ]}}, {}}}, {{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            Dashing[{Small, Small}], 
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 
             NCache[
              Rational[2, 3], 0.6666666666666666]]], 
           LineBox[CompressedData["
1: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
+8mZrLFAnWx8zp1J4H97oMwTjpvz6QT+AzWTk4M=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$14214#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 
             NCache[
              Rational[2, 3], 0.6666666666666666]]], 
           LineBox[CompressedData["
1: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
MFYYiU4sN8GuM9FplxKZWM3nbZQJN4EMKZRf6+OETr2jN+R1TSCVyqkLJjsj
SavhFo9njL6E642So8644vNhrextYxwymP7n0l0XRE+XWXCW3znoaU44N90V
kuc7mOYOxlDTTpF6GuyG9Yalkb7SxtCPfCASasiCdmWjzdCAEURtqmxEZlmQ
vW/pyL9phOoHHy+mP3XH4+9vceuTjLBdlVv61MUDyVunT9E9jWDD4Zx1qfOA
xLzI4nkNI0hIJ/7WquWJXoW9TZZ8KpaCP3jLZHoiNWxbtVw7FQGkTNW2WU+4
8+1jOy9T8bamPZvl74XRmgBSShIVLPVxze67Xqi+pJ7/aQcVWqObW1v02Sja
XvI8yIgK8hVllcxsNsSVq2f8pak4ZVs163yWjbPhtaX311LxuY/ZJZnHhuWx
3HCdZd0ufiQj5xwb449u6UxLUpF44Dn//K9saEc4Hs4Sp+KFVd6z0utslKkV
ht1bSUVOt+Tppsds8HoPJ5gsULAQURKW1sKGo7ROcOFXCkJXWjOYT9jwtbbc
Ibqsbc0jvj5pZ2NLXXJ8zzwFvF9b9j3rZYO2j5x96DMFzH1pDm+H2bip/WT2
zicKOMIbNUresTG2oDapuazVCm9/Cxllo8bn96+npijgt49wxifY6CZpOARO
UlBiQtecmmIj7/gfZaIfKCC19y9WT7NhZCZrEPWegoTQ2P4fZtlIPpPe2Mej
wKug+OzcHBuzrYUbrv9DwV1ji8g7X9iYEDEdkV/Wek87mYkLbMhk9DQkT1CQ
vzdMy3aRjSsih0rHxin49x/YrClf7LWs/wvw0Itf
            "]]}, 
          Annotation[#, 
           "Charting`Private`Tag$14258#1"]& ]}}, {}}}, {{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            Dashing[{Small, Small}], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1: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

            "]]}, 
          Annotation[#, "Charting`Private`Tag$14417#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$14461#1"]& ]}}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
            0.33333333333333337`]], 
          LineBox[CompressedData["
1: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
XefNJA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$14329#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0]], 
          LineBox[CompressedData["
1:eJwtlgk0VWsDhkWknFMHpbgZjmlzyJDMw34d83E6OMcQyVRCiohKSV0VpbhU
EkncpJFf0k0TrnKjDHGpELeBDFHmUuK//7/2Xmuvvb71ffv73ud5115rM4Mi
+cHCQkJCjf/e/3sG/ZCpT5Z1J4Wvp94tlLoC8/u+DwYVs8nb2brzyy4docbX
yIoBzkiA7gHcPHGU++VVGdmdVtXv07aHmr9HrY/BswEDVm9IFWn44NUp19ho
an0NuWGwxCynYycmlccOD/+oJS9li/lZGkRS79dT++9Aolvd+EebBjJ7D+m+
4kg4tV8zeTHI/2aO3DaIVzeXjtq1kHvHP0zkfgil9m+l8oTA1ct8YCSsjYwq
q5QR79tKnddOqtPC2tqWbcW5z0WKn1JfkaKx7Ga+azB1fgeVfwt6jkp5Ddzq
JC9l5jfyRbdQed6QauffOH6K2Qx1+YS0vvZu0pbbuVxqNIjK9w/FGwSjzsmg
sfi3ZPNZlm+kSBCV9x359Ny8Vlh2IJX3PeUjAAlRATmf8z+Q0/tOrt2VGEDl
7yWFXlrTAvQCqPx9lC9//CXe0PLpyUcy6fVXKf5VP4qnn+TaNcuFqvpRPIOU
z02g5RsvHhwYJFdPQJb3yJfiGyJX92c5r3f1pfiGKd8b4W58CR9pI+Rw4eJb
lqobKd4RMsDpEN2wzofi/UL14QNeyKKHUatGyZEAZcXzdd4U/yg5IHG5MTXO
m+Ifo/raQPGPU315IXMueiLCYoL0ky9Uqc/0onxMkGeUIr3kvL0oH5NUn56U
jymqT090Z/awtgdMkxE/7d5I9nhQfqbJm72lddnFHpSfr1TfHpSfGapvd6Qd
i47pPjlDlhmvz3272x1vPY+taZmZIdfH6/rVObsjaeL2xYq/v5N/HO6sKf0m
QKu2xJHk5FnSxWVAqmmTAGo/lCz3T86S8jpNQ+amAuytN5qOCPxJLnS+MhK7
QgCFrUGhnuZzpLV2XZr+Cz62XbzHVfsyT77R7RFi8Pjo+aM/kaYjBPvSbFU1
XT7E86L9k7YIoc0ytL+NwcfG7cdW7WsRwumQloLRdjcsWFyeEnhjAVLWRMzn
bHXDerZEpJ6/CD5OSrr457lit+ZZ5+uZItjWK2e+NtkV+QymhmqDCFb/SkoF
73TFeI/Ru5WmC1Fe+8D/rY0rzu0PEsxLieJuwHONV90u6C2/Z9z0lxgUOy23
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
C3yYBP4LUlm9fQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$14533#1"]& ]}}, {}}, {{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 3], 0.6666666666666666], 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0]], 
           LineBox[CompressedData["
1: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
/78VN0jXyvXozOT/AkCS4jk=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$14601#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[
             NCache[
              Rational[2, 3], 0.6666666666666666], 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0]], 
           LineBox[CompressedData["
1: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
eRT+BVVAta4=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$14645#1"]& ]}}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]], 
          LineBox[CompressedData["
1:eJxd1GlM0wcYBvBaEAU56jkOhRaqKBRHhX+DcvRBKpTDCvxbELURUETxQFGH
SDM3TDhUBFRErQ6ZiFO0C1JRBJsOmFKgRfDiUOMEAsWu6jhEBmwu9tPe5MmT
39fnw8uIT45MoFIolLVf8l///7zvb6rROpznXujpN/5Ukc796usGHze42mCp
wSqDyw3uNLjGYK3BzQZ/NribK3HeTtm13AxC3ZXwJS91XEE6WLqUuVBuwJGI
vSNcEeP8QbnMBrLp4lvidRPcKUXNh9dedEi6ypXKP6YhQ0YdvhzrhKaEM47O
m6YjKu1EtlHLEgQN7Yy2YZgiYUuta7KzC95f6UpNeWqOq5a8hdbBbqDzbGfS
mDRIQ2a0uke7I+6u4gHLaA4ke85xhnVspDas/3V/3VyMl0gW1x72AGOLYoH+
0HzQA6hioQuBngxpokz4DV43eHjPesBBms+e4XM0G/DkJvGn9nnBOfVekuqj
LfiVLJq9/SokBWii3JoWovfU1NbGW97IuN75fU2GPZa+2UcN2OyLGP7yxiB3
OowtCwJfDvmhK3tQH2jFQMPTX7SOImAgJ95MS3GE6MbtoRiWP5Sk8g1T74gV
e+dE0Ef8cXTQ+tnBZif06OraNZrVaPN3U+yoYeJNjOqa+YUAmG7z+T1Fuhg3
BWnKsDgeLEh21vzUJQgbT5s8sHINLlLe+m5McIbX2ce5LKNAzE/PnVMVsBRj
A6mrW14FwrZquLvScxmy6htX7ZEHYbDaPzaU4YL4k8mZxRI+So/lUMcmXTCb
ljh6TxSMQbvc80F/usIiQ14dRw+B3eHjgpstLLxIL1ea94dgQUmy4sY1Nxxk
Db0rVoTiYraVU1jhcsSq85PqssJg6XvjKnX/t3BYfMRCHbcWJjE/WMrY7nDZ
XW+U6CbA+OelMX0l7jD2rfA1GhGAPML7UWvFxu3699Is9Tr81fvAiZvFRtSi
ujJ1aDhMKjxFxaNs+MrlBaHV4YgVm06LSF6BWVaSn5qYEXDQhx9r7VuBf+L0
wtk5ERD2Ff68XugBMS1nUctIBNS1XoRHiwfeVmnyBBsjoRjviLL28YSAoXVq
V0Ri7iKdqOm6J5j9rk0qFxIyB3Grmk6AftXGNiePhCK7+UV3HoETfhUjIQUk
TPc/qW4uIPDpBb/N/DQJUtwtrTlNQGN2KDv/LAkt+91maREByd7no0WXSMzr
NhvYUEygw/v0k7JyEkluIWOdMgL57ea5DY9ILGhvtO5QE5jYWbo9U0Uivvbx
+KNWAonTfXj8ZhI3yzpe3m0j4Oe18+9mDQn/9IHLRc8I6C6pdjx5RmIXc+ay
6FcE+DsyA9/2kKj/Lmjlcx0BOdXesbSPhGXcOruHegIOF+9MJvSTWB8aPXnn
A4FRTa9cO0hC75D4W+EwgVLPAKePH0nYqDKDRRMEaJquqdtDJLZWnnRdM0Ug
PTGl68DIl30unbUgKBxEXigpGBsjwUspa5tnzIHCY+Xu++Mk8jbJKo1NOFim
fsyXTJDoDKwqHJ7BwZlt25l+UySYbEVqrykHX7+WEMl2D2OezuLgX6G+Jik=

           "]]}, Annotation[#, "Charting`Private`Tag$14715#1"]& ]}}, {}}}, {
    ImageSize -> Large, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"W/S\"", TraditionalForm], 
       FormBox["\"W/P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 80}, {0, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Take - \
off\\)]]\\) = \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\) \
= ``", 2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Take - \
off\\)]]\\) = \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\) \
= ``", 2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Take - \
off\\)]]\\) = \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Take - off\)]]\) \
= ``", 2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Landing\
\\)]]\\) = \\!\\(\\*RowBox[{\\\"2.2`\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) = \
``", 2.2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{0, Small, Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Landing\
\\)]]\\) = \\!\\(\\*RowBox[{\\\"2.2`\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) = \
``", 2.2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(C\\), SubscriptBox[\\(L\\), \\(Landing\
\\)]]\\) = \\!\\(\\*RowBox[{\\\"2.2`\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(C\), SubscriptBox[\(L\), \(Landing\)]]\) = \
``", 2.2], Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(RC_FAR\\\\ 23.65\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(RC_FAR\\ 23.65\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(RC_FAR\\\\ 23.65\\)]\\) = \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(RC_FAR\\ 23.65\)]\) = ``", 10], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(FAR\\\\ 23.67\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(FAR\\ 23.67\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(FAR\\\\ 23.67\\)]\\) = \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(FAR\\ 23.67\)]\) = ``", 10], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(CG_FAR\\\\ 23.65\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(CG_FAR\\ 23.65\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0.33333333333333337`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0.33333333333333337`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 
                    0.33333333333333337`]|>, "RGBColorSwatchTemplate"]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(FAR\\\\ 23.77\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(FAR\\ 23.77\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]], {}}}, AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0.33333333333333337`, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(Time - to - climb\\)]\\) = \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(Time - to - climb\)]\) = ``", 8], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"\\!\\(\\*SubscriptBox[\\(AR\\), \\(Time - to - climb\\)]\\) = \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)\"", 
            StringForm[
            "\!\(\*SubscriptBox[\(AR\), \(Time - to - climb\)]\) = ``", 10], 
            Editable -> False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           InterpretationBox[
           "\"Cruise Speed = \\!\\(\\*TemplateBox[List[\\\"287.6948625`\\\", \
RowBox[List[\\\"\\\\\\\"mi\\\\\\\"\\\", \\\"\\\\[InvisibleSpace]\\\", \
\\\"\\\\\\\"/\\\\\\\"\\\", \\\"\\\\[InvisibleSpace]\\\", \
\\\"\\\\\\\"h\\\\\\\"\\\"]], \\\"miles per hour\\\", \
FractionBox[\\\"\\\\\\\"Miles\\\\\\\"\\\", \\\"\\\\\\\"Hours\\\\\\\"\\\"]], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]]\\)\"", 
            StringForm["Cruise Speed = ``", 
             Quantity[287.6948625, "Hours"^(-1) "Miles"]], Editable -> 
            False]}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[
                    0.4, 0.2666666666666667, 0.13333333333333336`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`]|>,
                     "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8590701110415225`*^9, {3.859095304691721*^9, 3.859095307568719*^9}, 
   3.8590955958790283`*^9, 3.859097614422593*^9, 3.859097649191728*^9},
 CellLabel->
  "Out[911]=",ExpressionUUID->"b228d4a1-7850-4ac6-8e71-bf7f22d40f5b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 573.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7b6fb162-8573-4c4f-b2c9-5fc9fe7dc284"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 352, 5, 88, "Title",ExpressionUUID->"f7e08502-4a0e-4ba6-ba80-03be77244f61"],
Cell[935, 29, 339, 8, 25, "Input",ExpressionUUID->"0f728fdf-4872-43b8-af30-d4f432fb7698"],
Cell[CellGroupData[{
Cell[1299, 41, 166, 3, 59, "Section",ExpressionUUID->"e005d70a-dfd9-43db-8142-f8f720be78f5"],
Cell[CellGroupData[{
Cell[1490, 48, 174, 3, 48, "Subsection",ExpressionUUID->"e3d6fa18-57e2-4ab3-9c89-2653a3062dfa"],
Cell[CellGroupData[{
Cell[1689, 55, 1220, 23, 62, "Code",ExpressionUUID->"0fb9433f-587e-410e-bf16-659e2243e85a"],
Cell[2912, 80, 66443, 1234, 422, "Output",ExpressionUUID->"ea8c3381-00f6-4377-a2f5-b1882ed35780"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69404, 1320, 165, 3, 48, "Subsection",ExpressionUUID->"2b7592bc-1cd9-422e-bbdd-cbb8cde2d208"],
Cell[69572, 1325, 71531, 1180, 401, "Code",ExpressionUUID->"c4e0f289-5e7a-4a09-821f-f2d5beb5ce6f",
 Evaluatable->False],
Cell[141106, 2507, 177, 3, 25, "Input",ExpressionUUID->"7101bb6c-92b3-4e04-b12f-5858401cf27f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141320, 2515, 168, 3, 48, "Subsection",ExpressionUUID->"93fd4a74-85ec-46f6-9b4c-49119a49f00a"],
Cell[CellGroupData[{
Cell[141513, 2522, 257, 4, 40, "Subsubsection",ExpressionUUID->"c30b081a-09dd-4d83-b3dc-c772755c47a5"],
Cell[CellGroupData[{
Cell[141795, 2530, 1439, 28, 62, "Code",ExpressionUUID->"6eeff20a-7d0b-4aaf-8109-4abf082cb3d9"],
Cell[143237, 2560, 113591, 2224, 370, "Output",ExpressionUUID->"f2e76979-e759-41dc-b67b-d5f0846d82f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256865, 4789, 916, 20, 61, "Code",ExpressionUUID->"169fbeef-2abd-4815-ae95-29cd75c84b5a"],
Cell[CellGroupData[{
Cell[257806, 4813, 617, 13, 19, "Print",ExpressionUUID->"ade20fc9-02d3-48f1-bb66-031ab8ce1fb5"],
Cell[258426, 4828, 599, 12, 19, "Print",ExpressionUUID->"42e11797-3127-4d4d-b7bc-4d9d8fbc79f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259086, 4847, 227, 4, 40, "Subsubsection",ExpressionUUID->"a9adbf46-2e06-4d7b-bf41-3f7fb43cef8e"],
Cell[259316, 4853, 407, 11, 46, "Code",ExpressionUUID->"c3841dcc-fe89-471c-8366-adc6f3f81c27"],
Cell[259726, 4866, 272, 9, 114, "Text",ExpressionUUID->"5d5b046f-17ac-4ee9-91fe-abbfe0ecb1d1"],
Cell[260001, 4877, 1329, 26, 45, "Code",ExpressionUUID->"de1d3312-682f-4c3b-bcee-24e925a01efa"],
Cell[261333, 4905, 169, 3, 31, "Text",ExpressionUUID->"1bd0745a-d182-4dc3-bb2d-7fc4d4ea01f2"],
Cell[CellGroupData[{
Cell[261527, 4912, 1341, 39, 144, "Code",ExpressionUUID->"52043f53-68ed-43ad-a14c-58db5c487395"],
Cell[262871, 4953, 306, 6, 28, "Output",ExpressionUUID->"90a5a35b-420c-4dfb-881e-d811ba873ef5"]
}, Open  ]],
Cell[263192, 4962, 411, 7, 31, "Text",ExpressionUUID->"0478f95e-cb1d-44aa-a970-884c061b40d8"],
Cell[CellGroupData[{
Cell[263628, 4973, 2838, 72, 271, "Code",ExpressionUUID->"cd20ee48-0d8b-4d5d-81f7-748c841853b6"],
Cell[266469, 5047, 283, 5, 28, "Output",ExpressionUUID->"823c43b8-5c97-4a31-9d2a-035ef577dfd4"],
Cell[266755, 5054, 281, 5, 28, "Output",ExpressionUUID->"be85ff4e-9db0-45e7-b18e-6d855adaffbc"],
Cell[267039, 5061, 279, 5, 28, "Output",ExpressionUUID->"48ae2b61-043d-4b02-b110-0c12e53c5924"],
Cell[267321, 5068, 282, 5, 28, "Output",ExpressionUUID->"f9f33f17-b78b-4c1c-935d-cf59dd599c88"],
Cell[267606, 5075, 283, 5, 28, "Output",ExpressionUUID->"db00d3dd-b953-4fab-b5f8-303747d25279"]
}, Open  ]],
Cell[267904, 5083, 363, 9, 72, "Text",ExpressionUUID->"825612b7-a1d0-4cd5-91fc-9efb7f85783b"],
Cell[CellGroupData[{
Cell[268292, 5096, 2466, 51, 79, "Code",ExpressionUUID->"fb4f7ead-0465-489d-9b99-ddeddbcb2be9"],
Cell[270761, 5149, 3009, 70, 69, "Output",ExpressionUUID->"665901fc-6302-41b8-a754-14d5887942e0"]
}, Open  ]],
Cell[273785, 5222, 957, 20, 70, "Code",ExpressionUUID->"da8453f3-a4dc-4a49-83df-c58ad26b7815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274779, 5247, 172, 3, 40, "Subsubsection",ExpressionUUID->"deffe1d8-3166-43e1-886e-96edfcae14b3"],
Cell[CellGroupData[{
Cell[274976, 5254, 1080, 27, 61, "Code",ExpressionUUID->"1dc4bec2-061d-4c8a-945f-588cfed7b561"],
Cell[CellGroupData[{
Cell[276081, 5285, 619, 12, 19, "Print",ExpressionUUID->"75ec6295-b8a9-4dc6-9a84-27a769bbe252"],
Cell[276703, 5299, 594, 12, 19, "Print",ExpressionUUID->"909f0c8c-b5f2-48bf-9f7c-aea29b0839df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277358, 5318, 168, 3, 40, "Subsubsection",ExpressionUUID->"87d6c7ca-32dc-4925-b05c-8d31a49f16e0"],
Cell[277529, 5323, 2125, 42, 103, "Code",ExpressionUUID->"7f58e557-6803-4c4f-85a0-bafb6349d7d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279691, 5370, 165, 3, 40, "Subsubsection",ExpressionUUID->"3dbd5a97-4b94-4791-9285-9b66111a97b8"],
Cell[279859, 5375, 529, 11, 45, "Code",ExpressionUUID->"4fb477ee-988e-4ab1-b7cd-ef1db263b20e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280425, 5391, 162, 3, 40, "Subsubsection",ExpressionUUID->"8e443274-660c-4ceb-8fbe-3351bdef8b5e"],
Cell[280590, 5396, 506, 14, 45, "Code",ExpressionUUID->"e768d3cb-da5b-44a8-a650-cdb13a31cb0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281145, 5416, 365, 6, 53, "Subsection",ExpressionUUID->"815d93f6-48d1-4c22-b08b-de3be8ed59ae"],
Cell[CellGroupData[{
Cell[281535, 5426, 951, 21, 93, "Code",ExpressionUUID->"de562f66-7b2e-4853-9e86-bcc66ac0f292"],
Cell[CellGroupData[{
Cell[282511, 5451, 700, 13, 19, "Print",ExpressionUUID->"893716ad-b37d-4b21-8f45-a3682fa1cfb6"],
Cell[283214, 5466, 748, 15, 19, "Print",ExpressionUUID->"fa3d2d75-44fb-43e3-acde-c59491e9c271"],
Cell[283965, 5483, 748, 15, 19, "Print",ExpressionUUID->"27aab536-8a52-4923-9ce9-b2768c3590b5"],
Cell[284716, 5500, 748, 15, 19, "Print",ExpressionUUID->"5f845d6b-dab7-436c-ad84-382e77d7d4d3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285537, 5523, 176, 3, 59, "Section",ExpressionUUID->"e27e248c-5207-4406-8565-6ddcbfbeec64"],
Cell[285716, 5528, 352, 8, 45, "Code",ExpressionUUID->"d0fd0bff-a7f8-4ab4-ac75-3ffc0b6aed1b"],
Cell[CellGroupData[{
Cell[286093, 5540, 238, 4, 40, "Subsubsection",ExpressionUUID->"05f4c6a8-7794-47ef-9ac4-a476b89777f3"],
Cell[286334, 5546, 800, 19, 49, "Code",ExpressionUUID->"93b028bc-5f15-4de7-bf2d-59e6ec1bf0a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287171, 5570, 195, 3, 40, "Subsubsection",ExpressionUUID->"70d1cdfe-4289-4617-80ec-159daeb8053a"],
Cell[287369, 5575, 845, 20, 65, "Code",ExpressionUUID->"00f19d89-c4e8-44f7-844c-9cf41a27bf77"],
Cell[288217, 5597, 800, 22, 50, "Text",ExpressionUUID->"d27084be-32ee-4ac2-8fa4-ad0877e3c3bd"],
Cell[CellGroupData[{
Cell[289042, 5623, 957, 24, 62, "Code",ExpressionUUID->"2de84264-5f3a-42e6-ab98-a3eaab1c7e55"],
Cell[290002, 5649, 216, 4, 28, "Output",ExpressionUUID->"0d541798-95ef-41ec-8748-733ae68892d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290267, 5659, 188, 3, 40, "Subsubsection",ExpressionUUID->"f6238fed-db90-47a7-9929-6ed76749b9aa"],
Cell[290458, 5664, 235, 6, 31, "Text",ExpressionUUID->"4c060371-f967-4cc3-821f-05cb76476f2e"],
Cell[290696, 5672, 780, 16, 49, "Code",ExpressionUUID->"52c8b444-4758-440f-b940-b26ef9e55333"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291513, 5693, 260, 4, 40, "Subsubsection",ExpressionUUID->"de4f3ad3-6c90-4d81-b9c5-1dcfa3bae9bc"],
Cell[291776, 5699, 178, 3, 31, "Text",ExpressionUUID->"311169a7-f997-49d8-ae78-0fd130874051"],
Cell[291957, 5704, 380, 11, 45, "Code",ExpressionUUID->"26dff1c8-d291-44ed-9c6e-c8f27badaacf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292374, 5720, 212, 4, 40, "Subsubsection",ExpressionUUID->"89402fe6-b453-476e-a786-6e7de6523a94"],
Cell[292589, 5726, 375, 10, 32, "Text",ExpressionUUID->"a2a1d71e-39c7-47fa-9bfc-06fb71158252"],
Cell[CellGroupData[{
Cell[292989, 5740, 1146, 24, 66, "Code",ExpressionUUID->"ebd7b1b2-9d02-48a8-aca3-39ca2a53f286"],
Cell[294138, 5766, 270, 4, 28, "Output",ExpressionUUID->"b5fc3373-431b-4bea-8f59-8048f04aae4c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[294457, 5776, 258, 4, 40, "Subsubsection",ExpressionUUID->"03434159-b7e4-4e4b-ba84-ba62f3725c4a"],
Cell[294718, 5782, 433, 11, 32, "Text",ExpressionUUID->"793cad06-81c2-4a4f-ab4d-2e42aaa8ff70"],
Cell[CellGroupData[{
Cell[295176, 5797, 1417, 33, 87, "Code",ExpressionUUID->"d0f45d0f-0bda-4d03-83e2-8837e5ffba1b"],
Cell[296596, 5832, 239, 5, 28, "Output",ExpressionUUID->"64cce2ab-ae36-4d8e-b8d5-7d2571bdfe22"],
Cell[296838, 5839, 223, 4, 28, "Output",ExpressionUUID->"dd5206d3-f5cf-4c0c-86d3-9190440fe921"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297110, 5849, 302, 4, 40, "Subsubsection",ExpressionUUID->"f6189a21-0977-412d-bf8a-1a2a3550ff4f"],
Cell[297415, 5855, 477, 11, 31, "Text",ExpressionUUID->"84a094f6-a179-4da2-998c-b45ceb703ffb"],
Cell[297895, 5868, 906, 19, 49, "Code",ExpressionUUID->"df38b197-e52c-4b00-8571-68afaaece916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298838, 5892, 162, 3, 40, "Subsubsection",ExpressionUUID->"761a3606-4a8d-4283-9bf9-7a958c89635a"],
Cell[CellGroupData[{
Cell[299025, 5899, 1784, 37, 64, "Code",ExpressionUUID->"baff1ab8-d484-40c9-93a1-d3347b061dee"],
Cell[300812, 5938, 3448, 76, 238, "Output",ExpressionUUID->"2cc90300-ebd2-4b55-8f1f-a3424aa2fb68"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[304309, 6020, 230, 5, 40, "Subsubsection",ExpressionUUID->"8dd4a550-b0b5-4cd3-af0d-8927ff88b0f3"],
Cell[CellGroupData[{
Cell[304564, 6029, 1720, 40, 43, "Input",ExpressionUUID->"1336997e-f404-434a-9f0f-944cd625ee88"],
Cell[306287, 6071, 238, 5, 28, "Output",ExpressionUUID->"4ec2f19d-50a1-4ab1-8e1b-58db11106f2a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306586, 6083, 157, 3, 59, "Section",ExpressionUUID->"e7f1f915-dd65-4a8c-8812-2d2ae6299cdc"],
Cell[306746, 6088, 1532, 28, 64, "Code",ExpressionUUID->"41136edd-e4f0-4605-b7c3-74a4c37ce9aa"],
Cell[CellGroupData[{
Cell[308303, 6120, 243, 4, 48, "Subsection",ExpressionUUID->"0e4a1748-baa2-4f14-88a9-7003cd746663"],
Cell[308549, 6126, 162, 3, 31, "Text",ExpressionUUID->"76dcf6fa-3eec-47b0-bece-86643d7c5b4c"],
Cell[CellGroupData[{
Cell[308736, 6133, 6580, 148, 254, "Code",ExpressionUUID->"25c357f5-1704-4aaf-b416-e92a1847a480"],
Cell[315319, 6283, 782, 12, 39, "Print",ExpressionUUID->"255cae4a-c858-4e0c-9115-a543860a5d3f"],
Cell[316104, 6297, 29777, 559, 333, "Output",ExpressionUUID->"e33be139-a17a-45f3-862e-8fac9a17e704"],
Cell[345884, 6858, 854, 17, 52, "Print",ExpressionUUID->"0c907acd-3f21-4213-b23a-45a536386afb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[346787, 6881, 338, 5, 48, "Subsection",ExpressionUUID->"704fc88a-fa4c-4c18-848d-a2046893cbd8"],
Cell[347128, 6888, 165, 3, 31, "Text",ExpressionUUID->"b3cb388b-c157-4f25-8e1a-b81fe52df09f"],
Cell[CellGroupData[{
Cell[347318, 6895, 6980, 149, 271, "Code",ExpressionUUID->"507e9548-93e7-458e-aca5-b2296c373682"],
Cell[354301, 7046, 564, 8, 28, "Output",ExpressionUUID->"e0014ed6-5c11-4d3c-8870-0cebd6e37a6d"],
Cell[354868, 7056, 681, 10, 21, "Print",ExpressionUUID->"d6d52064-63ec-44bf-8866-98262d48fbc5"],
Cell[355552, 7068, 18235, 384, 333, "Output",ExpressionUUID->"18fb0017-e142-4ba5-b5bc-401d3278cfd6"],
Cell[373790, 7454, 1397, 26, 60, "Print",ExpressionUUID->"9002301f-831a-409c-a4a7-b05e62272cf6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375236, 7486, 225, 4, 48, "Subsection",ExpressionUUID->"532e4c0d-b7c2-472f-b8b5-f919e4687b87"],
Cell[375464, 7492, 174, 3, 31, "Text",ExpressionUUID->"fcfdf1e9-17e5-4e9e-a0a9-a8452906ab82"],
Cell[375641, 7497, 128067, 2107, 211, "Item",ExpressionUUID->"f5e51b64-12e2-4757-bbcb-7eb62403ba7e"],
Cell[CellGroupData[{
Cell[503733, 9608, 222, 4, 40, "Subsubsection",ExpressionUUID->"71387257-98f6-43c1-afd4-aef4ccb75f9b"],
Cell[503958, 9614, 4659, 127, 310, "Code",ExpressionUUID->"9f694199-3538-41a1-ae40-84552b802979"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508654, 9746, 226, 4, 40, "Subsubsection",ExpressionUUID->"009246c0-6994-421e-a5cf-b9476ec1bb65"],
Cell[CellGroupData[{
Cell[508905, 9754, 7702, 212, 408, "Code",ExpressionUUID->"7cafeb20-7460-4583-ab13-4942a9700494"],
Cell[CellGroupData[{
Cell[516632, 9970, 888, 17, 68, "Print",ExpressionUUID->"87558fa0-796b-4aab-b5c4-6245fb64e08e"],
Cell[517523, 9989, 1835, 39, 99, "Print",ExpressionUUID->"9437fd21-13f1-4425-ae5c-06a3282f75a2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[519419, 10035, 168, 3, 40, "Subsubsection",ExpressionUUID->"3c1a46fe-2840-4403-8170-b3238793e4aa"],
Cell[519590, 10040, 158, 3, 31, "Text",ExpressionUUID->"7cbf2a40-4583-4a41-8f8a-20516eeb573a"],
Cell[CellGroupData[{
Cell[519773, 10047, 8263, 194, 266, "Code",ExpressionUUID->"2ba458c3-92d4-46b6-9e1f-72c618aa340f"],
Cell[CellGroupData[{
Cell[528061, 10245, 1509, 28, 53, "Print",ExpressionUUID->"e32cf04a-25f1-4505-b512-d0cc1a936323"],
Cell[529573, 10275, 1155, 26, 49, "Print",ExpressionUUID->"277166a0-f3aa-48f5-b5e4-da3aa76e85a5"]
}, Open  ]],
Cell[530743, 10304, 1845, 44, 123, "Output",ExpressionUUID->"56e67461-b00e-4a42-990f-723c8dbaa433"],
Cell[532591, 10350, 561, 9, 21, "Print",ExpressionUUID->"5789151e-c0a9-4240-aeed-d289986e565c"],
Cell[533155, 10361, 18015, 356, 333, "Output",ExpressionUUID->"59033960-c3fa-4464-84cb-73e91115e42b"]
}, Open  ]],
Cell[551185, 10720, 159, 3, 31, "Text",ExpressionUUID->"3a293b35-a704-4bd2-880f-dccc7f4c5e40"],
Cell[CellGroupData[{
Cell[551369, 10727, 5355, 135, 244, "Code",ExpressionUUID->"8c9acf37-f372-42a4-a9c9-258c5e175fc3"],
Cell[CellGroupData[{
Cell[556749, 10866, 1178, 23, 71, "Print",ExpressionUUID->"27addbfb-b719-4237-af82-ab51ca2e3f23"],
Cell[557930, 10891, 552, 12, 38, "Print",ExpressionUUID->"6d2c9678-fe10-404f-b720-bf099e10ca1b"]
}, Open  ]],
Cell[558497, 10906, 1696, 42, 123, "Output",ExpressionUUID->"80e71e6d-a2ff-4f52-8153-4ee69e0e0af7"],
Cell[560196, 10950, 404, 7, 21, "Print",ExpressionUUID->"0cf93fc9-58f2-46cb-81d3-a6a7b2fcab66"],
Cell[560603, 10959, 10322, 204, 333, "Output",ExpressionUUID->"f95057bf-71b4-48f4-bdaa-05d218cc334d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570974, 11169, 170, 3, 40, "Subsubsection",ExpressionUUID->"de9820d4-3c09-43be-ac89-8f9f92ec9f29"],
Cell[CellGroupData[{
Cell[571169, 11176, 11508, 269, 378, "Code",ExpressionUUID->"cc657d1a-431b-4273-92dc-4487db5fce6e"],
Cell[582680, 11447, 8982, 245, 105, "Output",ExpressionUUID->"6101ed26-d6fc-4c08-a84d-eefd261b7aee"],
Cell[CellGroupData[{
Cell[591687, 11696, 1409, 26, 53, "Print",ExpressionUUID->"978ea3ac-23fc-42bc-901e-58c06ca180a2"],
Cell[593099, 11724, 1053, 24, 49, "Print",ExpressionUUID->"dcc6eb0a-2a54-4f1c-981f-00e13f0f3a7c"]
}, Open  ]],
Cell[594167, 11751, 2125, 50, 141, "Output",ExpressionUUID->"d9c2a2ee-7785-4107-ae5e-b6f9cfa699a0"],
Cell[596295, 11803, 420, 7, 21, "Print",ExpressionUUID->"b2c18cba-15ec-4302-b1cf-7d44d60f9266"],
Cell[596718, 11812, 18550, 357, 333, "Output",ExpressionUUID->"5362d527-b2c9-4803-a1e2-bf1314200d58"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[615317, 12175, 162, 3, 40, "Subsubsection",ExpressionUUID->"38ad1127-a898-4088-ab5b-c46b3641cfac"],
Cell[CellGroupData[{
Cell[615504, 12182, 6378, 151, 275, "Code",ExpressionUUID->"bbaf702d-42b2-42b7-811c-444cf390cd9a"],
Cell[CellGroupData[{
Cell[621907, 12337, 1180, 23, 71, "Print",ExpressionUUID->"2a2f7a10-f202-4a7b-8d08-ad3225b113e7"],
Cell[623090, 12362, 553, 12, 38, "Print",ExpressionUUID->"b56f5ef9-c5f6-4c56-a0f9-e126cc2da82a"]
}, Open  ]],
Cell[623658, 12377, 1381, 38, 123, "Output",ExpressionUUID->"07505619-2da6-4251-813f-aa68cd32b180"],
Cell[625042, 12417, 407, 7, 21, "Print",ExpressionUUID->"df2eccec-898c-46b9-8804-31e1c966a2d9"],
Cell[625452, 12426, 10188, 200, 333, "Output",ExpressionUUID->"b234c852-4d4b-4f60-874f-2df520425d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[635701, 12633, 372, 5, 48, "Subsection",ExpressionUUID->"3dbf6138-e67b-4124-8ed3-a43fea89df26"],
Cell[CellGroupData[{
Cell[636098, 12642, 215, 4, 40, "Subsubsection",ExpressionUUID->"6551fe18-c99e-4ee6-9c6d-e9359eb429d4"],
Cell[636316, 12648, 195, 3, 31, "Text",ExpressionUUID->"47504c8a-a3f9-4fd1-a9e2-1c3196f03ae4"],
Cell[CellGroupData[{
Cell[636536, 12655, 7736, 204, 414, "Code",ExpressionUUID->"cf066d3f-beb6-4a90-85bc-38f365482507"],
Cell[CellGroupData[{
Cell[644297, 12863, 2376, 46, 103, "Print",ExpressionUUID->"1ad961a5-b800-4a5b-95f2-3f9b6640a5f9"],
Cell[646676, 12911, 1025, 23, 49, "Print",ExpressionUUID->"705a1b5c-88a9-46a4-84d3-b0227e75db1e"]
}, Open  ]],
Cell[647716, 12937, 1384, 38, 123, "Output",ExpressionUUID->"cf73a94b-8edf-493b-b3d3-3aaf8cd30855"],
Cell[649103, 12977, 403, 7, 21, "Print",ExpressionUUID->"bac4b1e1-a876-46d0-8a5e-3e9c7b0b5c16"],
Cell[649509, 12986, 16794, 337, 333, "Output",ExpressionUUID->"10a64c66-3671-45ed-a0dc-75d153839120"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[666352, 13329, 220, 4, 40, "Subsubsection",ExpressionUUID->"5606d038-5f72-4e7c-ac6f-23956c59b939"],
Cell[666575, 13335, 175, 3, 45, "Code",ExpressionUUID->"b62fde8f-cea2-468a-9fac-7e4a202d2e82"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[666799, 13344, 260, 4, 48, "Subsection",ExpressionUUID->"539cac19-b505-4d51-aea1-aab03ddbf91a"],
Cell[CellGroupData[{
Cell[667084, 13352, 3609, 84, 179, "Code",ExpressionUUID->"13ec86d6-c2c7-4192-b560-e990e09fbd87"],
Cell[670696, 13438, 379, 6, 28, "Output",ExpressionUUID->"5bce7003-3bc7-4e99-bce2-d8d277d141be"],
Cell[CellGroupData[{
Cell[671100, 13448, 599, 12, 19, "Print",ExpressionUUID->"34134904-afc5-4248-b523-413a11bf177e"],
Cell[671702, 13462, 490, 8, 21, "Print",ExpressionUUID->"fbeff2ef-9dc1-429a-9ce9-7989c8a22276"]
}, Open  ]],
Cell[672207, 13473, 7970, 162, 333, "Output",ExpressionUUID->"7b9914a0-beb1-4e13-b7df-20b73ec385bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[680238, 13642, 170, 3, 59, "Section",ExpressionUUID->"410157cb-dfe6-47e8-8c5f-7973a245ed52"],
Cell[CellGroupData[{
Cell[680433, 13649, 887, 16, 46, "Code",ExpressionUUID->"20c2e25c-10ad-4bc4-83a1-f8f179c23cfd"],
Cell[681323, 13667, 113821, 2220, 527, "Output",ExpressionUUID->"b228d4a1-7850-4ac6-8e71-bf7f22d40f5b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

